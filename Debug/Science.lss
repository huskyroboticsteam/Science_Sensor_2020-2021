
Science.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000110  00800100  000047cc  00004860  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000047cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000051  00800210  00800210  00004970  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00004970  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000049a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005d8  00000000  00000000  000049e0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000585b  00000000  00000000  00004fb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002213  00000000  00000000  0000a813  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003021  00000000  00000000  0000ca26  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000fe4  00000000  00000000  0000fa48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000012d1  00000000  00000000  00010a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000048a9  00000000  00000000  00011cfd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000588  00000000  00000000  000165a6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 05 14 	jmp	0x280a	; 0x280a <__ctors_end>
       4:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
       8:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
       c:	0c 94 cc 16 	jmp	0x2d98	; 0x2d98 <__vector_3>
      10:	0c 94 34 17 	jmp	0x2e68	; 0x2e68 <__vector_4>
      14:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      18:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      1c:	0c 94 fc 15 	jmp	0x2bf8	; 0x2bf8 <__vector_7>
      20:	0c 94 64 16 	jmp	0x2cc8	; 0x2cc8 <__vector_8>
      24:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      28:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      2c:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      30:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      34:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      38:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      3c:	0c 94 c5 1f 	jmp	0x3f8a	; 0x3f8a <__vector_15>
      40:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      44:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      48:	0c 94 e9 1c 	jmp	0x39d2	; 0x39d2 <__vector_18>
      4c:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      50:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      54:	0c 94 92 20 	jmp	0x4124	; 0x4124 <__vector_21>
      58:	0c 94 ba 20 	jmp	0x4174	; 0x4174 <__vector_22>
      5c:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      60:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      64:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      68:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      6c:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      70:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      74:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      78:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      7c:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      80:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      84:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      88:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      8c:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>
      90:	0c 94 23 14 	jmp	0x2846	; 0x2846 <__bad_interrupt>

00000094 <__trampolines_end>:
      94:	78 79       	andi	r23, 0x98	; 152
      96:	81 84       	ldd	r8, Z+9	; 0x09
      98:	88 8b       	std	Y+16, r24	; 0x10
      9a:	89 84       	ldd	r8, Y+9	; 0x09
      9c:	82 7e       	andi	r24, 0xE2	; 226
      9e:	7a 77       	andi	r23, 0x7A	; 122
      a0:	75 7a       	andi	r23, 0xA5	; 165
      a2:	7f 82       	std	Y+7, r7	; 0x07
      a4:	88 8a       	std	Y+16, r8	; 0x10
      a6:	88 86       	std	Y+8, r8	; 0x08
      a8:	7f 7c       	andi	r23, 0xCF	; 207
      aa:	7b 7b       	andi	r23, 0xBB	; 187
      ac:	7e 81       	ldd	r23, Y+6	; 0x06
      ae:	84 87       	std	Z+12, r24	; 0x0c
      b0:	89 88       	ldd	r8, Y+17	; 0x11
      b2:	87 84       	ldd	r8, Z+15	; 0x0f
      b4:	7c 78       	andi	r23, 0x8C	; 140
      b6:	74 7c       	andi	r23, 0xC4	; 196
      b8:	82 84       	ldd	r8, Z+10	; 0x0a
      ba:	89 88       	ldd	r8, Y+17	; 0x11
      bc:	87 81       	ldd	r24, Z+7	; 0x07
      be:	7d 7f       	andi	r23, 0xFD	; 253
      c0:	80 83       	st	Z, r24
      c2:	87 8a       	std	Z+23, r8	; 0x17
      c4:	8f 92       	push	r8
      c6:	95 93       	las	Z, r25
      c8:	92 94       	swap	r9
      ca:	8f 89       	ldd	r24, Y+23	; 0x17
      cc:	84 85       	ldd	r24, Z+12	; 0x0c
      ce:	8b 8c       	ldd	r8, Y+27	; 0x1b
      d0:	8f 8f       	std	Y+31, r24	; 0x1f
      d2:	8e 89       	ldd	r24, Y+22	; 0x16
      d4:	83 81       	ldd	r24, Z+3	; 0x03
      d6:	7f 84       	ldd	r7, Y+15	; 0x0f
      d8:	86 8b       	std	Z+22, r24	; 0x16
      da:	92 91       	ld	r25, -Z
      dc:	90 88       	ldd	r9, Z+16	; 0x10
      de:	80 81       	ld	r24, Z
      e0:	7b 77       	andi	r23, 0x7B	; 123
      e2:	72 74       	andi	r23, 0x42	; 66
      e4:	7d 7f       	andi	r23, 0xFD	; 253
      e6:	82 86       	std	Z+10, r8	; 0x0a
      e8:	86 81       	ldd	r24, Z+6	; 0x06
      ea:	77 71       	andi	r23, 0x17	; 23
      ec:	71 74       	andi	r23, 0x41	; 65
      ee:	7a 7d       	andi	r23, 0xDA	; 218
      f0:	7f 83       	std	Y+7, r23	; 0x07
      f2:	86 84       	ldd	r8, Z+14	; 0x0e
      f4:	81 7f       	andi	r24, 0xF1	; 241
      f6:	7f 78       	andi	r23, 0x8F	; 143
      f8:	6e 6d       	ori	r22, 0xDE	; 222
      fa:	6c 72       	andi	r22, 0x2C	; 44
      fc:	75 79       	andi	r23, 0x95	; 149
      fe:	7b 78       	andi	r23, 0x8B	; 139
     100:	77 73       	andi	r23, 0x37	; 55
     102:	70 72       	andi	r23, 0x20	; 32
     104:	74 76       	andi	r23, 0x64	; 100
     106:	75 76       	andi	r23, 0x65	; 101
     108:	7a 7c       	andi	r23, 0xCA	; 202
     10a:	7f 82       	std	Y+7, r7	; 0x07
     10c:	7f 80       	ldd	r7, Y+7	; 0x07
     10e:	7f 76       	andi	r23, 0x6F	; 111
     110:	74 72       	andi	r23, 0x24	; 36
     112:	79 7c       	andi	r23, 0xC9	; 201
     114:	7e 84       	ldd	r7, Y+14	; 0x0e
     116:	82 7e       	andi	r24, 0xE2	; 226
     118:	78 74       	andi	r23, 0x48	; 72
     11a:	74 73       	andi	r23, 0x34	; 52
     11c:	78 7d       	andi	r23, 0xD8	; 216
     11e:	7e 83       	std	Y+6, r23	; 0x06
     120:	86 86       	std	Z+14, r8	; 0x0e
     122:	86 84       	ldd	r8, Z+14	; 0x0e
     124:	80 79       	andi	r24, 0x90	; 144
     126:	7c 76       	andi	r23, 0x6C	; 108
     128:	70 70       	andi	r23, 0x00	; 0
     12a:	71 79       	andi	r23, 0x91	; 145
     12c:	7b 83       	std	Y+3, r23	; 0x03
     12e:	84 7f       	andi	r24, 0xF4	; 244
     130:	7d 77       	andi	r23, 0x7D	; 125
     132:	77 7b       	andi	r23, 0xB7	; 183
     134:	81 83       	std	Z+1, r24	; 0x01
     136:	81 83       	std	Z+1, r24	; 0x01
     138:	88 87       	std	Y+8, r24	; 0x08
     13a:	89 8c       	ldd	r8, Y+25	; 0x19
     13c:	8d 8a       	std	Y+21, r8	; 0x15
     13e:	8c 8a       	std	Y+20, r8	; 0x14
     140:	80 7c       	andi	r24, 0xC0	; 192
     142:	79 7f       	andi	r23, 0xF9	; 249
     144:	81 86       	std	Z+9, r8	; 0x09
     146:	8a 8b       	std	Y+18, r24	; 0x12
     148:	8c 87       	std	Y+12, r24	; 0x0c
     14a:	89 89       	ldd	r24, Y+17	; 0x11
     14c:	89 8d       	ldd	r24, Y+25	; 0x19
     14e:	8a 8b       	std	Y+18, r24	; 0x12
     150:	8e 92       	st	-X, r8
     152:	93 92       	.word	0x9293	; ????
     154:	94 8d       	ldd	r25, Z+28	; 0x1c
     156:	89 8d       	ldd	r24, Y+25	; 0x19
     158:	85 81       	ldd	r24, Z+5	; 0x05
     15a:	80 80       	ld	r8, Z
     15c:	86 87       	std	Z+14, r24	; 0x0e
     15e:	8a 87       	std	Y+10, r24	; 0x0a
     160:	86 85       	ldd	r24, Z+14	; 0x0e
     162:	83 84       	ldd	r8, Z+11	; 0x0b
     164:	82 83       	std	Z+2, r24	; 0x02
     166:	81 7f       	andi	r24, 0xF1	; 241
     168:	83 84       	ldd	r8, Z+11	; 0x0b
     16a:	87 83       	std	Z+7, r24	; 0x07
     16c:	81 83       	std	Z+1, r24	; 0x01
     16e:	7f 7c       	andi	r23, 0xCF	; 207
     170:	7c 76       	andi	r23, 0x6C	; 108
     172:	6d 64       	ori	r22, 0x4D	; 77
     174:	62 6b       	ori	r22, 0xB2	; 178
     176:	6c 6f       	ori	r22, 0xFC	; 252
     178:	6e 70       	andi	r22, 0x0E	; 14
     17a:	70 6d       	ori	r23, 0xD0	; 208
     17c:	6f 72       	andi	r22, 0x2F	; 47
     17e:	78 74       	andi	r23, 0x48	; 72
     180:	73 76       	andi	r23, 0x63	; 99
     182:	7e 83       	std	Y+6, r23	; 0x06
     184:	84 85       	ldd	r24, Z+12	; 0x0c
     186:	84 82       	std	Z+4, r8	; 0x04
     188:	85 85       	ldd	r24, Z+13	; 0x0d
     18a:	7c 76       	andi	r23, 0x6C	; 108
     18c:	73 77       	andi	r23, 0x73	; 115
     18e:	7b 7b       	andi	r23, 0xBB	; 187
     190:	7b 7d       	andi	r23, 0xDB	; 219
     192:	7e 78       	andi	r23, 0x8E	; 142
     194:	7a 7b       	andi	r23, 0xBA	; 186
     196:	7c 7f       	andi	r23, 0xFC	; 252
     198:	82 84       	ldd	r8, Z+10	; 0x0a
     19a:	86 8b       	std	Z+22, r24	; 0x16
     19c:	90 94       	com	r9
     19e:	94 8f       	std	Z+28, r25	; 0x1c
     1a0:	8b 8a       	std	Y+19, r8	; 0x13
     1a2:	80 7c       	andi	r24, 0xC0	; 192
     1a4:	78 7a       	andi	r23, 0xA8	; 168
     1a6:	84 87       	std	Z+12, r24	; 0x0c
     1a8:	8b 88       	ldd	r8, Y+19	; 0x13
     1aa:	8a 88       	ldd	r8, Y+18	; 0x12
     1ac:	84 85       	ldd	r24, Z+12	; 0x0c
     1ae:	84 89       	ldd	r24, Z+20	; 0x14
     1b0:	84 82       	std	Z+4, r8	; 0x04
     1b2:	87 8f       	std	Z+31, r24	; 0x1f
     1b4:	97 92       	lat	Z, r9
     1b6:	90 8f       	std	Z+24, r25	; 0x18
     1b8:	8f 88       	ldd	r8, Y+23	; 0x17
     1ba:	79 75       	andi	r23, 0x59	; 89
     1bc:	73 78       	andi	r23, 0x83	; 131
     1be:	7b 7e       	andi	r23, 0xEB	; 235
     1c0:	83 80       	ldd	r8, Z+3	; 0x03
     1c2:	7a 75       	andi	r23, 0x5A	; 90
     1c4:	73 75       	andi	r23, 0x53	; 83
     1c6:	77 7a       	andi	r23, 0xA7	; 167
     1c8:	7d 7d       	andi	r23, 0xDD	; 221
     1ca:	81 8a       	std	Z+17, r8	; 0x11
     1cc:	8f 8e       	std	Y+31, r8	; 0x1f
     1ce:	8b 88       	ldd	r8, Y+19	; 0x13
     1d0:	8a 81       	ldd	r24, Y+2	; 0x02
     1d2:	78 78       	andi	r23, 0x88	; 136
     1d4:	7a 80       	ldd	r7, Y+2	; 0x02
     1d6:	80 80       	ld	r8, Z
     1d8:	81 7b       	andi	r24, 0xB1	; 177
     1da:	77 73       	andi	r23, 0x37	; 55
     1dc:	72 74       	andi	r23, 0x42	; 66
     1de:	72 72       	andi	r23, 0x22	; 34
     1e0:	74 78       	andi	r23, 0x84	; 132
     1e2:	7e 85       	ldd	r23, Y+14	; 0x0e
     1e4:	86 85       	ldd	r24, Z+14	; 0x0e
     1e6:	84 82       	std	Z+4, r8	; 0x04
     1e8:	78 6f       	ori	r23, 0xF8	; 248
     1ea:	6c 71       	andi	r22, 0x1C	; 28
     1ec:	74 74       	andi	r23, 0x44	; 68
     1ee:	77 75       	andi	r23, 0x57	; 87
     1f0:	72 6d       	ori	r23, 0xD2	; 210
     1f2:	6b 6f       	ori	r22, 0xFB	; 251
     1f4:	74 78       	andi	r23, 0x84	; 132
     1f6:	79 7b       	andi	r23, 0xB9	; 185
     1f8:	7e 87       	std	Y+14, r23	; 0x0e
     1fa:	8a 86       	std	Y+10, r8	; 0x0a
     1fc:	83 81       	ldd	r24, Z+3	; 0x03
     1fe:	7b 71       	andi	r23, 0x1B	; 27
     200:	70 78       	andi	r23, 0x80	; 128
     202:	82 87       	std	Z+10, r24	; 0x0a
     204:	89 8c       	ldd	r8, Y+25	; 0x19
     206:	89 7e       	andi	r24, 0xE9	; 233
     208:	73 74       	andi	r23, 0x43	; 67
     20a:	77 79       	andi	r23, 0x97	; 151
     20c:	7a 7a       	andi	r23, 0xAA	; 170
     20e:	7c 85       	ldd	r23, Y+12	; 0x0c
     210:	8d 8a       	std	Y+21, r8	; 0x15
     212:	88 85       	ldd	r24, Y+8	; 0x08
     214:	7c 72       	andi	r23, 0x2C	; 44
     216:	6c 75       	andi	r22, 0x5C	; 92
     218:	82 8b       	std	Z+18, r24	; 0x12
     21a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     21c:	8a 83       	std	Y+2, r24	; 0x02
     21e:	7e 7e       	andi	r23, 0xEE	; 238
     220:	80 85       	ldd	r24, Z+8	; 0x08
     222:	87 87       	std	Z+15, r24	; 0x0f
     224:	8b 95       	.word	0x958b	; ????
     226:	98 90       	.word	0x9098	; ????
     228:	8e 8c       	ldd	r8, Y+30	; 0x1e
     22a:	83 73       	andi	r24, 0x33	; 51
     22c:	6d 77       	andi	r22, 0x7D	; 125
     22e:	85 8e       	std	Z+29, r8	; 0x1d
     230:	8e 8b       	std	Y+22, r24	; 0x16
     232:	8b 85       	ldd	r24, Y+11	; 0x0b
     234:	80 80       	ld	r8, Z
     236:	85 89       	ldd	r24, Z+21	; 0x15
     238:	89 8b       	std	Y+17, r24	; 0x11
     23a:	8d 94 96 94 	jmp	0x23292c	; 0x23292c <__TEXT_REGION_LENGTH__+0x21292c>
     23e:	90 86       	std	Z+8, r9	; 0x08
     240:	76 67       	ori	r23, 0x76	; 118
     242:	69 78       	andi	r22, 0x89	; 137
     244:	87 8b       	std	Z+23, r24	; 0x17
     246:	8e 90       	ld	r8, -X
     248:	89 7d       	andi	r24, 0xD9	; 217
     24a:	77 77       	andi	r23, 0x77	; 119
     24c:	7b 7d       	andi	r23, 0xDB	; 219
     24e:	7e 83       	std	Y+6, r23	; 0x06
     250:	90 9a       	sbi	0x12, 0	; 18
     252:	9c 9a       	sbi	0x13, 4	; 19
     254:	92 83       	std	Z+2, r25	; 0x02
     256:	6e 63       	ori	r22, 0x3E	; 62
     258:	6b 7d       	andi	r22, 0xDB	; 219
     25a:	86 87       	std	Z+14, r24	; 0x0e
     25c:	89 89       	ldd	r24, Y+17	; 0x11
     25e:	80 74       	andi	r24, 0x40	; 64
     260:	70 75       	andi	r23, 0x50	; 80
     262:	7b 77       	andi	r23, 0x7B	; 123
     264:	75 83       	std	Z+5, r23	; 0x05
     266:	92 90       	ld	r9, -Z
     268:	88 83       	st	Y, r24
     26a:	7b 6d       	ori	r23, 0xDB	; 219
     26c:	66 6b       	ori	r22, 0xB6	; 182
     26e:	76 7f       	andi	r23, 0xF6	; 246
     270:	82 82       	std	Z+2, r8	; 0x02
     272:	80 79       	andi	r24, 0x90	; 144
     274:	71 6c       	ori	r23, 0xC1	; 193
     276:	6f 73       	andi	r22, 0x3F	; 63
     278:	73 76       	andi	r23, 0x63	; 99
     27a:	82 8d       	ldd	r24, Z+26	; 0x1a
     27c:	8c 88       	ldd	r8, Y+20	; 0x14
     27e:	83 7a       	andi	r24, 0xA3	; 163
     280:	6c 61       	ori	r22, 0x1C	; 28
     282:	69 77       	andi	r22, 0x79	; 121
     284:	7e 7d       	andi	r23, 0xDE	; 222
     286:	7f 7e       	andi	r23, 0xEF	; 239
     288:	79 70       	andi	r23, 0x09	; 9
     28a:	6d 73       	andi	r22, 0x3D	; 61
     28c:	79 78       	andi	r23, 0x89	; 137
     28e:	78 89       	ldd	r23, Y+16	; 0x10
     290:	90 8b       	std	Z+16, r25	; 0x10
     292:	85 7e       	andi	r24, 0xE5	; 229
     294:	77 6b       	ori	r23, 0xB7	; 183
     296:	69 72       	andi	r22, 0x29	; 41
     298:	7e 87       	std	Y+14, r23	; 0x0e
     29a:	89 86       	std	Y+9, r8	; 0x09
     29c:	83 7d       	andi	r24, 0xD3	; 211
     29e:	78 73       	andi	r23, 0x38	; 56
     2a0:	74 79       	andi	r23, 0x94	; 148
     2a2:	77 7d       	andi	r23, 0xD7	; 215
     2a4:	8e 97       	sbiw	r24, 0x2e	; 46
     2a6:	96 8d       	ldd	r25, Z+30	; 0x1e
     2a8:	85 7c       	andi	r24, 0xC5	; 197
     2aa:	71 70       	andi	r23, 0x01	; 1
     2ac:	7c 88       	ldd	r7, Y+20	; 0x14
     2ae:	8e 91       	ld	r24, -X
     2b0:	8e 87       	std	Y+14, r24	; 0x0e
     2b2:	7c 75       	andi	r23, 0x5C	; 92
     2b4:	76 77       	andi	r23, 0x76	; 118
     2b6:	74 74       	andi	r23, 0x44	; 68
     2b8:	84 91       	lpm	r24, Z
     2ba:	92 8d       	ldd	r25, Z+26	; 0x1a
     2bc:	85 7b       	andi	r24, 0xB5	; 181
     2be:	73 72       	andi	r23, 0x23	; 35
     2c0:	7a 84       	ldd	r7, Y+10	; 0x0a
     2c2:	8b 8b       	std	Y+19, r24	; 0x13
     2c4:	88 85       	ldd	r24, Y+8	; 0x08
     2c6:	81 7f       	andi	r24, 0xF1	; 241
     2c8:	7a 7b       	andi	r23, 0xBA	; 186
     2ca:	7c 7b       	andi	r23, 0xBC	; 188
     2cc:	84 91       	lpm	r24, Z
     2ce:	93 8f       	std	Z+27, r25	; 0x1b
     2d0:	88 7d       	andi	r24, 0xD8	; 216
     2d2:	72 6e       	ori	r23, 0xE2	; 226
     2d4:	74 81       	ldd	r23, Z+4	; 0x04
     2d6:	88 89       	ldd	r24, Y+16	; 0x10
     2d8:	87 84       	ldd	r8, Z+15	; 0x0f
     2da:	81 7a       	andi	r24, 0xA1	; 161
     2dc:	78 78       	andi	r23, 0x88	; 136
     2de:	7d 7e       	andi	r23, 0xED	; 237
     2e0:	87 99       	sbic	0x10, 7	; 16
     2e2:	9e 97       	sbiw	r26, 0x2e	; 46
     2e4:	87 7b       	andi	r24, 0xB7	; 183
     2e6:	72 6f       	ori	r23, 0xF2	; 242
     2e8:	77 83       	std	Z+7, r23	; 0x07
     2ea:	8e 93       	st	-X, r24
     2ec:	91 8c       	ldd	r9, Z+25	; 0x19
     2ee:	84 7b       	andi	r24, 0xB4	; 180
     2f0:	7a 76       	andi	r23, 0x6A	; 106
     2f2:	74 77       	andi	r23, 0x74	; 116
     2f4:	7e 8d       	ldd	r23, Y+30	; 0x1e
     2f6:	91 8f       	std	Z+25, r25	; 0x19
     2f8:	87 79       	andi	r24, 0x97	; 151
     2fa:	70 6d       	ori	r23, 0xD0	; 208
     2fc:	75 7e       	andi	r23, 0xE5	; 229
     2fe:	85 89       	ldd	r24, Z+21	; 0x15
     300:	8a 87       	std	Y+10, r24	; 0x0a
     302:	80 7a       	andi	r24, 0xA0	; 160
     304:	76 74       	andi	r23, 0x46	; 70
     306:	72 72       	andi	r23, 0x22	; 34
     308:	7a 85       	ldd	r23, Y+10	; 0x0a
     30a:	8b 89       	ldd	r24, Y+19	; 0x13
     30c:	7f 71       	andi	r23, 0x1F	; 31
     30e:	67 66       	ori	r22, 0x67	; 103
     310:	71 7f       	andi	r23, 0xF1	; 241
     312:	88 8c       	ldd	r8, Y+24	; 0x18
     314:	89 85       	ldd	r24, Y+9	; 0x09
     316:	7e 78       	andi	r23, 0x8E	; 142
     318:	73 6d       	ori	r23, 0xD3	; 211
     31a:	6d 6f       	ori	r22, 0xFD	; 253
     31c:	7d 8c       	ldd	r7, Y+29	; 0x1d
     31e:	91 8d       	ldd	r25, Z+25	; 0x19
     320:	82 77       	andi	r24, 0x72	; 114
     322:	6c 6a       	ori	r22, 0xAC	; 172
     324:	73 7e       	andi	r23, 0xE3	; 227
     326:	85 87       	std	Z+13, r24	; 0x0d
     328:	86 84       	ldd	r8, Z+14	; 0x0e
     32a:	7e 7b       	andi	r23, 0xBE	; 190
     32c:	7a 75       	andi	r23, 0x5A	; 90
     32e:	72 73       	andi	r23, 0x32	; 50
     330:	7f 91       	pop	r23
     332:	99 98       	cbi	0x13, 1	; 19
     334:	8c 7f       	andi	r24, 0xFC	; 252
     336:	75 71       	andi	r23, 0x15	; 21
     338:	75 80       	ldd	r7, Z+5	; 0x05
     33a:	88 87       	std	Y+8, r24	; 0x08
     33c:	87 87       	std	Z+15, r24	; 0x0f
     33e:	84 81       	ldd	r24, Z+4	; 0x04
     340:	7b 74       	andi	r23, 0x4B	; 75
     342:	72 72       	andi	r23, 0x22	; 34
     344:	7a 8b       	std	Y+18, r23	; 0x12
     346:	98 97       	sbiw	r26, 0x28	; 40
     348:	8b 78       	andi	r24, 0x8B	; 139
     34a:	6c 6c       	ori	r22, 0xCC	; 204
     34c:	73 7c       	andi	r23, 0xC3	; 195
     34e:	85 88       	ldd	r8, Z+21	; 0x15
     350:	88 85       	ldd	r24, Y+8	; 0x08
     352:	82 80       	ldd	r8, Z+2	; 0x02
     354:	7f 79       	andi	r23, 0x9F	; 159
     356:	78 78       	andi	r23, 0x88	; 136
     358:	82 8e       	std	Z+26, r8	; 0x1a
     35a:	92 8e       	std	Z+26, r9	; 0x1a
     35c:	7f 71       	andi	r23, 0x1F	; 31
     35e:	68 6d       	ori	r22, 0xD8	; 216
     360:	77 83       	std	Z+7, r23	; 0x07
     362:	8b 8a       	std	Y+19, r8	; 0x13
     364:	87 85       	ldd	r24, Z+15	; 0x0f
     366:	86 86       	std	Z+14, r8	; 0x0e
     368:	81 77       	andi	r24, 0x71	; 113
     36a:	70 6f       	ori	r23, 0xF0	; 240
     36c:	7c 8d       	ldd	r23, Y+28	; 0x1c
     36e:	97 96       	adiw	r26, 0x27	; 39
     370:	86 78       	andi	r24, 0x86	; 134
     372:	72 75       	andi	r23, 0x52	; 82
     374:	80 8a       	std	Z+16, r8	; 0x10
     376:	8b 89       	ldd	r24, Y+19	; 0x13
     378:	8a 8c       	ldd	r8, Y+26	; 0x1a
     37a:	90 90 8c 85 	lds	r9, 0x858C	; 0x80858c <__bss_end+0x832b>
     37e:	7b 79       	andi	r23, 0x9B	; 155
     380:	85 97       	sbiw	r24, 0x25	; 37
     382:	9d 97       	sbiw	r26, 0x2d	; 45
     384:	86 77       	andi	r24, 0x76	; 118
     386:	74 77       	andi	r23, 0x74	; 116
     388:	81 8a       	std	Z+17, r8	; 0x11
     38a:	8a 82       	std	Y+2, r8	; 0x02
     38c:	7c 7b       	andi	r23, 0xBC	; 188
     38e:	7b 7a       	andi	r23, 0xAB	; 171
     390:	7a 74       	andi	r23, 0x4A	; 74
     392:	70 71       	andi	r23, 0x10	; 16
     394:	7f 8d       	ldd	r23, Y+31	; 0x1f
     396:	90 89       	ldd	r25, Z+16	; 0x10
     398:	72 64       	ori	r23, 0x42	; 66
     39a:	63 6d       	ori	r22, 0xD3	; 211
     39c:	7a 81       	ldd	r23, Y+2	; 0x02
     39e:	84 81       	ldd	r24, Z+4	; 0x04
     3a0:	7c 7a       	andi	r23, 0xAC	; 172
     3a2:	79 77       	andi	r23, 0x79	; 121
     3a4:	73 70       	andi	r23, 0x03	; 3
     3a6:	6f 79       	andi	r22, 0x9F	; 159
     3a8:	8d 97       	sbiw	r24, 0x2d	; 45
     3aa:	98 8a       	std	Y+16, r9	; 0x10
     3ac:	74 65       	ori	r23, 0x54	; 84
     3ae:	67 74       	andi	r22, 0x47	; 71
     3b0:	82 88       	ldd	r8, Z+18	; 0x12
     3b2:	87 82       	std	Z+7, r8	; 0x07
     3b4:	7d 7c       	andi	r23, 0xCD	; 205
     3b6:	80 81       	ld	r24, Z
     3b8:	78 73       	andi	r23, 0x38	; 56
     3ba:	71 78       	andi	r23, 0x81	; 129
     3bc:	89 92       	st	Y+, r8
     3be:	92 82       	std	Z+2, r9	; 0x02
     3c0:	6b 62       	ori	r22, 0x2B	; 43
     3c2:	64 71       	andi	r22, 0x14	; 20
     3c4:	7f 84       	ldd	r7, Y+15	; 0x0f
     3c6:	82 7c       	andi	r24, 0xC2	; 194
     3c8:	7c 7f       	andi	r23, 0xFC	; 252
     3ca:	83 81       	ldd	r24, Z+3	; 0x03
     3cc:	77 6f       	ori	r23, 0xF7	; 247
     3ce:	6f 7c       	andi	r22, 0xCF	; 207
     3d0:	8f 95 95 85 	call	0x630b2a	; 0x630b2a <__TEXT_REGION_LENGTH__+0x610b2a>
     3d4:	6f 66       	ori	r22, 0x6F	; 111
     3d6:	6b 7b       	andi	r22, 0xBB	; 187
     3d8:	89 8f       	std	Y+25, r24	; 0x19
     3da:	8b 86       	std	Y+11, r8	; 0x0b
     3dc:	85 8a       	std	Z+21, r8	; 0x15
     3de:	8a 86       	std	Y+10, r8	; 0x0a
     3e0:	7d 77       	andi	r23, 0x7D	; 125
     3e2:	76 7e       	andi	r23, 0xE6	; 230
     3e4:	90 97       	sbiw	r26, 0x20	; 32
     3e6:	96 82       	std	Z+6, r9	; 0x06
     3e8:	6f 67       	ori	r22, 0x7F	; 127
     3ea:	6c 7e       	andi	r22, 0xEC	; 236
     3ec:	8a 8f       	std	Y+26, r24	; 0x1a
     3ee:	8e 8a       	std	Y+22, r8	; 0x16
     3f0:	87 89       	ldd	r24, Z+23	; 0x17
     3f2:	88 83       	st	Y, r24
     3f4:	78 6e       	ori	r23, 0xE8	; 232
     3f6:	70 83       	st	Z, r23
     3f8:	9a a6       	std	Y+42, r9	; 0x2a
     3fa:	a4 8e       	std	Z+28, r10	; 0x1c
     3fc:	7c 74       	andi	r23, 0x4C	; 76
     3fe:	78 88       	ldd	r7, Y+16	; 0x10
     400:	92 93       	st	-Z, r25
     402:	8e 8c       	ldd	r8, Y+30	; 0x1e
     404:	8a 8b       	std	Y+18, r24	; 0x12
     406:	8b 84       	ldd	r8, Y+11	; 0x0b
     408:	76 6f       	ori	r23, 0xF6	; 246
     40a:	6f 82       	std	Y+7, r6	; 0x07
     40c:	98 9f       	mul	r25, r24
     40e:	97 7e       	andi	r25, 0xE7	; 231
     410:	6e 66       	ori	r22, 0x6E	; 110
     412:	70 7c       	andi	r23, 0xC0	; 192
     414:	81 81       	ldd	r24, Z+1	; 0x01
     416:	7b 7a       	andi	r23, 0xAB	; 171
     418:	7a 82       	std	Y+2, r7	; 0x02
     41a:	81 7b       	andi	r24, 0xB1	; 177
     41c:	6d 64       	ori	r22, 0x4D	; 77
     41e:	69 7e       	andi	r22, 0xE9	; 233
     420:	8d 8d       	ldd	r24, Y+29	; 0x1d
     422:	80 65       	ori	r24, 0x50	; 80
     424:	54 55       	subi	r21, 0x54	; 84
     426:	68 79       	andi	r22, 0x98	; 152
     428:	82 81       	ldd	r24, Z+2	; 0x02
     42a:	7f 7c       	andi	r23, 0xCF	; 207
     42c:	80 84       	ldd	r8, Z+8	; 0x08
     42e:	82 78       	andi	r24, 0x82	; 130
     430:	6b 6a       	ori	r22, 0xAB	; 171
     432:	77 92       	lat	Z, r7
     434:	9e 9f       	mul	r25, r30
     436:	8c 70       	andi	r24, 0x0C	; 12
     438:	67 72       	andi	r22, 0x27	; 39
     43a:	82 8c       	ldd	r8, Z+26	; 0x1a
     43c:	8e 87       	std	Y+14, r24	; 0x0e
     43e:	82 80       	ldd	r8, Z+2	; 0x02
     440:	8a 8f       	std	Y+26, r24	; 0x1a
     442:	87 7b       	andi	r24, 0xB7	; 183
     444:	72 73       	andi	r23, 0x32	; 50
     446:	8a a2       	std	Y+34, r8	; 0x22
     448:	a4 9e       	mul	r10, r20
     44a:	83 68       	ori	r24, 0x83	; 131
     44c:	68 76       	andi	r22, 0x68	; 104
     44e:	89 94       	.word	0x9489	; ????
     450:	8f 8a       	std	Y+23, r8	; 0x17
     452:	87 8a       	std	Z+23, r8	; 0x17
     454:	94 93       	xch	Z, r25
     456:	89 7d       	andi	r24, 0xD9	; 217
     458:	78 7c       	andi	r23, 0xC8	; 200
     45a:	95 a4       	ldd	r9, Z+45	; 0x2d
     45c:	9f 8e       	std	Y+31, r9	; 0x1f
     45e:	6b 5b       	subi	r22, 0xBB	; 187
     460:	65 77       	andi	r22, 0x75	; 117
     462:	87 8b       	std	Z+23, r24	; 0x17
     464:	82 7b       	andi	r24, 0xB2	; 178
     466:	7c 83       	std	Y+4, r23	; 0x04
     468:	86 81       	ldd	r24, Z+6	; 0x06
     46a:	72 62       	ori	r23, 0x22	; 34
     46c:	5d 6f       	ori	r21, 0xFD	; 253
     46e:	8b 93       	.word	0x938b	; ????
     470:	8e 75       	andi	r24, 0x5E	; 94
     472:	58 57       	subi	r21, 0x78	; 120
     474:	68 78       	andi	r22, 0x88	; 136
     476:	81 7b       	andi	r24, 0xB1	; 177
     478:	71 70       	andi	r23, 0x01	; 1
     47a:	74 7f       	andi	r23, 0xF4	; 244
     47c:	83 79       	andi	r24, 0x93	; 147
     47e:	6c 66       	ori	r22, 0x6C	; 108
     480:	67 82       	std	Z+7, r6	; 0x07
     482:	96 8e       	std	Z+30, r9	; 0x1e
     484:	7b 59       	subi	r23, 0x9B	; 155
     486:	51 64       	ori	r21, 0x41	; 65
     488:	79 8c       	ldd	r7, Y+25	; 0x19
     48a:	8d 80       	ldd	r8, Y+5	; 0x05
     48c:	78 79       	andi	r23, 0x98	; 152
     48e:	7f 82       	std	Y+7, r7	; 0x07
     490:	80 71       	andi	r24, 0x10	; 16
     492:	68 67       	ori	r22, 0x78	; 120
     494:	7a 9d       	mul	r23, r10
     496:	9f 90       	pop	r9
     498:	73 5b       	subi	r23, 0xB3	; 179
     49a:	64 78       	andi	r22, 0x84	; 132
     49c:	87 89       	ldd	r24, Z+23	; 0x17
     49e:	81 7e       	andi	r24, 0xE1	; 225
     4a0:	80 8b       	std	Z+16, r24	; 0x10
     4a2:	94 91       	lpm	r25, Z
     4a4:	85 71       	andi	r24, 0x15	; 21
     4a6:	6c 78       	andi	r22, 0x8C	; 140
     4a8:	97 a3       	std	Z+39, r25	; 0x27
     4aa:	96 7d       	andi	r25, 0xD6	; 214
     4ac:	5e 5c       	subi	r21, 0xCE	; 206
     4ae:	75 8d       	ldd	r23, Z+29	; 0x1d
     4b0:	91 89       	ldd	r25, Z+17	; 0x11
     4b2:	7e 79       	andi	r23, 0x9E	; 158
     4b4:	82 90       	ld	r8, -Z
     4b6:	8d 82       	std	Y+5, r8	; 0x05
     4b8:	73 6c       	ori	r23, 0xC3	; 195
     4ba:	6f 8d       	ldd	r22, Y+31	; 0x1f
     4bc:	a9 9b       	sbis	0x15, 1	; 21
     4be:	86 69       	ori	r24, 0x96	; 150
     4c0:	61 74       	andi	r22, 0x41	; 65
     4c2:	8d 9b       	sbis	0x11, 5	; 17
     4c4:	94 83       	std	Z+4, r25	; 0x04
     4c6:	78 7a       	andi	r23, 0xA8	; 168
     4c8:	88 8a       	std	Y+16, r8	; 0x10
     4ca:	81 76       	andi	r24, 0x61	; 97
     4cc:	6a 6d       	ori	r22, 0xDA	; 218
     4ce:	82 a1       	ldd	r24, Z+34	; 0x22
     4d0:	9e 89       	ldd	r25, Y+22	; 0x16
     4d2:	69 57       	subi	r22, 0x79	; 121
     4d4:	68 87       	std	Y+8, r22	; 0x08
     4d6:	9e 9b       	sbis	0x13, 6	; 19
     4d8:	8d 83       	std	Y+5, r24	; 0x05
     4da:	80 8f       	std	Z+24, r24	; 0x18
     4dc:	9a 91       	ld	r25, -Y
     4de:	81 71       	andi	r24, 0x11	; 17
     4e0:	6e 78       	andi	r22, 0x8E	; 142
     4e2:	9b a6       	std	Y+43, r9	; 0x2b
     4e4:	92 76       	andi	r25, 0x62	; 98
     4e6:	5d 69       	ori	r21, 0x9D	; 157
     4e8:	85 9d       	mul	r24, r5
     4ea:	9f 8d       	ldd	r25, Y+31	; 0x1f
     4ec:	81 7c       	andi	r24, 0xC1	; 193
     4ee:	89 9c       	mul	r8, r9
     4f0:	94 87       	std	Z+12, r25	; 0x0c
     4f2:	7a 77       	andi	r23, 0x7A	; 122
     4f4:	81 a2       	std	Z+33, r8	; 0x21
     4f6:	b0 99       	sbic	0x16, 0	; 22
     4f8:	78 53       	subi	r23, 0x38	; 56
     4fa:	5b 7c       	andi	r21, 0xCB	; 203
     4fc:	96 a1       	ldd	r25, Z+38	; 0x26
     4fe:	8e 7b       	andi	r24, 0xBE	; 190
     500:	74 7c       	andi	r23, 0xC4	; 196
     502:	91 8f       	std	Z+25, r25	; 0x19
     504:	80 6f       	ori	r24, 0xF0	; 240
     506:	68 73       	andi	r22, 0x38	; 56
     508:	92 ab       	std	Z+50, r25	; 0x32
     50a:	9a 79       	andi	r25, 0x9A	; 154
     50c:	54 53       	subi	r21, 0x34	; 52
     50e:	72 8b       	std	Z+18, r23	; 0x12
     510:	98 87       	std	Y+8, r25	; 0x08
     512:	6e 67       	ori	r22, 0x7E	; 126
     514:	6c 7c       	andi	r22, 0xCC	; 204
     516:	80 72       	andi	r24, 0x20	; 32
     518:	60 5a       	subi	r22, 0xA0	; 160
     51a:	64 82       	std	Z+4, r6	; 0x04
     51c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     51e:	69 40       	sbci	r22, 0x09	; 9
     520:	38 59       	subi	r19, 0x98	; 152
     522:	7b 8e       	std	Y+27, r7	; 0x1b
     524:	81 67       	ori	r24, 0x71	; 113
     526:	5e 64       	ori	r21, 0x4E	; 78
     528:	79 81       	ldd	r23, Y+1	; 0x01
     52a:	76 67       	ori	r23, 0x76	; 118
     52c:	5c 64       	ori	r21, 0x4C	; 76
     52e:	83 a2       	std	Z+35, r8	; 0x23
     530:	98 75       	andi	r25, 0x58	; 88
     532:	47 3a       	cpi	r20, 0xA7	; 167
     534:	5b 7b       	andi	r21, 0xBB	; 187
     536:	94 93       	xch	Z, r25
     538:	78 6c       	ori	r23, 0xC8	; 200
     53a:	73 85       	ldd	r23, Z+11	; 0x0b
     53c:	8a 7b       	andi	r24, 0xBA	; 186
     53e:	68 5c       	subi	r22, 0xC8	; 200
     540:	65 82       	std	Z+5, r6	; 0x05
     542:	a9 a9       	ldd	r26, Y+49	; 0x31
     544:	8b 5f       	subi	r24, 0xFB	; 251
     546:	4e 6e       	ori	r20, 0xEE	; 238
     548:	89 a0       	ldd	r8, Y+33	; 0x21
     54a:	a2 86       	std	Z+10, r10	; 0x0a
     54c:	7c 83       	std	Y+4, r23	; 0x04
     54e:	98 9e       	mul	r9, r24
     550:	8a 78       	andi	r24, 0x8A	; 138
     552:	6c 74       	andi	r22, 0x4C	; 76
     554:	8c b2       	in	r8, 0x1c	; 28
     556:	b6 92       	lac	Z, r11
     558:	65 4b       	sbci	r22, 0xB5	; 181
     55a:	65 85       	ldd	r22, Z+13	; 0x0d
     55c:	9b a4       	ldd	r9, Y+43	; 0x2b
     55e:	8f 80       	ldd	r8, Y+7	; 0x07
     560:	85 9a       	sbi	0x10, 5	; 16
     562:	a5 90       	lpm	r10, Z+
     564:	7d 75       	andi	r23, 0x5D	; 93
     566:	7a 8f       	std	Y+26, r23	; 0x1a
     568:	b0 ba       	out	0x10, r11	; 16
     56a:	9c 6d       	ori	r25, 0xDC	; 220
     56c:	4e 64       	ori	r20, 0x4E	; 78
     56e:	84 98       	cbi	0x10, 4	; 16
     570:	a2 91       	ld	r26, -Z
     572:	86 89       	ldd	r24, Z+22	; 0x16
     574:	9b a9       	ldd	r25, Y+51	; 0x33
     576:	91 79       	andi	r25, 0x91	; 145
     578:	6a 6b       	ori	r22, 0xBA	; 186
     57a:	82 a5       	ldd	r24, Z+42	; 0x2a
     57c:	bb a8       	ldd	r11, Y+51	; 0x33
     57e:	79 58       	subi	r23, 0x89	; 137
     580:	66 83       	std	Z+6, r22	; 0x06
     582:	96 9f       	mul	r25, r22
     584:	8c 7b       	andi	r24, 0xBC	; 188
     586:	80 94       	com	r8
     588:	a0 8e       	std	Z+24, r10	; 0x18
     58a:	75 64       	ori	r23, 0x45	; 69
     58c:	66 74       	andi	r22, 0x46	; 70
     58e:	96 ac       	ldd	r9, Z+62	; 0x3e
     590:	9b 6f       	ori	r25, 0xFB	; 251
     592:	42 4b       	sbci	r20, 0xB2	; 178
     594:	71 85       	ldd	r23, Z+9	; 0x09
     596:	90 84       	ldd	r9, Z+8	; 0x08
     598:	76 74       	andi	r23, 0x46	; 70
     59a:	82 97       	sbiw	r24, 0x22	; 34
     59c:	86 6a       	ori	r24, 0xA6	; 166
     59e:	5a 5e       	subi	r21, 0xEA	; 234
     5a0:	6e 8c       	ldd	r6, Y+30	; 0x1e
     5a2:	a9 9b       	sbis	0x15, 1	; 21
     5a4:	72 4b       	sbci	r23, 0xB2	; 178
     5a6:	4e 73       	andi	r20, 0x3E	; 62
     5a8:	86 8e       	std	Z+30, r8	; 0x1e
     5aa:	85 70       	andi	r24, 0x05	; 5
     5ac:	6e 7a       	andi	r22, 0xAE	; 174
     5ae:	8a 81       	ldd	r24, Y+2	; 0x02
     5b0:	68 56       	subi	r22, 0x68	; 104
     5b2:	59 6a       	ori	r21, 0xA9	; 169
     5b4:	8d ae       	std	Y+61, r8	; 0x3d
     5b6:	a0 7c       	andi	r26, 0xC0	; 192
     5b8:	53 50       	subi	r21, 0x03	; 3
     5ba:	74 87       	std	Z+12, r23	; 0x0c
     5bc:	92 8d       	ldd	r25, Z+26	; 0x1a
     5be:	7a 78       	andi	r23, 0x8A	; 138
     5c0:	85 9b       	sbis	0x10, 5	; 16
     5c2:	94 7a       	andi	r25, 0xA4	; 164
     5c4:	65 67       	ori	r22, 0x75	; 117
     5c6:	76 92       	lac	Z, r7
     5c8:	b4 a9       	ldd	r27, Z+52	; 0x34
     5ca:	7e 50       	subi	r23, 0x0E	; 14
     5cc:	4d 74       	andi	r20, 0x4D	; 77
     5ce:	8c 99       	sbic	0x11, 4	; 17
     5d0:	99 87       	std	Y+9, r25	; 0x09
     5d2:	7d 8c       	ldd	r7, Y+29	; 0x1d
     5d4:	a5 9e       	mul	r10, r21
     5d6:	82 6e       	ori	r24, 0xE2	; 226
     5d8:	72 7d       	andi	r23, 0xD2	; 210
     5da:	99 ba       	out	0x19, r9	; 25
     5dc:	ad 83       	std	Y+5, r26	; 0x05
     5de:	54 52       	subi	r21, 0x24	; 36
     5e0:	78 8b       	std	Y+16, r23	; 0x10
     5e2:	97 91       	elpm	r25, Z+
     5e4:	7f 78       	andi	r23, 0x8F	; 143
     5e6:	85 9d       	mul	r24, r5
     5e8:	93 76       	andi	r25, 0x63	; 99
     5ea:	60 60       	ori	r22, 0x00	; 0
     5ec:	6f 90       	pop	r6
     5ee:	b2 a3       	std	Z+34, r27	; 0x22
     5f0:	77 48       	sbci	r23, 0x87	; 135
     5f2:	47 6d       	ori	r20, 0xD7	; 215
     5f4:	82 8a       	std	Z+18, r8	; 0x12
     5f6:	7f 73       	andi	r23, 0x3F	; 63
     5f8:	74 83       	std	Z+4, r23	; 0x04
     5fa:	9c 8e       	std	Y+28, r9	; 0x1c
     5fc:	72 5e       	subi	r23, 0xE2	; 226
     5fe:	5b 6a       	ori	r21, 0xAB	; 171
     600:	8f aa       	std	Y+55, r8	; 0x37
     602:	96 63       	ori	r25, 0x36	; 54
     604:	36 43       	sbci	r19, 0x36	; 54
     606:	6b 7a       	andi	r22, 0xAB	; 171
     608:	82 78       	andi	r24, 0x82	; 130
     60a:	69 6b       	ori	r22, 0xB9	; 185
     60c:	7f 97       	sbiw	r30, 0x1f	; 31
     60e:	8b 6e       	ori	r24, 0xEB	; 235
     610:	5a 5c       	subi	r21, 0xCA	; 202
     612:	71 9c       	mul	r7, r1
     614:	b0 96       	adiw	r30, 0x20	; 32
     616:	5f 40       	sbci	r21, 0x0F	; 15
     618:	5e 83       	std	Y+6, r21	; 0x06
     61a:	98 9e       	mul	r9, r24
     61c:	8b 81       	ldd	r24, Y+3	; 0x03
     61e:	87 98       	cbi	0x10, 7	; 16
     620:	a4 91       	lpm	r26, Z
     622:	74 61       	ori	r23, 0x14	; 20
     624:	63 7f       	andi	r22, 0xF3	; 243
     626:	ad b9       	out	0x0d, r26	; 13
     628:	93 5f       	subi	r25, 0xF3	; 243
     62a:	49 68       	ori	r20, 0x89	; 137
     62c:	8d 9e       	mul	r8, r29
     62e:	9e 87       	std	Y+14, r25	; 0x0e
     630:	80 8f       	std	Z+24, r24	; 0x18
     632:	a2 aa       	std	Z+50, r10	; 0x32
     634:	95 75       	andi	r25, 0x55	; 85
     636:	61 67       	ori	r22, 0x71	; 113
     638:	8d bc       	out	0x2d, r8	; 45
     63a:	ba 8e       	std	Y+26, r11	; 0x1a
     63c:	62 5f       	subi	r22, 0xF2	; 242
     63e:	85 9b       	sbis	0x10, 5	; 16
     640:	a6 9f       	mul	r26, r22
     642:	83 7e       	andi	r24, 0xE3	; 227
     644:	90 a4       	ldd	r9, Z+40	; 0x28
     646:	a3 89       	ldd	r26, Z+19	; 0x13
     648:	70 66       	ori	r23, 0x60	; 96
     64a:	77 a0       	ldd	r7, Z+39	; 0x27
     64c:	c5 b1       	in	r28, 0x05	; 5
     64e:	7b 5a       	subi	r23, 0xAB	; 171
     650:	62 86       	std	Z+10, r6	; 0x0a
     652:	9d a5       	ldd	r25, Y+45	; 0x2d
     654:	8f 74       	andi	r24, 0x4F	; 79
     656:	7f 96       	adiw	r30, 0x1f	; 31
     658:	a3 99       	sbic	0x14, 3	; 20
     65a:	81 6b       	ori	r24, 0xB1	; 177
     65c:	64 7d       	andi	r22, 0xD4	; 212
     65e:	ac be       	out	0x3c, r10	; 60
     660:	97 63       	ori	r25, 0x37	; 55
     662:	50 6b       	ori	r21, 0xB0	; 176
     664:	8a 9a       	sbi	0x11, 2	; 17
     666:	98 78       	andi	r25, 0x88	; 136
     668:	65 79       	andi	r22, 0x95	; 149
     66a:	95 95       	asr	r25
     66c:	82 6f       	ori	r24, 0xF2	; 242
     66e:	5d 55       	subi	r21, 0x5D	; 93
     670:	76 a8       	ldd	r7, Z+54	; 0x36
     672:	a2 6a       	ori	r26, 0xA2	; 162
     674:	36 3b       	cpi	r19, 0xB6	; 182
     676:	5f 73       	andi	r21, 0x3F	; 63
     678:	85 80       	ldd	r8, Z+5	; 0x05
     67a:	65 65       	ori	r22, 0x55	; 85
     67c:	87 9b       	sbis	0x10, 7	; 16
     67e:	89 70       	andi	r24, 0x09	; 9
     680:	5f 53       	subi	r21, 0x3F	; 63
     682:	54 85       	ldd	r21, Z+12	; 0x0c
     684:	ae 8f       	std	Y+30, r26	; 0x1e
     686:	55 38       	cpi	r21, 0x85	; 133
     688:	52 6d       	ori	r21, 0xD2	; 210
     68a:	78 84       	ldd	r7, Y+8	; 0x08
     68c:	73 54       	subi	r23, 0x43	; 67
     68e:	62 8d       	ldd	r22, Z+26	; 0x1a
     690:	94 80       	ldd	r9, Z+4	; 0x04
     692:	6e 61       	ori	r22, 0x1E	; 30
     694:	58 6e       	ori	r21, 0xE8	; 232
     696:	a8 b5       	in	r26, 0x28	; 40
     698:	7b 4a       	sbci	r23, 0xAB	; 171
     69a:	51 76       	andi	r21, 0x61	; 97
     69c:	87 95       	ror	r24
     69e:	9a 7a       	andi	r25, 0xAA	; 170
     6a0:	66 87       	std	Z+14, r22	; 0x0e
     6a2:	ab a0       	ldd	r10, Y+35	; 0x23
     6a4:	81 6f       	ori	r24, 0xF1	; 241
     6a6:	61 5b       	subi	r22, 0xB1	; 177
     6a8:	83 b9       	out	0x03, r24	; 3
     6aa:	ab 65       	ori	r26, 0x5B	; 91
     6ac:	44 62       	ori	r20, 0x24	; 36
     6ae:	7e 8b       	std	Y+22, r23	; 0x16
     6b0:	9b 91       	.word	0x919b	; ????
     6b2:	6e 6f       	ori	r22, 0xFE	; 254
     6b4:	9d b2       	in	r9, 0x1d	; 29
     6b6:	99 7b       	andi	r25, 0xB9	; 185
     6b8:	6e 67       	ori	r22, 0x7E	; 126
     6ba:	71 ad       	ldd	r23, Z+57	; 0x39
     6bc:	cb 97       	sbiw	r24, 0x3b	; 59
     6be:	4e 4c       	sbci	r20, 0xCE	; 206
     6c0:	7b 89       	ldd	r23, Y+19	; 0x13
     6c2:	93 9a       	sbi	0x12, 3	; 18
     6c4:	80 67       	ori	r24, 0x70	; 112
     6c6:	7d a9       	ldd	r23, Y+53	; 0x35
     6c8:	ad 8c       	ldd	r10, Y+29	; 0x1d
     6ca:	75 6e       	ori	r23, 0xE5	; 229
     6cc:	64 83       	std	Z+4, r22	; 0x04
     6ce:	be b1       	in	r27, 0x0e	; 14
     6d0:	68 3b       	cpi	r22, 0xB8	; 184
     6d2:	5e 86       	std	Y+14, r5	; 0x0e
     6d4:	8a 95       	dec	r24
     6d6:	97 7a       	andi	r25, 0xA7	; 167
     6d8:	72 9a       	sbi	0x0e, 2	; 14
     6da:	b8 aa       	std	Y+48, r11	; 0x30
     6dc:	84 74       	andi	r24, 0x44	; 68
     6de:	6a 6f       	ori	r22, 0xFA	; 250
     6e0:	a9 cb       	rjmp	.-2222   	; 0xfffffe34 <__eeprom_end+0xff7efe34>
     6e2:	a0 56       	subi	r26, 0x60	; 96
     6e4:	53 89       	ldd	r21, Z+19	; 0x13
     6e6:	97 9c       	mul	r9, r7
     6e8:	9d 8a       	std	Y+21, r9	; 0x15
     6ea:	6f 7a       	andi	r22, 0xAF	; 175
     6ec:	a6 a8       	ldd	r10, Z+54	; 0x36
     6ee:	8d 72       	andi	r24, 0x2D	; 45
     6f0:	6b 66       	ori	r22, 0x6B	; 107
     6f2:	83 bf       	out	0x33, r24	; 51
     6f4:	b2 64       	ori	r27, 0x42	; 66
     6f6:	35 60       	ori	r19, 0x05	; 5
     6f8:	86 86       	std	Z+14, r8	; 0x0e
     6fa:	88 7f       	andi	r24, 0xF8	; 248
     6fc:	6d 5f       	subi	r22, 0xFD	; 253
     6fe:	86 a3       	std	Z+38, r24	; 0x26
     700:	8f 74       	andi	r24, 0x4F	; 79
     702:	62 5c       	subi	r22, 0xC2	; 194
     704:	62 9c       	mul	r6, r2
     706:	b8 81       	ld	r27, Y
     708:	35 3c       	cpi	r19, 0xC5	; 197
     70a:	75 7a       	andi	r23, 0xA5	; 165
     70c:	7d 7e       	andi	r23, 0xED	; 237
     70e:	70 60       	ori	r23, 0x00	; 0
     710:	6b 96       	adiw	r28, 0x1b	; 27
     712:	96 79       	andi	r25, 0x96	; 150
     714:	62 5c       	subi	r22, 0xC2	; 194
     716:	59 79       	andi	r21, 0x99	; 153
     718:	af 9c       	mul	r10, r15
     71a:	50 30       	cpi	r21, 0x00	; 0
     71c:	66 86       	std	Z+14, r6	; 0x0e
     71e:	85 8d       	ldd	r24, Z+29	; 0x1d
     720:	83 71       	andi	r24, 0x13	; 19
     722:	72 91       	ld	r23, -Z
     724:	ac 95 74 69 	jmp	0x68d2e8	; 0x68d2e8 <__TEXT_REGION_LENGTH__+0x66d2e8>
     728:	67 76       	andi	r22, 0x67	; 103
     72a:	a9 c1       	rjmp	.+850    	; 0xa7e <__LOCK_REGION_LENGTH__+0x67e>
     72c:	83 3f       	cpi	r24, 0xF3	; 243
     72e:	53 83       	std	Z+3, r21	; 0x03
     730:	89 8f       	std	Y+25, r24	; 0x19
     732:	8e 82       	std	Y+6, r8	; 0x06
     734:	79 8d       	ldd	r23, Y+25	; 0x19
     736:	b1 ad       	ldd	r27, Z+57	; 0x39
     738:	8f 6f       	ori	r24, 0xFF	; 255
     73a:	6c 72       	andi	r22, 0x2C	; 44
     73c:	92 c4       	rjmp	.+2340   	; 0x1062 <__LOCK_REGION_LENGTH__+0xc62>
     73e:	a9 5e       	subi	r26, 0xE9	; 233
     740:	46 78       	andi	r20, 0x86	; 134
     742:	96 90       	elpm	r9, Z
     744:	93 89       	ldd	r25, Z+19	; 0x13
     746:	77 73       	andi	r23, 0x37	; 55
     748:	94 a3       	std	Z+36, r25	; 0x24
     74a:	8f 70       	andi	r24, 0x0F	; 15
     74c:	5c 67       	ori	r21, 0x7C	; 124
     74e:	75 ad       	ldd	r23, Z+61	; 0x3d
     750:	bc 77       	andi	r27, 0x7C	; 124
     752:	39 52       	subi	r19, 0x29	; 41
     754:	89 8d       	ldd	r24, Y+25	; 0x19
     756:	8e 8b       	std	Y+22, r24	; 0x16
     758:	80 70       	andi	r24, 0x00	; 0
     75a:	82 a2       	std	Z+34, r8	; 0x22
     75c:	9e 86       	std	Y+14, r9	; 0x0e
     75e:	69 64       	ori	r22, 0x49	; 73
     760:	6d 99       	sbic	0x0d, 5	; 13
     762:	c8 a2       	std	Y+32, r12	; 0x20
     764:	55 43       	sbci	r21, 0x35	; 53
     766:	78 8b       	std	Y+16, r23	; 0x10
     768:	85 88       	ldd	r8, Z+21	; 0x15
     76a:	82 73       	andi	r24, 0x32	; 50
     76c:	76 99       	sbic	0x0e, 6	; 14
     76e:	9f 90       	pop	r9
     770:	70 63       	ori	r23, 0x30	; 48
     772:	61 72       	andi	r22, 0x21	; 33
     774:	b0 b0       	in	r11, 0x00	; 0
     776:	67 35       	cpi	r22, 0x57	; 87
     778:	61 8e       	std	Z+25, r6	; 0x19
     77a:	86 87       	std	Z+14, r24	; 0x0e
     77c:	85 7a       	andi	r24, 0xA5	; 165
     77e:	72 8d       	ldd	r23, Z+26	; 0x1a
     780:	a4 96       	adiw	r28, 0x24	; 36
     782:	7e 66       	ori	r23, 0x6E	; 110
     784:	61 65       	ori	r22, 0x51	; 81
     786:	97 c6       	rjmp	.+3374   	; 0x14b6 <__stack+0x3b7>
     788:	8e 41       	sbci	r24, 0x1E	; 30
     78a:	4d 86       	std	Y+13, r4	; 0x0d
     78c:	89 7b       	andi	r24, 0xB9	; 185
     78e:	82 7b       	andi	r24, 0xB2	; 178
     790:	6e 7f       	andi	r22, 0xFE	; 254
     792:	95 94       	asr	r9
     794:	80 6e       	ori	r24, 0xE0	; 224
     796:	64 65       	ori	r22, 0x54	; 84
     798:	82 b6       	in	r8, 0x32	; 50
     79a:	a6 44       	sbci	r26, 0x46	; 70
     79c:	34 78       	andi	r19, 0x84	; 132
     79e:	93 86       	std	Z+11, r9	; 0x0b
     7a0:	83 80       	ldd	r8, Z+3	; 0x03
     7a2:	73 7b       	andi	r23, 0xB3	; 179
     7a4:	97 99       	sbic	0x12, 7	; 18
     7a6:	8d 7f       	andi	r24, 0xFD	; 253
     7a8:	73 6f       	ori	r23, 0xF3	; 243
     7aa:	7e b2       	in	r7, 0x1e	; 30
     7ac:	c3 70       	andi	r28, 0x03	; 3
     7ae:	39 70       	andi	r19, 0x09	; 9
     7b0:	a2 93       	st	-Z, r26
     7b2:	83 83       	std	Z+3, r24	; 0x03
     7b4:	7a 7d       	andi	r23, 0xDA	; 218
     7b6:	98 a2       	std	Y+32, r9	; 0x20
     7b8:	93 87       	std	Z+11, r25	; 0x0b
     7ba:	7b 71       	andi	r23, 0x1B	; 27
     7bc:	74 9c       	mul	r7, r4
     7be:	c5 87       	std	Z+13, r28	; 0x0d
     7c0:	30 4e       	sbci	r19, 0xE0	; 224
     7c2:	94 9d       	mul	r25, r4
     7c4:	88 80       	ld	r8, Y
     7c6:	7f 82       	std	Y+7, r7	; 0x07
     7c8:	94 9c       	mul	r9, r4
     7ca:	91 82       	std	Z+1, r9	; 0x01
     7cc:	78 6d       	ori	r23, 0xD8	; 216
     7ce:	67 8b       	std	Z+23, r22	; 0x17
     7d0:	c2 a8       	ldd	r12, Z+50	; 0x32
     7d2:	42 35       	cpi	r20, 0x52	; 82
     7d4:	7f 9e       	mul	r7, r31
     7d6:	8c 76       	andi	r24, 0x6C	; 108
     7d8:	72 76       	andi	r23, 0x62	; 98
     7da:	88 98       	cbi	0x11, 0	; 17
     7dc:	8f 84       	ldd	r8, Y+15	; 0x0f
     7de:	74 6a       	ori	r23, 0xA4	; 164
     7e0:	66 78       	andi	r22, 0x86	; 134
     7e2:	af ba       	out	0x1f, r10	; 31
     7e4:	63 2b       	or	r22, r19
     7e6:	65 9e       	mul	r6, r21
     7e8:	9f 85       	ldd	r25, Y+15	; 0x0f
     7ea:	76 72       	andi	r23, 0x26	; 38
     7ec:	7e 93       	st	-X, r23
     7ee:	8f 85       	ldd	r24, Y+15	; 0x0f
     7f0:	79 69       	ori	r23, 0x99	; 153
     7f2:	60 70       	andi	r22, 0x00	; 0
     7f4:	99 c0       	rjmp	.+306    	; 0x928 <__LOCK_REGION_LENGTH__+0x528>
     7f6:	89 29       	or	r24, r9
     7f8:	3e 7f       	andi	r19, 0xFE	; 254
     7fa:	97 84       	ldd	r9, Z+15	; 0x0f
     7fc:	6b 68       	ori	r22, 0x8B	; 139
     7fe:	6f 8e       	std	Y+31, r6	; 0x1f
     800:	92 8a       	std	Z+18, r9	; 0x12
     802:	88 77       	andi	r24, 0x78	; 120
     804:	67 63       	ori	r22, 0x37	; 55
     806:	88 b6       	in	r8, 0x38	; 56
     808:	ab 4a       	sbci	r26, 0xAB	; 171
     80a:	2c 6e       	ori	r18, 0xEC	; 236
     80c:	95 96       	adiw	r26, 0x25	; 37
     80e:	77 6b       	ori	r23, 0xB7	; 183
     810:	6e 85       	ldd	r22, Y+14	; 0x0e
     812:	9b 8f       	std	Y+27, r25	; 0x1b
     814:	8b 7c       	andi	r24, 0xCB	; 203
     816:	69 5f       	subi	r22, 0xF9	; 249
     818:	78 a6       	std	Y+40, r7	; 0x28
     81a:	bb 79       	andi	r27, 0x9B	; 155
     81c:	28 55       	subi	r18, 0x58	; 88
     81e:	8c 9d       	mul	r24, r12
     820:	8f 75       	andi	r24, 0x5F	; 95
     822:	74 79       	andi	r23, 0x94	; 148
     824:	9b 98       	cbi	0x13, 3	; 19
     826:	8f 8a       	std	Y+23, r8	; 0x17
     828:	72 6c       	ori	r23, 0xC2	; 194
     82a:	72 9a       	sbi	0x0e, 2	; 14
     82c:	c4 a3       	std	Z+36, r28	; 0x24
     82e:	3b 3c       	cpi	r19, 0xCB	; 203
     830:	85 a0       	ldd	r8, Z+37	; 0x25
     832:	9e 7c       	andi	r25, 0xCE	; 206
     834:	70 70       	andi	r23, 0x00	; 0
     836:	8f a0       	ldd	r8, Y+39	; 0x27
     838:	91 8d       	ldd	r25, Z+25	; 0x19
     83a:	7e 69       	ori	r23, 0x9E	; 158
     83c:	5f 84       	ldd	r5, Y+15	; 0x0f
     83e:	ac b7       	in	r26, 0x3c	; 60
     840:	5c 20       	and	r5, r12
     842:	66 97       	sbiw	r28, 0x16	; 22
     844:	a5 86       	std	Z+13, r10	; 0x0d
     846:	73 71       	andi	r23, 0x13	; 19
     848:	84 9c       	mul	r8, r4
     84a:	94 90       	lpm	r9, Z
     84c:	7c 6b       	ori	r23, 0xBC	; 188
     84e:	61 6d       	ori	r22, 0xD1	; 209
     850:	a4 c4       	rjmp	.+2376   	; 0x119a <__stack+0x9b>
     852:	8b 2a       	or	r8, r27
     854:	44 91       	lpm	r20, Z
     856:	a1 91       	ld	r26, Z+
     858:	71 6e       	ori	r23, 0xE1	; 225
     85a:	74 90       	lpm	r7, Z
     85c:	96 8b       	std	Z+22, r25	; 0x16
     85e:	8b 7e       	andi	r24, 0xEB	; 235
     860:	6a 68       	ori	r22, 0x8A	; 138
     862:	93 c3       	rjmp	.+1830   	; 0xf8a <__LOCK_REGION_LENGTH__+0xb8a>
     864:	b5 48       	sbci	r27, 0x85	; 133
     866:	33 7c       	andi	r19, 0xC3	; 195
     868:	a1 9f       	mul	r26, r17
     86a:	7f 79       	andi	r23, 0x9F	; 159
     86c:	7c 95 9f 94 	jmp	0x5d293e	; 0x5d293e <__TEXT_REGION_LENGTH__+0x5b293e>
     870:	95 85       	ldd	r25, Z+13	; 0x0d
     872:	6f 5e       	subi	r22, 0xEF	; 239
     874:	7d ad       	ldd	r23, Y+61	; 0x3d
     876:	bf 72       	andi	r27, 0x2F	; 47
     878:	24 5e       	subi	r18, 0xE4	; 228
     87a:	94 9d       	mul	r25, r4
     87c:	80 6d       	ori	r24, 0xD0	; 208
     87e:	76 7f       	andi	r23, 0xF6	; 246
     880:	9b 95       	.word	0x959b	; ????
     882:	93 8e       	std	Z+27, r9	; 0x1b
     884:	79 64       	ori	r23, 0x49	; 73
     886:	6b 94       	des	6
     888:	bf 98       	cbi	0x17, 7	; 23
     88a:	2f 45       	sbci	r18, 0x5F	; 95
     88c:	89 a1       	ldd	r24, Y+33	; 0x21
     88e:	8f 71       	andi	r24, 0x1F	; 31
     890:	74 78       	andi	r23, 0x84	; 132
     892:	89 85       	ldd	r24, Y+9	; 0x09
     894:	84 88       	ldd	r8, Z+20	; 0x14
     896:	7d 65       	ori	r23, 0x5D	; 93
     898:	64 82       	std	Z+4, r6	; 0x04
     89a:	b2 b3       	in	r27, 0x12	; 18
     89c:	46 27       	eor	r20, r22
     89e:	75 9c       	mul	r7, r5
     8a0:	99 7c       	andi	r25, 0xC9	; 201
     8a2:	74 7b       	andi	r23, 0xB4	; 180
     8a4:	89 95       	.word	0x9589	; ????
     8a6:	89 92       	st	Y+, r8
     8a8:	8a 70       	andi	r24, 0x0A	; 10
     8aa:	64 76       	andi	r22, 0x64	; 100
     8ac:	a5 be       	out	0x35, r10	; 53
     8ae:	72 2b       	or	r23, r18
     8b0:	5e 93       	st	-X, r21
     8b2:	9f 8a       	std	Y+23, r9	; 0x17
     8b4:	79 7d       	andi	r23, 0xD9	; 217
     8b6:	8e 9a       	sbi	0x11, 6	; 17
     8b8:	96 96       	adiw	r26, 0x26	; 38
     8ba:	92 7f       	andi	r25, 0xF2	; 242
     8bc:	69 76       	andi	r22, 0x69	; 105
     8be:	98 c4       	rjmp	.+2352   	; 0x11f0 <__stack+0xf1>
     8c0:	93 36       	cpi	r25, 0x63	; 99
     8c2:	4e 8c       	ldd	r4, Y+30	; 0x1e
     8c4:	a2 8b       	std	Z+18, r26	; 0x12
     8c6:	76 71       	andi	r23, 0x16	; 22
     8c8:	7c 8f       	std	Y+28, r23	; 0x1c
     8ca:	8d 86       	std	Y+13, r8	; 0x0d
     8cc:	89 80       	ldd	r8, Y+1	; 0x01
     8ce:	69 65       	ori	r22, 0x59	; 89
     8d0:	7c ab       	std	Y+52, r23	; 0x34
     8d2:	9c 36       	cpi	r25, 0x6C	; 108
     8d4:	2d 73       	andi	r18, 0x3D	; 61
     8d6:	92 8d       	ldd	r25, Z+26	; 0x1a
     8d8:	74 6d       	ori	r23, 0xD4	; 212
     8da:	74 88       	ldd	r7, Z+20	; 0x14
     8dc:	8a 7c       	andi	r24, 0xCA	; 202
     8de:	7f 88       	ldd	r7, Y+23	; 0x17
     8e0:	70 62       	ori	r23, 0x20	; 32
     8e2:	77 a0       	ldd	r7, Z+39	; 0x27
     8e4:	ad 4c       	sbci	r26, 0xCD	; 205
     8e6:	1e 59       	subi	r17, 0x9E	; 158
     8e8:	8e 92       	st	-X, r8
     8ea:	7a 72       	andi	r23, 0x2A	; 42
     8ec:	7b 8c       	ldd	r7, Y+27	; 0x1b
     8ee:	93 86       	std	Z+11, r9	; 0x0b
     8f0:	7d 87       	std	Y+13, r23	; 0x0d
     8f2:	7d 65       	ori	r23, 0x5D	; 93
     8f4:	70 9d       	mul	r23, r0
     8f6:	c2 83       	std	Z+2, r28	; 0x02
     8f8:	2f 5c       	subi	r18, 0xCF	; 207
     8fa:	90 99       	sbic	0x12, 0	; 18
     8fc:	88 73       	andi	r24, 0x38	; 56
     8fe:	76 7f       	andi	r23, 0xF6	; 246
     900:	93 88       	ldd	r9, Z+19	; 0x13
     902:	7a 7f       	andi	r23, 0xFA	; 250
     904:	83 6d       	ori	r24, 0xD3	; 211
     906:	69 88       	ldd	r6, Y+17	; 0x11
     908:	b6 95       	lsr	r27
     90a:	38 47       	sbci	r19, 0x78	; 120
     90c:	81 a1       	ldd	r24, Z+33	; 0x21
     90e:	95 7f       	andi	r25, 0xF5	; 245
     910:	7c 84       	ldd	r7, Y+12	; 0x0c
     912:	98 93       	.word	0x9398	; ????
     914:	80 7b       	andi	r24, 0xB0	; 176
     916:	8b 77       	andi	r24, 0x7B	; 123
     918:	66 7c       	andi	r22, 0xC6	; 198
     91a:	aa ad       	ldd	r26, Y+58	; 0x3a
     91c:	4b 38       	cpi	r20, 0x8B	; 139
     91e:	76 97       	sbiw	r30, 0x16	; 22
     920:	9a 7b       	andi	r25, 0xBA	; 186
     922:	75 7d       	andi	r23, 0xD5	; 213
     924:	94 97       	sbiw	r26, 0x24	; 36
     926:	81 7b       	andi	r24, 0xB1	; 177
     928:	8c 84       	ldd	r8, Y+12	; 0x0c
     92a:	70 7f       	andi	r23, 0xF0	; 240
     92c:	a9 bc       	out	0x29, r10	; 41
     92e:	61 33       	cpi	r22, 0x31	; 49
     930:	72 a2       	std	Z+34, r7	; 0x22
     932:	a3 8c       	ldd	r10, Z+27	; 0x1b
     934:	7b 7d       	andi	r23, 0xDB	; 219
     936:	95 9c       	mul	r9, r5
     938:	8a 78       	andi	r24, 0x8A	; 138
     93a:	89 87       	std	Y+9, r24	; 0x09
     93c:	6f 7b       	andi	r22, 0xBF	; 191
     93e:	98 bf       	out	0x38, r25	; 56
     940:	7b 2e       	mov	r7, r27
     942:	5a 8c       	ldd	r5, Y+26	; 0x1a
     944:	96 84       	ldd	r9, Z+14	; 0x0e
     946:	76 72       	andi	r23, 0x26	; 38
     948:	86 99       	sbic	0x10, 6	; 16
     94a:	89 76       	andi	r24, 0x69	; 105
     94c:	7f 82       	std	Y+7, r7	; 0x07
     94e:	6d 6e       	ori	r22, 0xED	; 237
     950:	8a bc       	out	0x2a, r8	; 42
     952:	89 2d       	mov	r24, r9
     954:	4a 8d       	ldd	r20, Y+26	; 0x1a
     956:	95 85       	ldd	r25, Z+13	; 0x0d
     958:	7b 72       	andi	r23, 0x2B	; 43
     95a:	83 93       	.word	0x9383	; ????
     95c:	8a 6c       	ori	r24, 0xCA	; 202
     95e:	73 86       	std	Z+11, r7	; 0x0b
     960:	76 71       	andi	r23, 0x16	; 22
     962:	84 b6       	in	r8, 0x34	; 52
     964:	9a 3b       	cpi	r25, 0xBA	; 186
     966:	4b 87       	std	Y+11, r20	; 0x0b
     968:	93 84       	ldd	r9, Z+11	; 0x0b
     96a:	78 72       	andi	r23, 0x28	; 40
     96c:	7e 99       	sbic	0x0f, 6	; 15
     96e:	91 7d       	andi	r25, 0xD1	; 209
     970:	79 8f       	std	Y+25, r23	; 0x19
     972:	7f 78       	andi	r23, 0x8F	; 143
     974:	84 ad       	ldd	r24, Z+60	; 0x3c
     976:	ae 48       	sbci	r26, 0x8E	; 142
     978:	47 7d       	andi	r20, 0xD7	; 215
     97a:	97 8d       	ldd	r25, Z+31	; 0x1f
     97c:	87 80       	ldd	r8, Z+7	; 0x07
     97e:	83 9f       	mul	r24, r19
     980:	9c 8a       	std	Y+20, r9	; 0x14
     982:	7a 91       	ld	r23, -Y
     984:	8a 7e       	andi	r24, 0xEA	; 234
     986:	86 aa       	std	Z+54, r8	; 0x36
     988:	ad 52       	subi	r26, 0x2D	; 45
     98a:	3b 79       	andi	r19, 0x9B	; 155
     98c:	94 87       	std	Z+12, r25	; 0x0c
     98e:	8b 7f       	andi	r24, 0xFB	; 251
     990:	84 9d       	mul	r24, r4
     992:	9c 84       	ldd	r9, Y+12	; 0x0c
     994:	6e 86       	std	Y+14, r6	; 0x0e
     996:	82 77       	andi	r24, 0x72	; 114
     998:	75 97       	sbiw	r30, 0x15	; 21
     99a:	a7 4e       	sbci	r26, 0xE7	; 231
     99c:	35 6c       	ori	r19, 0xC5	; 197
     99e:	8b 82       	std	Y+3, r8	; 0x03
     9a0:	83 7d       	andi	r24, 0xD3	; 211
     9a2:	76 8c       	ldd	r7, Z+30	; 0x1e
     9a4:	8e 7e       	andi	r24, 0xEE	; 238
     9a6:	66 75       	andi	r22, 0x56	; 86
     9a8:	80 6c       	ori	r24, 0xC0	; 192
     9aa:	74 8d       	ldd	r23, Z+28	; 0x1c
     9ac:	a4 5f       	subi	r26, 0xF4	; 244
     9ae:	32 67       	ori	r19, 0x72	; 114
     9b0:	85 82       	std	Z+5, r8	; 0x05
     9b2:	79 7b       	andi	r23, 0xB9	; 185
     9b4:	77 8d       	ldd	r23, Z+31	; 0x1f
     9b6:	92 81       	ldd	r25, Z+2	; 0x02
     9b8:	6b 6b       	ori	r22, 0xBB	; 187
     9ba:	76 6d       	ori	r23, 0xD6	; 214
     9bc:	79 90       	ld	r7, Y+
     9be:	ad 71       	andi	r26, 0x1D	; 29
     9c0:	32 62       	ori	r19, 0x22	; 34
     9c2:	8f 84       	ldd	r8, Y+15	; 0x0f
     9c4:	77 79       	andi	r23, 0x97	; 151
     9c6:	79 8f       	std	Y+25, r23	; 0x19
     9c8:	92 83       	std	Z+2, r25	; 0x02
     9ca:	71 71       	andi	r23, 0x11	; 17
     9cc:	81 7b       	andi	r24, 0xB1	; 177
     9ce:	7f 9a       	sbi	0x0f, 7	; 15
     9d0:	b9 7a       	andi	r27, 0xA9	; 169
     9d2:	36 62       	ori	r19, 0x26	; 38
     9d4:	91 8c       	ldd	r9, Z+25	; 0x19
     9d6:	7c 7b       	andi	r23, 0xBC	; 188
     9d8:	7b 8f       	std	Y+27, r23	; 0x1b
     9da:	9b 88       	ldd	r9, Y+19	; 0x13
     9dc:	75 6d       	ori	r23, 0xD5	; 213
     9de:	7f 73       	andi	r23, 0x3F	; 63
     9e0:	7a 86       	std	Y+10, r7	; 0x0a
     9e2:	a2 8c       	ldd	r10, Z+26	; 0x1a
     9e4:	38 4f       	sbci	r19, 0xF8	; 248
     9e6:	71 80       	ldd	r7, Z+1	; 0x01
     9e8:	75 76       	andi	r23, 0x65	; 101
     9ea:	76 85       	ldd	r23, Z+14	; 0x0e
     9ec:	9d 91       	ld	r25, X+
     9ee:	82 71       	andi	r24, 0x12	; 18
     9f0:	80 7b       	andi	r24, 0xB0	; 176
     9f2:	82 88       	ldd	r8, Z+18	; 0x12
     9f4:	a6 a8       	ldd	r10, Z+54	; 0x36
     9f6:	50 4a       	sbci	r21, 0xA0	; 160
     9f8:	83 96       	adiw	r24, 0x23	; 35
     9fa:	8b 85       	ldd	r24, Y+11	; 0x0b
     9fc:	7d 88       	ldd	r7, Y+21	; 0x15
     9fe:	a2 9c       	mul	r10, r2
     a00:	88 70       	andi	r24, 0x08	; 8
     a02:	7d 79       	andi	r23, 0x9D	; 157
     a04:	7d 8c       	ldd	r7, Y+29	; 0x1d
     a06:	a6 b9       	out	0x06, r26	; 6
     a08:	62 48       	sbci	r22, 0x82	; 130
     a0a:	85 9d       	mul	r24, r5
     a0c:	8a 82       	std	Y+2, r8	; 0x02
     a0e:	7f 86       	std	Y+15, r7	; 0x0f
     a10:	a8 a4       	ldd	r10, Y+40	; 0x28
     a12:	8e 7c       	andi	r24, 0xCE	; 206
     a14:	8a 88       	ldd	r8, Y+18	; 0x12
     a16:	7c 88       	ldd	r7, Y+20	; 0x14
     a18:	9b c0       	rjmp	.+310    	; 0xb50 <__LOCK_REGION_LENGTH__+0x750>
     a1a:	74 3f       	cpi	r23, 0xF4	; 244
     a1c:	7c 99       	sbic	0x0f, 4	; 15
     a1e:	8f 84       	ldd	r8, Y+15	; 0x0f
     a20:	82 7e       	andi	r24, 0xE2	; 226
     a22:	9c 9f       	mul	r25, r28
     a24:	8b 79       	andi	r24, 0x9B	; 155
     a26:	79 7f       	andi	r23, 0xF9	; 249
     a28:	77 87       	std	Z+15, r23	; 0x0f
     a2a:	91 bc       	out	0x21, r9	; 33
     a2c:	80 32       	cpi	r24, 0x20	; 32
     a2e:	69 91       	ld	r22, Y+
     a30:	82 77       	andi	r24, 0x72	; 114
     a32:	79 70       	andi	r23, 0x09	; 9
     a34:	8e 9a       	sbi	0x11, 6	; 17
     a36:	89 72       	andi	r24, 0x29	; 41
     a38:	71 7d       	andi	r23, 0xD1	; 209
     a3a:	6f 80       	ldd	r6, Y+7	; 0x07
     a3c:	85 a8       	ldd	r8, Z+53	; 0x35
     a3e:	8b 34       	cpi	r24, 0x4B	; 75
     a40:	5b 88       	ldd	r5, Y+19	; 0x13
     a42:	83 7a       	andi	r24, 0xA3	; 163
     a44:	7b 6a       	ori	r23, 0xAB	; 171
     a46:	80 99       	sbic	0x10, 0	; 16
     a48:	8d 7b       	andi	r24, 0xBD	; 189
     a4a:	6b 81       	ldd	r22, Y+3	; 0x03
     a4c:	7a 82       	std	Y+2, r7	; 0x02
     a4e:	85 a4       	ldd	r8, Z+45	; 0x2d
     a50:	98 3f       	cpi	r25, 0xF8	; 248
     a52:	4b 84       	ldd	r4, Y+11	; 0x0b
     a54:	8d 7b       	andi	r24, 0xBD	; 189
     a56:	7f 78       	andi	r23, 0x8F	; 143
     a58:	8b a4       	ldd	r8, Y+43	; 0x2b
     a5a:	97 84       	ldd	r9, Z+15	; 0x0f
     a5c:	75 81       	ldd	r23, Z+5	; 0x05
     a5e:	79 7d       	andi	r23, 0xD9	; 217
     a60:	84 a1       	ldd	r24, Z+36	; 0x24
     a62:	a6 4c       	sbci	r26, 0xC6	; 198
     a64:	45 84       	ldd	r4, Z+13	; 0x0d
     a66:	8f 79       	andi	r24, 0x9F	; 159
     a68:	78 73       	andi	r23, 0x38	; 56
     a6a:	80 99       	sbic	0x10, 0	; 16
     a6c:	91 7c       	andi	r25, 0xC1	; 193
     a6e:	6d 78       	andi	r22, 0x8D	; 141
     a70:	75 78       	andi	r23, 0x85	; 133
     a72:	81 9a       	sbi	0x10, 1	; 16
     a74:	b1 5e       	subi	r27, 0xE1	; 225
     a76:	36 74       	andi	r19, 0x46	; 70
     a78:	90 7f       	andi	r25, 0xF0	; 240
     a7a:	71 71       	andi	r23, 0x11	; 17
     a7c:	81 a0       	ldd	r8, Z+33	; 0x21
     a7e:	8f 7b       	andi	r24, 0xBF	; 191
     a80:	71 7f       	andi	r23, 0xF1	; 241
     a82:	75 72       	andi	r23, 0x25	; 37
     a84:	75 8b       	std	Z+21, r23	; 0x15
     a86:	b5 5d       	subi	r27, 0xD5	; 213
     a88:	2a 7a       	andi	r18, 0xAA	; 170
     a8a:	9c 6e       	ori	r25, 0xEC	; 236
     a8c:	6c 78       	andi	r22, 0x8C	; 140
     a8e:	88 9a       	sbi	0x11, 0	; 17
     a90:	84 7a       	andi	r24, 0xA4	; 164
     a92:	83 8a       	std	Z+19, r8	; 0x13
     a94:	76 70       	andi	r23, 0x06	; 6
     a96:	7c 92       	st	X, r7
     a98:	bd 72       	andi	r27, 0x2D	; 45
     a9a:	1f 77       	andi	r17, 0x7F	; 127
     a9c:	a3 68       	ori	r26, 0x83	; 131
     a9e:	6b 83       	std	Y+3, r22	; 0x03
     aa0:	84 99       	sbic	0x10, 4	; 16
     aa2:	8c 7a       	andi	r24, 0xAC	; 172
     aa4:	7f 87       	std	Y+15, r23	; 0x0f
     aa6:	75 67       	ori	r23, 0x75	; 117
     aa8:	7c 88       	ldd	r7, Y+20	; 0x14
     aaa:	b2 89       	ldd	r27, Z+18	; 0x12
     aac:	22 62       	ori	r18, 0x22	; 34
     aae:	a3 6c       	ori	r26, 0xC3	; 195
     ab0:	65 82       	std	Z+5, r6	; 0x05
     ab2:	81 97       	sbiw	r24, 0x21	; 33
     ab4:	95 83       	std	Z+5, r25	; 0x05
     ab6:	86 86       	std	Z+14, r8	; 0x0e
     ab8:	7d 66       	ori	r23, 0x6D	; 109
     aba:	7a 83       	std	Y+2, r23	; 0x02
     abc:	a1 a3       	std	Z+33, r26	; 0x21
     abe:	39 51       	subi	r19, 0x19	; 25
     ac0:	ad 80       	ldd	r10, Y+5	; 0x05
     ac2:	64 89       	ldd	r22, Z+20	; 0x14
     ac4:	85 97       	sbiw	r24, 0x25	; 37
     ac6:	a3 82       	std	Z+3, r10	; 0x03
     ac8:	81 8c       	ldd	r8, Z+25	; 0x19
     aca:	8a 70       	andi	r24, 0x0A	; 10
     acc:	76 8c       	ldd	r7, Z+30	; 0x1e
     ace:	a2 bd       	out	0x22, r26	; 34
     ad0:	5b 37       	cpi	r21, 0x7B	; 123
     ad2:	a1 96       	adiw	r28, 0x21	; 33
     ad4:	64 80       	ldd	r6, Z+4	; 0x04
     ad6:	88 93       	.word	0x9388	; ????
     ad8:	a4 89       	ldd	r26, Z+20	; 0x14
     ada:	7e 8b       	std	Y+22, r23	; 0x16
     adc:	95 7b       	andi	r25, 0xB5	; 181
     ade:	73 8c       	ldd	r7, Z+27	; 0x1b
     ae0:	95 bd       	out	0x25, r25	; 37
     ae2:	7f 31       	cpi	r23, 0x1F	; 31
     ae4:	85 a6       	std	Z+45, r8	; 0x2d
     ae6:	6b 71       	andi	r22, 0x1B	; 27
     ae8:	88 8b       	std	Y+16, r24	; 0x10
     aea:	a2 8f       	std	Z+26, r26	; 0x1a
     aec:	7d 88       	ldd	r7, Y+21	; 0x15
     aee:	93 82       	std	Z+3, r9	; 0x03
     af0:	69 81       	ldd	r22, Y+1	; 0x01
     af2:	8d b0       	in	r8, 0x0d	; 13
     af4:	97 2f       	mov	r25, r23
     af6:	5b aa       	std	Y+51, r5	; 0x33
     af8:	78 61       	ori	r23, 0x18	; 24
     afa:	7b 85       	ldd	r23, Y+11	; 0x0b
     afc:	99 8d       	ldd	r25, Y+25	; 0x19
     afe:	73 79       	andi	r23, 0x93	; 147
     b00:	8d 89       	ldd	r24, Y+21	; 0x15
     b02:	64 6e       	ori	r22, 0xE4	; 228
     b04:	88 9a       	sbi	0x11, 0	; 17
     b06:	a9 46       	sbci	r26, 0x69	; 105
     b08:	39 9f       	mul	r19, r25
     b0a:	8b 5e       	subi	r24, 0xEB	; 235
     b0c:	75 85       	ldd	r23, Z+13	; 0x0d
     b0e:	8f 94 72 6f 	call	0x22dee4	; 0x22dee4 <__TEXT_REGION_LENGTH__+0x20dee4>
     b12:	88 8f       	std	Y+24, r24	; 0x18
     b14:	6c 6c       	ori	r22, 0xCC	; 204
     b16:	8d 94 b6 68 	jmp	0x22d16c	; 0x22d16c <__TEXT_REGION_LENGTH__+0x20d16c>
     b1a:	24 81       	ldd	r18, Z+4	; 0x04
     b1c:	9c 5e       	subi	r25, 0xEC	; 236
     b1e:	67 81       	ldd	r22, Z+7	; 0x07
     b20:	8d 9e       	mul	r8, r29
     b22:	7f 6c       	ori	r23, 0xCF	; 207
     b24:	7f 94 74 5b 	call	0x1eb6e8	; 0x1eb6e8 <__TEXT_REGION_LENGTH__+0x1cb6e8>
     b28:	76 83       	std	Z+6, r23	; 0x06
     b2a:	b3 8a       	std	Z+19, r11	; 0x13
     b2c:	1d 62       	ori	r17, 0x2D	; 45
     b2e:	aa 6a       	ori	r26, 0xAA	; 170
     b30:	5c 80       	ldd	r5, Y+4	; 0x04
     b32:	86 97       	sbiw	r24, 0x26	; 38
     b34:	8a 6c       	ori	r24, 0xCA	; 202
     b36:	7b 97       	sbiw	r30, 0x1b	; 27
     b38:	83 5d       	subi	r24, 0xD3	; 211
     b3a:	76 83       	std	Z+6, r23	; 0x06
     b3c:	aa a1       	ldd	r26, Y+34	; 0x22
     b3e:	25 4a       	sbci	r18, 0xA5	; 165
     b40:	b1 7c       	andi	r27, 0xC1	; 193
     b42:	53 76       	andi	r21, 0x63	; 99
     b44:	81 8f       	std	Z+25, r24	; 0x19
     b46:	8d 69       	ori	r24, 0x9D	; 157
     b48:	72 91       	ld	r23, -Z
     b4a:	8e 66       	ori	r24, 0x6E	; 110
     b4c:	6a 89       	ldd	r22, Y+18	; 0x12
     b4e:	9b b6       	in	r9, 0x3b	; 59
     b50:	4e 2e       	mov	r4, r30
     b52:	a6 9b       	sbis	0x14, 6	; 20
     b54:	5c 77       	andi	r21, 0x7C	; 124
     b56:	8e 94 a3 81 	call	0x210346	; 0x210346 <__TEXT_REGION_LENGTH__+0x1f0346>
     b5a:	76 93       	lac	Z, r23
     b5c:	a0 7b       	andi	r26, 0xB0	; 176
     b5e:	6c 8a       	std	Y+20, r6	; 0x14
     b60:	9b c0       	rjmp	.+310    	; 0xc98 <__LOCK_REGION_LENGTH__+0x898>
     b62:	75 24       	eor	r7, r5
     b64:	8b b3       	in	r24, 0x1b	; 27
     b66:	69 6b       	ori	r22, 0xB9	; 185
     b68:	8f 94 a4 8c 	call	0x231948	; 0x231948 <__TEXT_REGION_LENGTH__+0x211948>
     b6c:	75 8a       	std	Z+21, r7	; 0x15
     b6e:	a2 8c       	ldd	r10, Z+26	; 0x1a
     b70:	64 84       	ldd	r6, Z+12	; 0x0c
     b72:	95 b9       	out	0x05, r25	; 5
     b74:	90 22       	and	r9, r16
     b76:	6b bc       	out	0x2b, r6	; 43
     b78:	73 5b       	subi	r23, 0xB3	; 179
     b7a:	88 8f       	std	Y+24, r24	; 0x18
     b7c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     b7e:	67 7b       	andi	r22, 0xB7	; 183
     b80:	99 89       	ldd	r25, Y+17	; 0x11
     b82:	64 6f       	ori	r22, 0xF4	; 244
     b84:	8a aa       	std	Y+50, r8	; 0x32
     b86:	a9 2c       	mov	r10, r9
     b88:	45 b3       	in	r20, 0x15	; 21
     b8a:	83 58       	subi	r24, 0x83	; 131
     b8c:	73 81       	ldd	r23, Z+3	; 0x03
     b8e:	93 94       	inc	r9
     b90:	6c 72       	andi	r22, 0x2C	; 44
     b92:	90 92 67 67 	sts	0x6767, r9	; 0x806767 <__bss_end+0x6506>
     b96:	86 9b       	sbis	0x10, 6	; 16
     b98:	b4 4c       	sbci	r27, 0xC4	; 196
     b9a:	29 a1       	ldd	r18, Y+33	; 0x21
     b9c:	9d 58       	subi	r25, 0x8D	; 141
     b9e:	6f 84       	ldd	r6, Y+15	; 0x0f
     ba0:	90 9e       	mul	r9, r16
     ba2:	75 6f       	ori	r23, 0xF5	; 245
     ba4:	92 9e       	mul	r9, r18
     ba6:	7b 6a       	ori	r23, 0xAB	; 171
     ba8:	8a 9c       	mul	r8, r10
     baa:	b6 78       	andi	r27, 0x86	; 134
     bac:	23 82       	std	Z+3, r2	; 0x03
     bae:	af 65       	ori	r26, 0x5F	; 95
     bb0:	6a 8b       	std	Y+18, r22	; 0x12
     bb2:	94 a3       	std	Z+36, r25	; 0x24
     bb4:	8b 6f       	ori	r24, 0xFB	; 251
     bb6:	8a 9c       	mul	r8, r10
     bb8:	80 61       	ori	r24, 0x10	; 16
     bba:	7f 89       	ldd	r23, Y+23	; 0x17
     bbc:	b2 90       	ld	r11, -Z
     bbe:	21 64       	ori	r18, 0x41	; 65
     bc0:	b3 70       	andi	r27, 0x03	; 3
     bc2:	56 83       	std	Z+6, r21	; 0x06
     bc4:	84 97       	sbiw	r24, 0x24	; 36
     bc6:	8b 6a       	ori	r24, 0xAB	; 171
     bc8:	76 98       	cbi	0x0e, 6	; 14
     bca:	86 63       	ori	r24, 0x36	; 54
     bcc:	73 77       	andi	r23, 0x73	; 115
     bce:	a8 a6       	std	Y+40, r10	; 0x28
     bd0:	1c 37       	cpi	r17, 0x7C	; 124
     bd2:	b6 80       	ldd	r11, Z+6	; 0x06
     bd4:	52 75       	andi	r21, 0x52	; 82
     bd6:	87 98       	cbi	0x10, 7	; 16
     bd8:	96 6d       	ori	r25, 0xD6	; 214
     bda:	6f 96       	adiw	r28, 0x1f	; 31
     bdc:	8d 62       	ori	r24, 0x2D	; 45
     bde:	71 7b       	andi	r23, 0xB1	; 177
     be0:	9c bb       	out	0x1c, r25	; 28
     be2:	35 2a       	or	r3, r21
     be4:	aa 95       	dec	r26
     be6:	51 78       	andi	r21, 0x81	; 129
     be8:	90 92 9d 75 	sts	0x759D, r9	; 0x80759d <__bss_end+0x733c>
     bec:	73 96       	adiw	r30, 0x13	; 19
     bee:	8f 6a       	ori	r24, 0xAF	; 175
     bf0:	78 76       	andi	r23, 0x68	; 104
     bf2:	93 c8       	rjmp	.-3802   	; 0xfffffd1a <__eeprom_end+0xff7efd1a>
     bf4:	56 27       	eor	r21, r22
     bf6:	a3 a8       	ldd	r10, Z+51	; 0x33
     bf8:	5b 75       	andi	r21, 0x5B	; 91
     bfa:	88 8b       	std	Y+16, r24	; 0x10
     bfc:	a4 7a       	andi	r26, 0xA4	; 164
     bfe:	71 93       	st	Z+, r23
     c00:	94 7f       	andi	r25, 0xF4	; 244
     c02:	7b 7a       	andi	r23, 0xAB	; 171
     c04:	99 c9       	rjmp	.-3278   	; 0xffffff38 <__eeprom_end+0xff7eff38>
     c06:	5d 25       	eor	r21, r13
     c08:	94 a8       	ldd	r9, Z+52	; 0x34
     c0a:	60 6f       	ori	r22, 0xF0	; 240
     c0c:	87 86       	std	Z+15, r8	; 0x0f
     c0e:	a3 79       	andi	r26, 0x93	; 147
     c10:	6d 8a       	std	Y+21, r6	; 0x15
     c12:	8e 79       	andi	r24, 0x9E	; 158
     c14:	76 71       	andi	r23, 0x16	; 22
     c16:	90 c5       	rjmp	.+2848   	; 0x1738 <__stack+0x639>
     c18:	5c 29       	or	r21, r12
     c1a:	91 a6       	std	Z+41, r9	; 0x29
     c1c:	5b 70       	andi	r21, 0x0B	; 11
     c1e:	8d 89       	ldd	r24, Y+21	; 0x15
     c20:	a0 7f       	andi	r26, 0xF0	; 240
     c22:	71 92       	st	Z+, r7
     c24:	86 74       	andi	r24, 0x46	; 70
     c26:	7e 73       	andi	r23, 0x3E	; 62
     c28:	8a c4       	rjmp	.+2324   	; 0x153e <__stack+0x43f>
     c2a:	61 22       	and	r6, r17
     c2c:	93 a4       	ldd	r9, Z+43	; 0x2b
     c2e:	5f 75       	andi	r21, 0x5F	; 95
     c30:	8f 84       	ldd	r8, Y+15	; 0x0f
     c32:	a1 85       	ldd	r26, Z+9	; 0x09
     c34:	71 8d       	ldd	r23, Z+25	; 0x19
     c36:	81 75       	andi	r24, 0x51	; 81
     c38:	89 77       	andi	r24, 0x79	; 121
     c3a:	80 cc       	rjmp	.-1792   	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
     c3c:	6a 1e       	adc	r6, r26
     c3e:	90 a3       	std	Z+32, r25	; 0x20
     c40:	5d 74       	andi	r21, 0x4D	; 77
     c42:	8e 82       	std	Y+6, r8	; 0x06
     c44:	a1 86       	std	Z+9, r10	; 0x09
     c46:	73 8a       	std	Z+19, r7	; 0x13
     c48:	7e 6f       	ori	r23, 0xFE	; 254
     c4a:	8b 7f       	andi	r24, 0xFB	; 251
     c4c:	83 cd       	rjmp	.-1274   	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
     c4e:	70 23       	and	r23, r16
     c50:	8d a3       	std	Y+37, r24	; 0x25
     c52:	53 74       	andi	r21, 0x43	; 67
     c54:	90 80       	ld	r9, Z
     c56:	9e 86       	std	Y+14, r9	; 0x0e
     c58:	79 98       	cbi	0x0f, 1	; 15
     c5a:	80 68       	ori	r24, 0x80	; 128
     c5c:	8d 82       	std	Y+5, r8	; 0x05
     c5e:	7a c4       	rjmp	.+2292   	; 0x1554 <__stack+0x455>
     c60:	73 29       	or	r23, r3
     c62:	99 ac       	ldd	r9, Y+57	; 0x39
     c64:	58 70       	andi	r21, 0x08	; 8
     c66:	98 85       	ldd	r25, Y+8	; 0x08
     c68:	9d 7f       	andi	r25, 0xFD	; 253
     c6a:	77 a2       	std	Z+39, r7	; 0x27
     c6c:	89 5b       	subi	r24, 0xB9	; 185
     c6e:	88 8c       	ldd	r8, Y+24	; 0x18
     c70:	7a bd       	out	0x2a, r23	; 42
     c72:	5f 25       	eor	r21, r15
     c74:	98 a4       	ldd	r9, Y+40	; 0x28
     c76:	50 78       	andi	r21, 0x80	; 128
     c78:	9c 89       	ldd	r25, Y+20	; 0x14
     c7a:	9b 7b       	andi	r25, 0xBB	; 187
     c7c:	71 97       	sbiw	r30, 0x11	; 17
     c7e:	81 4d       	sbci	r24, 0xD1	; 209
     c80:	84 8a       	std	Z+20, r8	; 0x14
     c82:	7a b6       	in	r7, 0x3a	; 58
     c84:	5e 20       	and	r5, r14
     c86:	95 98       	cbi	0x12, 5	; 18
     c88:	42 74       	andi	r20, 0x42	; 66
     c8a:	96 79       	andi	r25, 0x96	; 150
     c8c:	97 82       	std	Z+7, r9	; 0x07
     c8e:	6d 96       	adiw	r28, 0x1d	; 29
     c90:	82 4f       	sbci	r24, 0xF2	; 242
     c92:	88 7f       	andi	r24, 0xF8	; 248
     c94:	6e be       	out	0x3e, r6	; 62
     c96:	5e 1f       	adc	r21, r30
     c98:	94 9c       	mul	r9, r4
     c9a:	44 75       	andi	r20, 0x54	; 84
     c9c:	95 7c       	andi	r25, 0xC5	; 197
     c9e:	94 8a       	std	Z+20, r9	; 0x14
     ca0:	70 95       	com	r23
     ca2:	8a 55       	subi	r24, 0x5A	; 90
     ca4:	89 85       	ldd	r24, Y+9	; 0x09
     ca6:	7a c0       	rjmp	.+244    	; 0xd9c <__LOCK_REGION_LENGTH__+0x99c>
     ca8:	66 1e       	adc	r6, r22
     caa:	9f a9       	ldd	r25, Y+55	; 0x37
     cac:	4c 75       	andi	r20, 0x5C	; 92
     cae:	98 84       	ldd	r9, Y+8	; 0x08
     cb0:	99 8a       	std	Y+17, r9	; 0x11
     cb2:	75 9a       	sbi	0x0e, 5	; 14
     cb4:	91 5d       	subi	r25, 0xD1	; 209
     cb6:	8c 8b       	std	Y+20, r24	; 0x14
     cb8:	83 c4       	rjmp	.+2310   	; 0x15c0 <__stack+0x4c1>
     cba:	69 2a       	or	r6, r25
     cbc:	a0 ae       	std	Z+56, r10	; 0x38
     cbe:	53 78       	andi	r21, 0x83	; 131
     cc0:	9b 8b       	std	Y+19, r25	; 0x13
     cc2:	9b 8e       	std	Y+27, r9	; 0x1b
     cc4:	77 9e       	mul	r7, r23
     cc6:	8f 5f       	subi	r24, 0xFF	; 255
     cc8:	88 8f       	std	Y+24, r24	; 0x18
     cca:	8a ba       	out	0x1a, r8	; 26
     ccc:	64 32       	cpi	r22, 0x24	; 36
     cce:	a6 a0       	ldd	r10, Z+38	; 0x26
     cd0:	4e 79       	andi	r20, 0x9E	; 158
     cd2:	9e 82       	std	Y+6, r9	; 0x06
     cd4:	98 8d       	ldd	r25, Y+24	; 0x18
     cd6:	79 9b       	sbis	0x0f, 1	; 15
     cd8:	90 59       	subi	r25, 0x90	; 144
     cda:	7c 8b       	std	Y+20, r23	; 0x14
     cdc:	86 b3       	in	r24, 0x16	; 22
     cde:	55 32       	cpi	r21, 0x25	; 37
     ce0:	a5 9d       	mul	r26, r5
     ce2:	4b 76       	andi	r20, 0x6B	; 107
     ce4:	9a 7e       	andi	r25, 0xEA	; 234
     ce6:	94 84       	ldd	r9, Z+12	; 0x0c
     ce8:	74 97       	sbiw	r30, 0x14	; 20
     cea:	87 56       	subi	r24, 0x67	; 103
     cec:	78 84       	ldd	r7, Y+8	; 0x08
     cee:	87 af       	std	Z+63, r24	; 0x3f
     cf0:	52 30       	cpi	r21, 0x02	; 2
     cf2:	a0 94       	com	r10
     cf4:	4a 7c       	andi	r20, 0xCA	; 202
     cf6:	93 78       	andi	r25, 0x83	; 131
     cf8:	8e 82       	std	Y+6, r8	; 0x06
     cfa:	72 95       	swap	r23
     cfc:	7f 55       	subi	r23, 0x5F	; 95
     cfe:	83 7f       	andi	r24, 0xF3	; 243
     d00:	8b b8       	out	0x0b, r8	; 11
     d02:	4e 3a       	cpi	r20, 0xAE	; 174
     d04:	ab 93       	.word	0x93ab	; ????
     d06:	4b 7f       	andi	r20, 0xFB	; 251
     d08:	9d 85       	ldd	r25, Y+13	; 0x0d
     d0a:	92 7e       	andi	r25, 0xE2	; 226
     d0c:	7a 9e       	mul	r7, r26
     d0e:	81 53       	subi	r24, 0x31	; 49
     d10:	86 84       	ldd	r8, Z+14	; 0x0e
     d12:	8e bd       	out	0x2e, r24	; 46
     d14:	4e 39       	cpi	r20, 0x9E	; 158
     d16:	ae 92       	st	-X, r10
     d18:	4a 7d       	andi	r20, 0xDA	; 218
     d1a:	91 7c       	andi	r25, 0xC1	; 193
     d1c:	8d 7f       	andi	r24, 0xFD	; 253
     d1e:	79 9c       	mul	r7, r9
     d20:	85 5b       	subi	r24, 0xB5	; 181
     d22:	8c 81       	ldd	r24, Y+4	; 0x04
     d24:	89 bc       	out	0x29, r8	; 41
     d26:	47 38       	cpi	r20, 0x87	; 135
     d28:	ad 8f       	std	Y+29, r26	; 0x1d
     d2a:	4e 88       	ldd	r4, Y+22	; 0x16
     d2c:	98 7e       	andi	r25, 0xE8	; 232
     d2e:	92 7f       	andi	r25, 0xF2	; 242
     d30:	77 9d       	mul	r23, r7
     d32:	81 5c       	subi	r24, 0xC1	; 193
     d34:	8d 80       	ldd	r8, Y+5	; 0x05
     d36:	90 bf       	out	0x30, r25	; 48
     d38:	4a 3a       	cpi	r20, 0xAA	; 170
     d3a:	b6 8c       	ldd	r11, Z+30	; 0x1e
     d3c:	48 86       	std	Y+8, r4	; 0x08
     d3e:	9b 81       	ldd	r25, Y+3	; 0x03
     d40:	94 80       	ldd	r9, Z+4	; 0x04
     d42:	78 a0       	ldd	r7, Y+32	; 0x20
     d44:	81 5e       	subi	r24, 0xE1	; 225
     d46:	85 78       	andi	r24, 0x85	; 133
     d48:	8c c6       	rjmp	.+3352   	; 0x1a62 <__stack+0x963>
     d4a:	45 31       	cpi	r20, 0x15	; 21
     d4c:	b1 91       	ld	r27, Z+
     d4e:	48 7e       	andi	r20, 0xE8	; 232
     d50:	96 7d       	andi	r25, 0xD6	; 214
     d52:	96 7a       	andi	r25, 0xA6	; 166
     d54:	75 9d       	mul	r23, r5
     d56:	81 5d       	subi	r24, 0xD1	; 209
     d58:	8a 7d       	andi	r24, 0xDA	; 218
     d5a:	90 c7       	rjmp	.+3872   	; 0x1c7c <__stack+0xb7d>
     d5c:	4b 34       	cpi	r20, 0x4B	; 75
     d5e:	b2 92       	st	-Z, r11
     d60:	44 7f       	andi	r20, 0xF4	; 244
     d62:	95 7f       	andi	r25, 0xF5	; 245
     d64:	95 7a       	andi	r25, 0xA5	; 165
     d66:	72 9d       	mul	r23, r2
     d68:	80 58       	subi	r24, 0x80	; 128
     d6a:	85 78       	andi	r24, 0x85	; 133
     d6c:	8c c4       	rjmp	.+2328   	; 0x1686 <__stack+0x587>
     d6e:	49 2f       	mov	r20, r25
     d70:	b0 92 44 80 	sts	0x8044, r11	; 0x808044 <__bss_end+0x7de3>
     d74:	98 7d       	andi	r25, 0xD8	; 216
     d76:	93 7a       	andi	r25, 0xA3	; 163
     d78:	73 a1       	ldd	r23, Z+35	; 0x23
     d7a:	83 60       	ori	r24, 0x03	; 3
     d7c:	89 7f       	andi	r24, 0xF9	; 249
     d7e:	8f c3       	rjmp	.+1822   	; 0x149e <__stack+0x39f>
     d80:	4b 2b       	or	r20, r27
     d82:	ad 93       	st	X+, r26	; undefined
     d84:	43 7b       	andi	r20, 0xB3	; 179
     d86:	9a 84       	ldd	r9, Y+10	; 0x0a
     d88:	97 7d       	andi	r25, 0xD7	; 215
     d8a:	76 a7       	std	Z+46, r23	; 0x2e
     d8c:	8b 5f       	subi	r24, 0xFB	; 251
     d8e:	8a 83       	std	Y+2, r24	; 0x02
     d90:	90 bf       	out	0x30, r25	; 48
     d92:	4b 2f       	mov	r20, r27
     d94:	ae 93       	st	-X, r26	; undefined
     d96:	43 7d       	andi	r20, 0xD3	; 211
     d98:	9b 84       	ldd	r9, Y+11	; 0x0b
     d9a:	95 77       	andi	r25, 0x75	; 117
     d9c:	76 a4       	ldd	r7, Z+46	; 0x2e
     d9e:	86 5a       	subi	r24, 0xA6	; 166
     da0:	81 81       	ldd	r24, Z+1	; 0x01
     da2:	90 c1       	rjmp	.+800    	; 0x10c4 <__LOCK_REGION_LENGTH__+0xcc4>
     da4:	4d 31       	cpi	r20, 0x1D	; 29
     da6:	ae 95 48 7d 	call	0x68fa90	; 0x68fa90 <__TEXT_REGION_LENGTH__+0x66fa90>
     daa:	9b 89       	ldd	r25, Y+19	; 0x13
     dac:	99 7f       	andi	r25, 0xF9	; 249
     dae:	79 a4       	ldd	r7, Y+41	; 0x29
     db0:	88 5f       	subi	r24, 0xF8	; 248
     db2:	85 83       	std	Z+5, r24	; 0x05
     db4:	93 c3       	rjmp	.+1830   	; 0x14dc <__stack+0x3dd>
     db6:	55 31       	cpi	r21, 0x15	; 21
     db8:	ae 97       	sbiw	r28, 0x2e	; 46
     dba:	4f 7d       	andi	r20, 0xDF	; 223
     dbc:	9b 89       	ldd	r25, Y+19	; 0x13
     dbe:	99 7e       	andi	r25, 0xE9	; 233
     dc0:	7c a2       	std	Y+36, r7	; 0x24
     dc2:	85 5e       	subi	r24, 0xE5	; 229
     dc4:	7e 80       	ldd	r7, Y+6	; 0x06
     dc6:	8a be       	out	0x3a, r8	; 58
     dc8:	4c 29       	or	r20, r12
     dca:	a8 99       	sbic	0x15, 0	; 21
     dcc:	4e 76       	andi	r20, 0x6E	; 110
     dce:	96 88       	ldd	r9, Z+22	; 0x16
     dd0:	94 75       	andi	r25, 0x54	; 84
     dd2:	6f 9c       	mul	r6, r15
     dd4:	82 59       	subi	r24, 0x92	; 146
     dd6:	7d 80       	ldd	r7, Y+5	; 0x05
     dd8:	89 bf       	out	0x39, r24	; 57
     dda:	57 2a       	or	r5, r23
     ddc:	a9 9a       	sbi	0x15, 1	; 21
     dde:	4a 71       	andi	r20, 0x1A	; 26
     de0:	8e 81       	ldd	r24, Y+6	; 0x06
     de2:	90 74       	andi	r25, 0x40	; 64
     de4:	6f 9b       	sbis	0x0d, 7	; 13
     de6:	82 55       	subi	r24, 0x52	; 82
     de8:	78 81       	ld	r23, Y
     dea:	82 bc       	out	0x22, r8	; 34
     dec:	56 1e       	adc	r5, r22
     dee:	9a 9a       	sbi	0x13, 2	; 19
     df0:	4b 6c       	ori	r20, 0xCB	; 203
     df2:	8f 82       	std	Y+7, r8	; 0x07
     df4:	8f 75       	andi	r24, 0x5F	; 95
     df6:	70 9a       	sbi	0x0e, 0	; 14
     df8:	84 59       	subi	r24, 0x94	; 148
     dfa:	78 7b       	andi	r23, 0xB8	; 184
     dfc:	7e b9       	out	0x0e, r23	; 14
     dfe:	59 1f       	adc	r21, r25
     e00:	9b a3       	std	Y+35, r25	; 0x23
     e02:	50 6e       	ori	r21, 0xE0	; 224
     e04:	93 87       	std	Z+11, r25	; 0x0b
     e06:	93 78       	andi	r25, 0x83	; 131
     e08:	78 9e       	mul	r7, r24
     e0a:	8a 61       	ori	r24, 0x1A	; 26
     e0c:	7b 82       	std	Y+3, r7	; 0x03
     e0e:	84 c2       	rjmp	.+1288   	; 0x1318 <__stack+0x219>
     e10:	60 24       	eor	r6, r0
     e12:	9b a6       	std	Y+43, r9	; 0x2b
     e14:	54 72       	andi	r21, 0x24	; 36
     e16:	9d 8c       	ldd	r9, Y+29	; 0x1d
     e18:	9c 7f       	andi	r25, 0xFC	; 252
     e1a:	7a a3       	std	Y+34, r23	; 0x22
     e1c:	8d 64       	ori	r24, 0x4D	; 77
     e1e:	81 8a       	std	Z+17, r8	; 0x11
     e20:	8b ca       	rjmp	.-2794   	; 0x338 <__trampolines_end+0x2a4>
     e22:	76 2b       	or	r23, r22
     e24:	9e af       	std	Y+62, r25	; 0x3e
     e26:	5a 73       	andi	r21, 0x3A	; 58
     e28:	9e 91       	ld	r25, -X
     e2a:	9c 8c       	ldd	r9, Y+28	; 0x1c
     e2c:	80 a4       	ldd	r8, Z+40	; 0x28
     e2e:	92 6a       	ori	r25, 0xA2	; 162
     e30:	84 87       	std	Z+12, r24	; 0x0c
     e32:	85 c9       	rjmp	.-3318   	; 0x13e <__trampolines_end+0xaa>
     e34:	7d 21       	and	r23, r13
     e36:	92 b5       	in	r25, 0x22	; 34
     e38:	5c 69       	ori	r21, 0x9C	; 156
     e3a:	9c 93       	st	X, r25
     e3c:	9b 8a       	std	Y+19, r9	; 0x13
     e3e:	76 9b       	sbis	0x0e, 6	; 14
     e40:	90 68       	ori	r25, 0x80	; 128
     e42:	79 83       	std	Y+1, r23	; 0x01
     e44:	84 c4       	rjmp	.+2312   	; 0x174e <__stack+0x64f>
     e46:	7a 1a       	sub	r7, r26
     e48:	8e b5       	in	r24, 0x2e	; 46
     e4a:	58 61       	ori	r21, 0x18	; 24
     e4c:	94 8b       	std	Z+20, r25	; 0x14
     e4e:	93 81       	ldd	r25, Z+3	; 0x03
     e50:	6c 97       	sbiw	r28, 0x1c	; 28
     e52:	91 5d       	subi	r25, 0xD1	; 209
     e54:	71 7e       	andi	r23, 0xE1	; 225
     e56:	79 bb       	out	0x19, r23	; 25
     e58:	78 15       	cp	r23, r8
     e5a:	82 af       	std	Z+58, r24	; 0x3a
     e5c:	55 5f       	subi	r21, 0xF5	; 245
     e5e:	90 84       	ldd	r9, Z+8	; 0x08
     e60:	8f 7e       	andi	r24, 0xEF	; 239
     e62:	68 96       	adiw	r28, 0x18	; 24
     e64:	8d 5c       	subi	r24, 0xCD	; 205
     e66:	70 7f       	andi	r23, 0xF0	; 240
     e68:	79 bc       	out	0x29, r7	; 41
     e6a:	7b 0e       	add	r7, r27
     e6c:	81 ae       	std	Z+57, r8	; 0x39
     e6e:	54 5a       	subi	r21, 0xA4	; 164
     e70:	8e 84       	ldd	r8, Y+14	; 0x0e
     e72:	8e 7f       	andi	r24, 0xFE	; 254
     e74:	66 93       	lac	Z, r22
     e76:	8e 62       	ori	r24, 0x2E	; 46
     e78:	74 7f       	andi	r23, 0xF4	; 244
     e7a:	79 bc       	out	0x29, r7	; 41
     e7c:	76 12       	cpse	r7, r22
     e7e:	8b b3       	in	r24, 0x1b	; 27
     e80:	55 61       	ori	r21, 0x15	; 21
     e82:	97 87       	std	Z+15, r25	; 0x0f
     e84:	93 83       	std	Z+3, r25	; 0x03
     e86:	6a 9c       	mul	r6, r10
     e88:	91 62       	ori	r25, 0x21	; 33
     e8a:	79 8c       	ldd	r7, Y+25	; 0x19
     e8c:	83 c7       	rjmp	.+3846   	; 0x1d94 <__stack+0xc95>
     e8e:	7c 1d       	adc	r23, r12
     e90:	91 b3       	in	r25, 0x11	; 17
     e92:	58 64       	ori	r21, 0x48	; 72
     e94:	9b 86       	std	Y+11, r9	; 0x0b
     e96:	95 83       	std	Z+5, r25	; 0x05
     e98:	6c 9e       	mul	r6, r28
     e9a:	92 5f       	subi	r25, 0xF2	; 242
     e9c:	7e 87       	std	Y+14, r23	; 0x0e
     e9e:	7e c5       	rjmp	.+2812   	; 0x199c <__stack+0x89d>
     ea0:	83 1c       	adc	r8, r3
     ea2:	8c b7       	in	r24, 0x3c	; 60
     ea4:	57 69       	ori	r21, 0x97	; 151
     ea6:	99 86       	std	Y+9, r9	; 0x09
     ea8:	92 89       	ldd	r25, Z+18	; 0x12
     eaa:	6d 9c       	mul	r6, r13
     eac:	92 60       	ori	r25, 0x02	; 2
     eae:	79 84       	ldd	r7, Y+9	; 0x09
     eb0:	79 bf       	out	0x39, r23	; 57
     eb2:	7f 19       	sub	r23, r15
     eb4:	89 b2       	in	r8, 0x19	; 25
     eb6:	5a 62       	ori	r21, 0x2A	; 42
     eb8:	99 87       	std	Y+9, r25	; 0x09
     eba:	92 8d       	ldd	r25, Z+26	; 0x1a
     ebc:	6e 97       	sbiw	r28, 0x1e	; 30
     ebe:	94 60       	ori	r25, 0x04	; 4
     ec0:	7a 83       	std	Y+2, r23	; 0x02
     ec2:	78 bf       	out	0x38, r23	; 56
     ec4:	80 1e       	adc	r8, r16
     ec6:	88 b4       	in	r8, 0x28	; 40
     ec8:	5c 68       	ori	r21, 0x8C	; 140
     eca:	9a 84       	ldd	r9, Y+10	; 0x0a
     ecc:	94 89       	ldd	r25, Z+20	; 0x14
     ece:	70 96       	adiw	r30, 0x10	; 16
     ed0:	93 66       	ori	r25, 0x63	; 99
     ed2:	7c 8a       	std	Y+20, r7	; 0x14
     ed4:	7b c2       	rjmp	.+1270   	; 0x13cc <__stack+0x2cd>
     ed6:	85 20       	and	r8, r5
     ed8:	8a b2       	in	r8, 0x1a	; 26
     eda:	5a 68       	ori	r21, 0x8A	; 138
     edc:	97 85       	ldd	r25, Z+15	; 0x0f
     ede:	94 8a       	std	Z+20, r9	; 0x14
     ee0:	6e 9a       	sbi	0x0d, 6	; 13
     ee2:	94 66       	ori	r25, 0x64	; 100
     ee4:	79 8d       	ldd	r23, Y+25	; 0x19
     ee6:	7c be       	out	0x3c, r7	; 60
     ee8:	81 19       	sub	r24, r1
     eea:	91 b1       	in	r25, 0x01	; 1
     eec:	59 68       	ori	r21, 0x89	; 137
     eee:	9e 88       	ldd	r9, Y+22	; 0x16
     ef0:	95 8d       	ldd	r25, Z+29	; 0x1d
     ef2:	6e 98       	cbi	0x0d, 6	; 13
     ef4:	8f 60       	ori	r24, 0x0F	; 15
     ef6:	71 85       	ldd	r23, Z+9	; 0x09
     ef8:	79 b9       	out	0x09, r23	; 9
     efa:	7e 1b       	sub	r23, r30
     efc:	8b b5       	in	r24, 0x2b	; 43
     efe:	53 63       	ori	r21, 0x33	; 51
     f00:	9d 85       	ldd	r25, Y+13	; 0x0d
     f02:	92 8a       	std	Z+18, r9	; 0x12
     f04:	6f 95 92 5f 	call	0x5abf24	; 0x5abf24 <__TEXT_REGION_LENGTH__+0x58bf24>
     f08:	73 86       	std	Z+11, r7	; 0x0b
     f0a:	77 b7       	in	r23, 0x37	; 55
     f0c:	86 18       	sub	r8, r6
     f0e:	83 b4       	in	r8, 0x23	; 35
     f10:	53 61       	ori	r21, 0x13	; 19
     f12:	99 82       	std	Y+1, r9	; 0x01
     f14:	89 8b       	std	Y+17, r24	; 0x11
     f16:	6c 95 93 64 	jmp	0x58c926	; 0x58c926 <__TEXT_REGION_LENGTH__+0x56c926>
     f1a:	77 88       	ldd	r7, Z+23	; 0x17
     f1c:	71 b3       	in	r23, 0x11	; 17
     f1e:	8f 18       	sub	r8, r15
     f20:	79 b4       	in	r7, 0x29	; 41
     f22:	5f 60       	ori	r21, 0x0F	; 15
     f24:	98 83       	st	Y, r25
     f26:	8c 8d       	ldd	r24, Y+28	; 0x1c
     f28:	6a 8e       	std	Y+26, r6	; 0x1a
     f2a:	8d 5e       	subi	r24, 0xED	; 237
     f2c:	72 7f       	andi	r23, 0xF2	; 242
     f2e:	6f ad       	ldd	r22, Y+63	; 0x3f
     f30:	92 1b       	sub	r25, r18
     f32:	6d b7       	in	r22, 0x3d	; 61
     f34:	60 5f       	subi	r22, 0xF0	; 240
     f36:	92 85       	ldd	r25, Z+10	; 0x0a
     f38:	8d 8a       	std	Y+21, r8	; 0x15
     f3a:	69 8e       	std	Y+25, r6	; 0x19
     f3c:	8d 60       	ori	r24, 0x0D	; 13
     f3e:	6f 7e       	andi	r22, 0xEF	; 239
     f40:	70 b3       	in	r23, 0x10	; 16
     f42:	9c 1b       	sub	r25, r28
     f44:	6e b9       	out	0x0e, r22	; 14
     f46:	65 59       	subi	r22, 0x95	; 149
     f48:	93 87       	std	Z+11, r25	; 0x0b
     f4a:	93 90       	.word	0x9093	; ????
     f4c:	6e 95 97 65 	call	0x58cb2e	; 0x58cb2e <__TEXT_REGION_LENGTH__+0x56cb2e>
     f50:	6f 87       	std	Y+15, r22	; 0x0f
     f52:	6e b9       	out	0x0e, r22	; 14
     f54:	a7 21       	and	r26, r7
     f56:	6e c7       	rjmp	.+3804   	; 0x1e34 <__stack+0xd35>
     f58:	6f 5a       	subi	r22, 0xAF	; 175
     f5a:	96 8b       	std	Z+22, r25	; 0x16
     f5c:	8f 94 6f 93 	call	0x2326de	; 0x2326de <__TEXT_REGION_LENGTH__+0x2126de>
     f60:	9e 6d       	ori	r25, 0xDE	; 222
     f62:	76 92       	lac	Z, r7
     f64:	75 af       	std	Z+61, r23	; 0x3d
     f66:	b2 1e       	adc	r11, r18
     f68:	68 c4       	rjmp	.+2256   	; 0x183a <__stack+0x73b>
     f6a:	71 59       	subi	r23, 0x91	; 145
     f6c:	97 8d       	ldd	r25, Z+31	; 0x1f
     f6e:	89 96       	adiw	r24, 0x29	; 41
     f70:	70 8f       	std	Z+24, r23	; 0x18
     f72:	9a 6e       	ori	r25, 0xEA	; 234
     f74:	6d 8f       	std	Y+29, r22	; 0x1d
     f76:	74 a8       	ldd	r7, Z+52	; 0x34
     f78:	b1 25       	eor	r27, r1
     f7a:	63 c3       	rjmp	.+1734   	; 0x1642 <__stack+0x543>
     f7c:	71 58       	subi	r23, 0x81	; 129
     f7e:	96 8c       	ldd	r9, Z+30	; 0x1e
     f80:	87 94       	ror	r8
     f82:	72 8e       	std	Z+26, r7	; 0x1a
     f84:	9a 6f       	ori	r25, 0xFA	; 250
     f86:	6e 8f       	std	Y+30, r22	; 0x1e
     f88:	73 a3       	std	Z+35, r23	; 0x23
     f8a:	af 24       	eor	r10, r15
     f8c:	57 be       	out	0x37, r5	; 55
     f8e:	76 53       	subi	r23, 0x36	; 54
     f90:	95 8a       	std	Z+21, r9	; 0x15
     f92:	88 96       	adiw	r24, 0x28	; 40
     f94:	6c 8a       	std	Y+20, r6	; 0x14
     f96:	9a 70       	andi	r25, 0x0A	; 10
     f98:	6c 8b       	std	Y+20, r22	; 0x14
     f9a:	77 a1       	ldd	r23, Z+39	; 0x27
     f9c:	b6 27       	eor	r27, r22
     f9e:	4e bf       	out	0x3e, r20	; 62
     fa0:	75 4f       	sbci	r23, 0xF5	; 245
     fa2:	8c 8b       	std	Y+20, r24	; 0x14
     fa4:	87 93       	lat	Z, r24
     fa6:	6b 84       	ldd	r6, Y+11	; 0x0b
     fa8:	9c 6d       	ori	r25, 0xDC	; 220
     faa:	61 88       	ldd	r6, Z+17	; 0x11
     fac:	72 9f       	mul	r23, r18
     fae:	b2 29       	or	r27, r2
     fb0:	4c ba       	out	0x1c, r4	; 28
     fb2:	7c 4c       	sbci	r23, 0xCC	; 204
     fb4:	90 8f       	std	Z+24, r25	; 0x18
     fb6:	87 97       	sbiw	r24, 0x27	; 39
     fb8:	6f 83       	std	Y+7, r22	; 0x07
     fba:	9c 68       	ori	r25, 0x8C	; 140
     fbc:	61 8a       	std	Z+17, r6	; 0x11
     fbe:	73 9e       	mul	r7, r19
     fc0:	b2 2e       	mov	r11, r18
     fc2:	43 b7       	in	r20, 0x33	; 51
     fc4:	78 43       	sbci	r23, 0x38	; 56
     fc6:	88 8a       	std	Y+16, r8	; 0x10
     fc8:	80 95       	com	r24
     fca:	72 84       	ldd	r7, Z+10	; 0x0a
     fcc:	9f 6f       	ori	r25, 0xFF	; 255
     fce:	63 8c       	ldd	r6, Z+27	; 0x1b
     fd0:	71 97       	sbiw	r30, 0x11	; 17
     fd2:	ba 2e       	mov	r11, r26
     fd4:	43 bc       	out	0x23, r4	; 35
     fd6:	85 4a       	sbci	r24, 0xA5	; 165
     fd8:	86 8b       	std	Z+22, r24	; 0x16
     fda:	7f 96       	adiw	r30, 0x1f	; 31
     fdc:	73 7f       	andi	r23, 0xF3	; 243
     fde:	a0 72       	andi	r26, 0x20	; 32
     fe0:	61 91       	ld	r22, Z+
     fe2:	73 9d       	mul	r23, r3
     fe4:	c3 36       	cpi	r28, 0x63	; 99
     fe6:	3c b8       	out	0x0c, r3	; 12
     fe8:	8d 4c       	sbci	r24, 0xCD	; 205
     fea:	87 90       	elpm	r8, Z+
     fec:	87 9c       	mul	r8, r7
     fee:	79 82       	std	Y+1, r7	; 0x01
     ff0:	a6 77       	andi	r26, 0x76	; 118
     ff2:	62 8e       	std	Z+26, r6	; 0x1a
     ff4:	76 9d       	mul	r23, r6
     ff6:	c6 3d       	cpi	r28, 0xD6	; 214
     ff8:	3a bf       	out	0x3a, r19	; 58
     ffa:	92 4e       	sbci	r25, 0xE2	; 226
     ffc:	89 94       	.word	0x9489	; ????
     ffe:	88 9a       	sbi	0x11, 0	; 17
    1000:	78 83       	st	Y, r23
    1002:	a7 7a       	andi	r26, 0xA7	; 167
    1004:	62 90       	ld	r6, -Z
    1006:	7c 96       	adiw	r30, 0x1c	; 28
    1008:	c7 3d       	cpi	r28, 0xD7	; 215
    100a:	36 bc       	out	0x26, r3	; 38
    100c:	90 49       	sbci	r25, 0x90	; 144
    100e:	85 98       	cbi	0x10, 5	; 16
    1010:	84 98       	cbi	0x10, 4	; 16
    1012:	78 82       	st	Y, r7
    1014:	a6 78       	andi	r26, 0x86	; 134
    1016:	5c 8e       	std	Y+28, r5	; 0x1c
    1018:	7f 90       	pop	r7
    101a:	c6 42       	sbci	r28, 0x26	; 38
    101c:	34 b8       	out	0x04, r3	; 4
    101e:	92 45       	sbci	r25, 0x52	; 82
    1020:	82 97       	sbiw	r24, 0x22	; 34
    1022:	7f 90       	pop	r7
    1024:	77 7c       	andi	r23, 0xC7	; 199
    1026:	9c 78       	andi	r25, 0x8C	; 140
    1028:	57 8c       	ldd	r5, Z+31	; 0x1f
    102a:	7a 8f       	std	Y+26, r23	; 0x1a
    102c:	c0 42       	sbci	r28, 0x20	; 32
    102e:	2c ac       	ldd	r2, Y+60	; 0x3c
    1030:	93 43       	sbci	r25, 0x33	; 51
    1032:	7d 92       	st	X+, r7
    1034:	7c 92       	st	X, r7
    1036:	7c 7c       	andi	r23, 0xCC	; 204
    1038:	a0 78       	andi	r26, 0x80	; 128
    103a:	5f 8b       	std	Y+23, r21	; 0x17
    103c:	7c 8c       	ldd	r7, Y+28	; 0x1c
    103e:	cb 4d       	sbci	r28, 0xDB	; 219
    1040:	28 b5       	in	r18, 0x28	; 40
    1042:	99 4d       	sbci	r25, 0xD9	; 217
    1044:	7f 96       	adiw	r30, 0x1f	; 31
    1046:	7d 94 7e 79 	jmp	0x1ef2fc	; 0x1ef2fc <__TEXT_REGION_LENGTH__+0x1cf2fc>
    104a:	9d 7c       	andi	r25, 0xCD	; 205
    104c:	5b 90       	.word	0x905b	; ????
    104e:	79 88       	ldd	r7, Y+17	; 0x11
    1050:	cf 52       	subi	r28, 0x2F	; 47
    1052:	25 a8       	ldd	r2, Z+53	; 0x35
    1054:	a5 47       	sbci	r26, 0x75	; 117
    1056:	7a 9a       	sbi	0x0f, 2	; 15
    1058:	84 9e       	mul	r8, r20
    105a:	80 77       	andi	r24, 0x70	; 112
    105c:	a1 80       	ldd	r10, Z+1	; 0x01
    105e:	57 86       	std	Z+15, r5	; 0x0f
    1060:	7b 80       	ldd	r7, Y+3	; 0x03
    1062:	c7 56       	subi	r28, 0x67	; 103
    1064:	1a a7       	std	Y+42, r17	; 0x2a
    1066:	a9 47       	sbci	r26, 0x79	; 121
    1068:	70 98       	cbi	0x0e, 0	; 14
    106a:	7f 93       	push	r23
    106c:	7f 73       	andi	r23, 0x3F	; 63
    106e:	9f 89       	ldd	r25, Y+23	; 0x17
    1070:	5c 85       	ldd	r21, Y+12	; 0x0c
    1072:	81 84       	ldd	r8, Z+9	; 0x09
    1074:	c8 5f       	subi	r28, 0xF8	; 248
    1076:	20 a3       	std	Z+32, r18	; 0x20
    1078:	ad 4e       	sbci	r26, 0xED	; 237
    107a:	72 9d       	mul	r23, r2
    107c:	86 97       	sbiw	r24, 0x26	; 38
    107e:	81 74       	andi	r24, 0x41	; 65
    1080:	9e 88       	ldd	r9, Y+22	; 0x16
    1082:	58 86       	std	Y+8, r5	; 0x08
    1084:	7e 7d       	andi	r23, 0xDE	; 222
    1086:	ca 66       	ori	r28, 0x6A	; 106
    1088:	1f 9a       	sbi	0x03, 7	; 3
    108a:	b2 4f       	sbci	r27, 0xF2	; 242
    108c:	69 9b       	sbis	0x0d, 1	; 13
    108e:	83 93       	.word	0x9383	; ????
    1090:	85 74       	andi	r24, 0x45	; 69
    1092:	a2 8c       	ldd	r10, Z+26	; 0x1a
    1094:	5e 82       	std	Y+6, r5	; 0x06
    1096:	85 7b       	andi	r24, 0xB5	; 181
    1098:	c3 71       	andi	r28, 0x13	; 19
    109a:	14 8f       	std	Z+28, r17	; 0x1c
    109c:	af 57       	subi	r26, 0x7F	; 127
    109e:	62 96       	adiw	r28, 0x12	; 18
    10a0:	86 90       	elpm	r8, Z
    10a2:	84 6f       	ori	r24, 0xF4	; 244
    10a4:	97 88       	ldd	r9, Z+23	; 0x17
    10a6:	56 78       	andi	r21, 0x86	; 134
    10a8:	7e 75       	andi	r23, 0x5E	; 94
    10aa:	c2 76       	andi	r28, 0x62	; 98
    10ac:	13 85       	ldd	r17, Z+11	; 0x0b
    10ae:	bc 5b       	subi	r27, 0xBC	; 188
    10b0:	60 96       	adiw	r28, 0x10	; 16
    10b2:	83 91       	.word	0x9183	; ????
    10b4:	85 70       	andi	r24, 0x05	; 5
    10b6:	99 90       	ld	r9, Y+
    10b8:	5f 75       	andi	r21, 0x5F	; 95
    10ba:	89 7a       	andi	r24, 0xA9	; 169
    10bc:	c4 84       	ldd	r12, Z+12	; 0x0c
    10be:	11 86       	std	Z+9, r1	; 0x09
    10c0:	c2 62       	ori	r28, 0x22	; 34
    10c2:	5d 9d       	mul	r21, r13
    10c4:	8c 8f       	std	Y+28, r24	; 0x1c
    10c6:	8a 6f       	ori	r24, 0xFA	; 250
    10c8:	97 91       	elpm	r25, Z+
    10ca:	5f 73       	andi	r21, 0x3F	; 63
    10cc:	89 81       	ldd	r24, Y+1	; 0x01
    10ce:	c0 92 15 79 	sts	0x7915, r12	; 0x807915 <__bss_end+0x76b4>
    10d2:	c7 64       	ori	r28, 0x47	; 71
    10d4:	5b 96       	adiw	r26, 0x1b	; 27
    10d6:	90 94       	com	r9
    10d8:	8c 6e       	ori	r24, 0xEC	; 236
    10da:	98 9e       	mul	r9, r24
    10dc:	64 6f       	ori	r22, 0xF4	; 244
    10de:	95 7e       	andi	r25, 0xE5	; 229
    10e0:	ba a8       	ldd	r11, Y+50	; 0x32
    10e2:	1d 6a       	ori	r17, 0xAD	; 173
    10e4:	c6 78       	andi	r28, 0x86	; 134
    10e6:	51 8c       	ldd	r5, Z+25	; 0x19
    10e8:	8e 8f       	std	Y+30, r24	; 0x1e
    10ea:	8a 6a       	ori	r24, 0xAA	; 170
    10ec:	91 9b       	sbis	0x12, 1	; 18
    10ee:	66 69       	ori	r22, 0x96	; 150
    10f0:	8b 77       	andi	r24, 0x7B	; 123
    10f2:	b0 b1       	in	r27, 0x00	; 0
    10f4:	1e 4c       	sbci	r17, 0xCE	; 206
    10f6:	c7 7b       	andi	r28, 0xB7	; 183
    10f8:	48 85       	ldd	r20, Y+8	; 0x08
    10fa:	8f 8e       	std	Y+31, r8	; 0x1f
    10fc:	8f 71       	andi	r24, 0x1F	; 31
    10fe:	8c 9d       	mul	r24, r12
    1100:	72 64       	ori	r23, 0x42	; 66
    1102:	87 79       	andi	r24, 0x97	; 151
    1104:	a9 be       	out	0x39, r10	; 57
    1106:	21 3b       	cpi	r18, 0xB1	; 177
    1108:	c1 8a       	std	Z+17, r12	; 0x11
    110a:	41 7c       	andi	r20, 0xC1	; 193
    110c:	93 87       	std	Z+11, r25	; 0x0b
    110e:	8e 6e       	ori	r24, 0xEE	; 238
    1110:	81 9c       	mul	r8, r1
    1112:	73 5c       	subi	r23, 0xC3	; 195
    1114:	7f 7a       	andi	r23, 0xAF	; 175
    1116:	9c bb       	out	0x1c, r25	; 28
    1118:	34 2b       	or	r19, r20
    111a:	ba 98       	cbi	0x17, 2	; 23
    111c:	40 74       	andi	r20, 0x40	; 64
    111e:	95 8b       	std	Z+21, r25	; 0x15
    1120:	8e 70       	andi	r24, 0x0E	; 14
    1122:	80 9f       	mul	r24, r16
    1124:	75 5c       	subi	r23, 0xC5	; 197
    1126:	81 7d       	andi	r24, 0xD1	; 209
    1128:	93 c3       	rjmp	.+1830   	; 0x1850 <__stack+0x751>
    112a:	42 20       	and	r4, r2
    112c:	b7 a0       	ldd	r11, Z+39	; 0x27
    112e:	40 6c       	ori	r20, 0xC0	; 192
    1130:	97 89       	ldd	r25, Z+23	; 0x17
    1132:	94 73       	andi	r25, 0x34	; 52
    1134:	7b a1       	ldd	r23, Y+35	; 0x23
    1136:	7e 64       	ori	r23, 0x4E	; 78
    1138:	80 83       	st	Z, r24
    113a:	92 c8       	rjmp	.-3804   	; 0x260 <__trampolines_end+0x1cc>
    113c:	50 20       	and	r5, r0
    113e:	ad a6       	std	Y+45, r10	; 0x2d
    1140:	45 6a       	ori	r20, 0xA5	; 165
    1142:	94 87       	std	Z+12, r25	; 0x0c
    1144:	95 76       	andi	r25, 0x65	; 101
    1146:	79 9f       	mul	r23, r25
    1148:	80 61       	ori	r24, 0x10	; 16
    114a:	7e 79       	andi	r23, 0x9E	; 158
    114c:	86 c6       	rjmp	.+3340   	; 0x1e5a <__stack+0xd5b>
    114e:	60 16       	cp	r6, r16
    1150:	9d b1       	in	r25, 0x0d	; 13
    1152:	51 6c       	ori	r21, 0xC1	; 193
    1154:	99 8a       	std	Y+17, r9	; 0x11
    1156:	95 80       	ldd	r9, Z+5	; 0x05
    1158:	78 9a       	sbi	0x0f, 0	; 15
    115a:	7f 67       	ori	r23, 0x7F	; 127
    115c:	7f 7e       	andi	r23, 0xEF	; 239
    115e:	86 cd       	rjmp	.-1268   	; 0xc6c <__LOCK_REGION_LENGTH__+0x86c>
    1160:	75 11       	cpse	r23, r5
    1162:	94 bc       	out	0x24, r9	; 36
    1164:	5c 66       	ori	r21, 0x6C	; 108
    1166:	96 8e       	std	Z+30, r9	; 0x1e
    1168:	9d 89       	ldd	r25, Y+21	; 0x15
    116a:	79 95       	.word	0x9579	; ????
    116c:	87 69       	ori	r24, 0x97	; 151
    116e:	7d 7d       	andi	r23, 0xDD	; 221
    1170:	7a d1       	rcall	.+756    	; 0x1466 <__stack+0x367>
    1172:	77 0c       	add	r7, r7
    1174:	86 be       	out	0x36, r8	; 54
    1176:	5a 55       	subi	r21, 0x5A	; 90
    1178:	92 83       	std	Z+2, r25	; 0x02
    117a:	97 80       	ldd	r9, Z+7	; 0x07
    117c:	6d 92       	st	X+, r6
    117e:	89 64       	ori	r24, 0x49	; 73
    1180:	74 7f       	andi	r23, 0xF4	; 244
    1182:	74 c9       	rjmp	.-3352   	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
    1184:	85 02       	muls	r24, r21
    1186:	7c c3       	rjmp	.+1784   	; 0x1880 <__stack+0x781>
    1188:	58 4e       	sbci	r21, 0xE8	; 232
    118a:	92 8d       	ldd	r25, Z+26	; 0x1a
    118c:	93 84       	ldd	r9, Z+11	; 0x0b
    118e:	6d 94 8c 65 	jmp	0x1acb18	; 0x1acb18 <__TEXT_REGION_LENGTH__+0x18cb18>
    1192:	71 80       	ldd	r7, Z+1	; 0x01
    1194:	76 c2       	rjmp	.+1260   	; 0x1682 <__stack+0x583>
    1196:	95 0b       	sbc	r25, r21
    1198:	73 cb       	rjmp	.-2330   	; 0x880 <__LOCK_REGION_LENGTH__+0x480>
    119a:	68 50       	subi	r22, 0x08	; 8
    119c:	93 8c       	ldd	r9, Z+27	; 0x1b
    119e:	94 88       	ldd	r9, Z+20	; 0x14
    11a0:	76 95       	lsr	r23
    11a2:	89 6c       	ori	r24, 0xC9	; 201
    11a4:	77 89       	ldd	r23, Z+23	; 0x17
    11a6:	7f c0       	rjmp	.+254    	; 0x12a6 <__stack+0x1a7>
    11a8:	a4 19       	sub	r26, r4
    11aa:	6a cd       	rjmp	.-1324   	; 0xc80 <__LOCK_REGION_LENGTH__+0x880>
    11ac:	72 53       	subi	r23, 0x32	; 50
    11ae:	92 98       	cbi	0x12, 2	; 18
    11b0:	97 8d       	ldd	r25, Z+31	; 0x1f
    11b2:	79 99       	sbic	0x0f, 1	; 15
    11b4:	8f 6b       	ori	r24, 0xBF	; 191
    11b6:	78 89       	ldd	r23, Y+16	; 0x10
    11b8:	7f b9       	out	0x0f, r23	; 15
    11ba:	b3 29       	or	r27, r3
    11bc:	59 c6       	rjmp	.+3250   	; 0x1e70 <__stack+0xd71>
    11be:	7f 54       	subi	r23, 0x4F	; 79
    11c0:	8b 97       	sbiw	r24, 0x2b	; 43
    11c2:	95 93       	las	Z, r25
    11c4:	7e 93       	st	-X, r23
    11c6:	95 72       	andi	r25, 0x25	; 37
    11c8:	73 85       	ldd	r23, Z+11	; 0x0b
    11ca:	77 a6       	std	Z+47, r7	; 0x2f
    11cc:	bd 37       	cpi	r27, 0x7D	; 125
    11ce:	3c b8       	out	0x0c, r3	; 12
    11d0:	8f 53       	subi	r24, 0x3F	; 63
    11d2:	7c 8c       	ldd	r7, Y+28	; 0x1c
    11d4:	8a 92       	st	-Y, r8
    11d6:	78 82       	st	Y, r7
    11d8:	8b 72       	andi	r24, 0x2B	; 43
    11da:	6a 80       	ldd	r6, Y+2	; 0x02
    11dc:	6f 8e       	std	Y+31, r6	; 0x1f
    11de:	c6 4a       	sbci	r28, 0xA6	; 166
    11e0:	23 a3       	std	Z+35, r18	; 0x23
    11e2:	9d 4f       	sbci	r25, 0xFD	; 253
    11e4:	6a 85       	ldd	r22, Y+10	; 0x0a
    11e6:	8a 93       	st	-Y, r24
    11e8:	75 7b       	andi	r23, 0xB5	; 181
    11ea:	8f 79       	andi	r24, 0x9F	; 159
    11ec:	66 78       	andi	r22, 0x86	; 134
    11ee:	70 7f       	andi	r23, 0xF0	; 240
    11f0:	ca 67       	ori	r28, 0x7A	; 122
    11f2:	0d 93       	st	X+, r16
    11f4:	b1 55       	subi	r27, 0x51	; 81
    11f6:	5d 88       	ldd	r5, Y+21	; 0x15
    11f8:	8d 92       	st	X+, r8
    11fa:	74 75       	andi	r23, 0x54	; 84
    11fc:	8f 7d       	andi	r24, 0xDF	; 223
    11fe:	64 72       	andi	r22, 0x24	; 36
    1200:	75 72       	andi	r23, 0x25	; 37
    1202:	c7 83       	std	Z+7, r28	; 0x07
    1204:	08 76       	andi	r16, 0x68	; 104
    1206:	bd 60       	ori	r27, 0x0D	; 13
    1208:	50 81       	ld	r21, Z
    120a:	89 90       	ld	r8, Y+
    120c:	7d 76       	andi	r23, 0x6D	; 109
    120e:	92 88       	ldd	r9, Z+18	; 0x12
    1210:	73 79       	andi	r23, 0x93	; 147
    1212:	7e 7a       	andi	r23, 0xAE	; 174
    1214:	c4 a9       	ldd	r28, Z+52	; 0x34
    1216:	10 67       	ori	r17, 0x70	; 112
    1218:	cc 77       	andi	r28, 0x7C	; 124
    121a:	51 81       	ldd	r21, Z+1	; 0x01
    121c:	95 97       	sbiw	r26, 0x25	; 37
    121e:	84 75       	andi	r24, 0x54	; 84
    1220:	8f 8a       	std	Y+23, r8	; 0x17
    1222:	74 76       	andi	r23, 0x64	; 100
    1224:	80 75       	andi	r24, 0x50	; 80
    1226:	bd b5       	in	r27, 0x2d	; 45
    1228:	1a 4f       	sbci	r17, 0xFA	; 250
    122a:	d1 89       	ldd	r29, Z+17	; 0x11
    122c:	50 7f       	andi	r21, 0xF0	; 240
    122e:	98 9b       	sbis	0x13, 0	; 19
    1230:	8d 77       	andi	r24, 0x7D	; 125
    1232:	8e 8f       	std	Y+30, r24	; 0x1e
    1234:	76 78       	andi	r23, 0x86	; 134
    1236:	7b 71       	andi	r23, 0x1B	; 27
    1238:	ac c6       	rjmp	.+3416   	; 0x1f92 <__stack+0xe93>
    123a:	27 3e       	cpi	r18, 0xE7	; 231
    123c:	cd 91       	ld	r28, X+
    123e:	4c 79       	andi	r20, 0x9C	; 156
    1240:	94 91       	lpm	r25, Z
    1242:	8f 78       	andi	r24, 0x8F	; 143
    1244:	87 90       	elpm	r8, Z+
    1246:	7c 75       	andi	r23, 0x5C	; 92
    1248:	7d 68       	ori	r23, 0x8D	; 141
    124a:	a2 d0       	rcall	.+324    	; 0x1390 <__stack+0x291>
    124c:	34 24       	eor	r3, r4
    124e:	ba 9e       	mul	r11, r26
    1250:	4b 6f       	ori	r20, 0xFB	; 251
    1252:	92 8d       	ldd	r25, Z+26	; 0x1a
    1254:	8e 7a       	andi	r24, 0xAE	; 174
    1256:	80 89       	ldd	r24, Z+16	; 0x10
    1258:	7a 74       	andi	r23, 0x4A	; 74
    125a:	7a 68       	ori	r23, 0x8A	; 138
    125c:	8c cf       	rjmp	.-232    	; 0x1176 <__stack+0x77>
    125e:	4a 17       	cp	r20, r26
    1260:	a5 a6       	std	Z+45, r10	; 0x2d
    1262:	51 67       	ori	r21, 0x71	; 113
    1264:	8f 91       	pop	r24
    1266:	90 7b       	andi	r25, 0xB0	; 176
    1268:	7e 89       	ldd	r23, Y+22	; 0x16
    126a:	7a 75       	andi	r23, 0x5A	; 90
    126c:	7a 6d       	ori	r23, 0xDA	; 218
    126e:	8b cf       	rjmp	.-234    	; 0x1186 <__stack+0x87>
    1270:	65 13       	cpse	r22, r21
    1272:	9a b3       	in	r25, 0x1a	; 26
    1274:	5d 61       	ori	r21, 0x1D	; 29
    1276:	8b 94       	des	8
    1278:	97 80       	ldd	r9, Z+7	; 0x07
    127a:	79 8d       	ldd	r23, Y+25	; 0x19
    127c:	7d 75       	andi	r23, 0x5D	; 93
    127e:	7f 6b       	ori	r23, 0xBF	; 191
    1280:	83 d4       	rcall	.+2310   	; 0x1b88 <__stack+0xa89>
    1282:	74 12       	cpse	r7, r20
    1284:	8a bb       	out	0x1a, r24	; 26
    1286:	67 5b       	subi	r22, 0xB7	; 183
    1288:	8f 95 97 83 	call	0x63072e	; 0x63072e <__TEXT_REGION_LENGTH__+0x61072e>
    128c:	7b 92       	.word	0x927b	; ????
    128e:	88 76       	andi	r24, 0x68	; 104
    1290:	81 74       	andi	r24, 0x41	; 65
    1292:	7b d4       	rcall	.+2294   	; 0x1b8a <__stack+0xa8b>
    1294:	83 17       	cp	r24, r19
    1296:	85 c6       	rjmp	.+3338   	; 0x1fa2 <__stack+0xea3>
    1298:	6b 5c       	subi	r22, 0xCB	; 203
    129a:	93 97       	sbiw	r26, 0x23	; 35
    129c:	96 88       	ldd	r9, Z+22	; 0x16
    129e:	7e 91       	ld	r23, -X
    12a0:	83 6f       	ori	r24, 0xF3	; 243
    12a2:	7e 75       	andi	r23, 0x5E	; 94
    12a4:	7b c8       	rjmp	.-3850   	; 0x39c <__trampolines_end+0x308>
    12a6:	8f 12       	cpse	r8, r31
    12a8:	7b c1       	rjmp	.+758    	; 0x15a0 <__stack+0x4a1>
    12aa:	6c 56       	subi	r22, 0x6C	; 108
    12ac:	8c 91       	ld	r24, X
    12ae:	8c 83       	std	Y+4, r24	; 0x04
    12b0:	76 8c       	ldd	r7, Z+30	; 0x1e
    12b2:	80 6c       	ori	r24, 0xC0	; 192
    12b4:	84 75       	andi	r24, 0x54	; 84
    12b6:	72 ca       	rjmp	.-2844   	; 0x79c <__LOCK_REGION_LENGTH__+0x39c>
    12b8:	8f 1b       	sub	r24, r31
    12ba:	6b be       	out	0x3b, r6	; 59
    12bc:	6b 53       	subi	r22, 0x3B	; 59
    12be:	89 8d       	ldd	r24, Y+25	; 0x19
    12c0:	91 85       	ldd	r25, Z+9	; 0x09
    12c2:	79 8e       	std	Y+25, r7	; 0x19
    12c4:	83 68       	ori	r24, 0x83	; 131
    12c6:	80 7d       	andi	r24, 0xD0	; 208
    12c8:	70 c1       	rjmp	.+736    	; 0x15aa <__stack+0x4ab>
    12ca:	9c 16       	cp	r9, r28
    12cc:	69 bd       	out	0x29, r22	; 41
    12ce:	73 52       	subi	r23, 0x23	; 35
    12d0:	84 91       	lpm	r24, Z
    12d2:	8f 8c       	ldd	r8, Y+31	; 0x1f
    12d4:	78 90       	.word	0x9078	; ????
    12d6:	8b 6b       	ori	r24, 0xBB	; 187
    12d8:	7c 82       	std	Y+4, r7	; 0x04
    12da:	73 b7       	in	r23, 0x33	; 51
    12dc:	a6 1f       	adc	r26, r22
    12de:	5f c4       	rjmp	.+2238   	; 0x1b9e <__stack+0xa9f>
    12e0:	7a 53       	subi	r23, 0x3A	; 58
    12e2:	89 95       	.word	0x9589	; ????
    12e4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    12e6:	7b 8d       	ldd	r23, Y+27	; 0x1b
    12e8:	8e 6c       	ori	r24, 0xCE	; 206
    12ea:	78 84       	ldd	r7, Y+8	; 0x08
    12ec:	6a b3       	in	r22, 0x1a	; 26
    12ee:	af 22       	and	r10, r31
    12f0:	55 c3       	rjmp	.+1706   	; 0x199c <__stack+0x89d>
    12f2:	83 4a       	sbci	r24, 0xA3	; 163
    12f4:	86 92       	lac	Z, r8
    12f6:	8a 8c       	ldd	r8, Y+26	; 0x1a
    12f8:	78 8b       	std	Y+16, r23	; 0x10
    12fa:	93 6f       	ori	r25, 0xF3	; 243
    12fc:	76 8c       	ldd	r7, Z+30	; 0x1e
    12fe:	65 a8       	ldd	r6, Z+53	; 0x35
    1300:	bf 20       	and	r11, r15
    1302:	40 c7       	rjmp	.+3712   	; 0x2184 <__stack+0x1085>
    1304:	88 49       	sbci	r24, 0x98	; 152
    1306:	80 92 87 89 	sts	0x8987, r8	; 0x808987 <__bss_end+0x8726>
    130a:	74 85       	ldd	r23, Z+12	; 0x0c
    130c:	94 67       	ori	r25, 0x74	; 116
    130e:	65 8c       	ldd	r6, Z+29	; 0x1d
    1310:	68 9b       	sbis	0x0d, 0	; 13
    1312:	c5 2a       	or	r12, r21
    1314:	2f bc       	out	0x2f, r2	; 47
    1316:	91 3e       	cpi	r25, 0xE1	; 225
    1318:	77 95       	ror	r23
    131a:	89 8b       	std	Y+17, r24	; 0x11
    131c:	74 85       	ldd	r23, Z+12	; 0x0c
    131e:	99 6d       	ori	r25, 0xD9	; 217
    1320:	62 8a       	std	Z+18, r6	; 0x12
    1322:	75 97       	sbiw	r30, 0x15	; 21
    1324:	c7 3b       	cpi	r28, 0xB7	; 183
    1326:	28 b9       	out	0x08, r18	; 8
    1328:	9e 4a       	sbci	r25, 0xAE	; 174
    132a:	6f 99       	sbic	0x0d, 7	; 13
    132c:	8c 8b       	std	Y+20, r24	; 0x14
    132e:	77 84       	ldd	r7, Z+15	; 0x0f
    1330:	9e 78       	andi	r25, 0x8E	; 142
    1332:	6a 8a       	std	Y+18, r6	; 0x12
    1334:	7d 93       	st	X+, r23
    1336:	ce 4f       	sbci	r28, 0xFE	; 254
    1338:	24 b4       	in	r2, 0x24	; 36
    133a:	a7 4c       	sbci	r26, 0xC7	; 199
    133c:	6a 9b       	sbis	0x0d, 2	; 13
    133e:	91 8c       	ldd	r9, Z+25	; 0x19
    1340:	7a 80       	ldd	r7, Y+2	; 0x02
    1342:	9c 7b       	andi	r25, 0xBC	; 188
    1344:	64 86       	std	Z+12, r6	; 0x0c
    1346:	7d 8e       	std	Y+29, r7	; 0x1d
    1348:	cc 5f       	subi	r28, 0xFC	; 252
    134a:	19 a7       	std	Y+41, r17	; 0x29
    134c:	b3 4f       	sbci	r27, 0xF3	; 243
    134e:	65 99       	sbic	0x0c, 5	; 12
    1350:	90 8b       	std	Z+16, r25	; 0x10
    1352:	81 82       	std	Z+1, r8	; 0x01
    1354:	9f 82       	std	Y+7, r9	; 0x07
    1356:	69 84       	ldd	r6, Y+9	; 0x09
    1358:	81 87       	std	Z+9, r24	; 0x09
    135a:	cb 71       	andi	r28, 0x1B	; 27
    135c:	16 9c       	mul	r1, r6
    135e:	c1 5b       	subi	r28, 0xB1	; 177
    1360:	5f 9c       	mul	r5, r15
    1362:	95 8f       	std	Z+29, r25	; 0x1d
    1364:	82 80       	ldd	r8, Z+2	; 0x02
    1366:	99 83       	std	Y+1, r25	; 0x01
    1368:	66 80       	ldd	r6, Z+6	; 0x06
    136a:	7f 80       	ldd	r7, Y+7	; 0x07
    136c:	cd 80       	ldd	r12, Y+5	; 0x05
    136e:	13 8b       	std	Z+19, r17	; 0x13
    1370:	c5 5d       	subi	r28, 0xD5	; 213
    1372:	55 94       	asr	r5
    1374:	94 90       	lpm	r9, Z
    1376:	7f 7d       	andi	r23, 0xDF	; 223
    1378:	9a 87       	std	Y+10, r25	; 0x0a
    137a:	68 7e       	andi	r22, 0xE8	; 232
    137c:	80 79       	andi	r24, 0x90	; 144
    137e:	c8 85       	ldd	r28, Y+8	; 0x08
    1380:	0a 78       	andi	r16, 0x8A	; 138
    1382:	c3 62       	ori	r28, 0x23	; 35
    1384:	49 8c       	ldd	r4, Y+25	; 0x19
    1386:	91 89       	ldd	r25, Z+17	; 0x11
    1388:	7b 77       	andi	r23, 0x7B	; 123
    138a:	98 81       	ld	r25, Y
    138c:	60 74       	andi	r22, 0x40	; 64
    138e:	7e 6f       	ori	r23, 0xFE	; 254
    1390:	ba 91       	ld	r27, -Y
    1392:	09 66       	ori	r16, 0x69	; 105
    1394:	c1 69       	ori	r28, 0x91	; 145
    1396:	47 86       	std	Z+15, r4	; 0x0f
    1398:	94 89       	ldd	r25, Z+20	; 0x14
    139a:	7e 76       	andi	r23, 0x6E	; 110
    139c:	94 89       	ldd	r25, Z+20	; 0x14
    139e:	67 78       	andi	r22, 0x87	; 135
    13a0:	81 75       	andi	r24, 0x51	; 81
    13a2:	b6 a8       	ldd	r11, Z+54	; 0x36
    13a4:	18 5c       	subi	r17, 0xC8	; 200
    13a6:	cc 7a       	andi	r28, 0xAC	; 172
    13a8:	4a 83       	std	Y+2, r20	; 0x02
    13aa:	9c 8c       	ldd	r9, Y+28	; 0x1c
    13ac:	83 77       	andi	r24, 0x73	; 115
    13ae:	92 8c       	ldd	r9, Z+26	; 0x1a
    13b0:	6c 72       	andi	r22, 0x2C	; 44
    13b2:	80 7a       	andi	r24, 0xA0	; 160
    13b4:	b4 b2       	in	r11, 0x14	; 20
    13b6:	22 4f       	sbci	r18, 0xF2	; 242
    13b8:	cc 88       	ldd	r12, Y+20	; 0x14
    13ba:	4a 82       	std	Y+2, r4	; 0x02
    13bc:	a3 96       	adiw	r28, 0x23	; 35
    13be:	89 7d       	andi	r24, 0xD9	; 217
    13c0:	95 92       	las	Z, r9
    13c2:	6e 74       	andi	r22, 0x4E	; 78
    13c4:	86 7f       	andi	r24, 0xF6	; 246
    13c6:	ae b8       	out	0x0e, r10	; 14
    13c8:	2d 42       	sbci	r18, 0x2D	; 45
    13ca:	c2 8d       	ldd	r28, Z+26	; 0x1a
    13cc:	48 78       	andi	r20, 0x88	; 136
    13ce:	9f 92       	push	r9
    13d0:	86 7b       	andi	r24, 0xB6	; 182
    13d2:	92 94       	swap	r9
    13d4:	6f 6d       	ori	r22, 0xDF	; 223
    13d6:	83 75       	andi	r24, 0x53	; 83
    13d8:	a0 bb       	out	0x10, r26	; 16
    13da:	37 33       	cpi	r19, 0x37	; 55
    13dc:	bc 99       	sbic	0x17, 4	; 23
    13de:	49 73       	andi	r20, 0x39	; 57
    13e0:	99 8f       	std	Y+25, r25	; 0x19
    13e2:	7f 72       	andi	r23, 0x2F	; 47
    13e4:	88 90       	.word	0x9088	; ????
    13e6:	6a 66       	ori	r22, 0x6A	; 106
    13e8:	83 78       	andi	r24, 0x83	; 131
    13ea:	93 ba       	out	0x13, r9	; 19
    13ec:	41 25       	eor	r20, r1
    13ee:	ac 9a       	sbi	0x15, 4	; 21
    13f0:	45 65       	ori	r20, 0x55	; 85
    13f2:	93 8c       	ldd	r9, Z+27	; 0x1b
    13f4:	81 74       	andi	r24, 0x41	; 65
    13f6:	84 8f       	std	Z+28, r24	; 0x1c
    13f8:	6a 63       	ori	r22, 0x3A	; 58
    13fa:	7d 79       	andi	r23, 0x9D	; 157
    13fc:	8a bb       	out	0x1a, r24	; 26
    13fe:	4f 1d       	adc	r20, r15
    1400:	a4 a5       	ldd	r26, Z+44	; 0x2c
    1402:	4b 60       	ori	r20, 0x0B	; 11
    1404:	95 91       	lpm	r25, Z+
    1406:	85 75       	andi	r24, 0x55	; 85
    1408:	88 94       	clc
    140a:	78 64       	ori	r23, 0x48	; 72
    140c:	7d 7c       	andi	r23, 0xCD	; 205
    140e:	86 c4       	rjmp	.+2316   	; 0x1d1c <__stack+0xc1d>
    1410:	62 19       	sub	r22, r2
    1412:	9b b9       	out	0x0b, r25	; 11
    1414:	57 63       	ori	r21, 0x37	; 55
    1416:	99 9c       	mul	r9, r9
    1418:	8e 7a       	andi	r24, 0xAE	; 174
    141a:	87 9a       	sbi	0x10, 7	; 16
    141c:	81 6c       	ori	r24, 0xC1	; 193
    141e:	7f 81       	ldd	r23, Y+7	; 0x07
    1420:	89 ca       	rjmp	.-2798   	; 0x934 <__LOCK_REGION_LENGTH__+0x534>
    1422:	80 16       	cp	r8, r16
    1424:	90 c9       	rjmp	.-3296   	; 0x746 <__LOCK_REGION_LENGTH__+0x346>
    1426:	68 5d       	subi	r22, 0xD8	; 216
    1428:	99 a6       	std	Y+41, r9	; 0x29
    142a:	98 81       	ld	r25, Y
    142c:	88 a0       	ldd	r8, Y+32	; 0x20
    142e:	89 72       	andi	r24, 0x29	; 41
    1430:	80 84       	ldd	r8, Z+8	; 0x08
    1432:	82 c8       	rjmp	.-3836   	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
    1434:	99 19       	sub	r25, r9
    1436:	73 ce       	rjmp	.-794    	; 0x111e <__stack+0x1f>
    1438:	71 4f       	sbci	r23, 0xF1	; 241
    143a:	8d a1       	ldd	r24, Y+37	; 0x25
    143c:	94 80       	ldd	r9, Z+4	; 0x04
    143e:	81 98       	cbi	0x10, 1	; 16
    1440:	8a 70       	andi	r24, 0x0A	; 10
    1442:	77 82       	std	Z+7, r7	; 0x07
    1444:	7e b8       	out	0x0e, r7	; 14
    1446:	ab 20       	and	r10, r11
    1448:	57 ce       	rjmp	.-850    	; 0x10f8 <__LOCK_REGION_LENGTH__+0xcf8>
    144a:	85 47       	sbci	r24, 0x75	; 117
    144c:	7f a1       	ldd	r23, Y+39	; 0x27
    144e:	93 7d       	andi	r25, 0xD3	; 211
    1450:	7b 92       	.word	0x927b	; ????
    1452:	8d 74       	andi	r24, 0x4D	; 77
    1454:	6c 7c       	andi	r22, 0xCC	; 204
    1456:	76 a7       	std	Z+46, r23	; 0x2e
    1458:	b3 2e       	mov	r11, r19
    145a:	33 bb       	out	0x13, r19	; 19
    145c:	97 44       	sbci	r25, 0x47	; 71
    145e:	6d 9b       	sbis	0x0d, 5	; 13
    1460:	94 7e       	andi	r25, 0xE4	; 228
    1462:	77 89       	ldd	r23, Z+23	; 0x17
    1464:	90 76       	andi	r25, 0x60	; 96
    1466:	71 73       	andi	r23, 0x31	; 49
    1468:	7d 9d       	mul	r23, r13
    146a:	c0 4c       	sbci	r28, 0xC0	; 192
    146c:	22 b4       	in	r2, 0x22	; 34
    146e:	aa 54       	subi	r26, 0x4A	; 74
    1470:	5f 9b       	sbis	0x0b, 7	; 11
    1472:	9b 81       	ldd	r25, Y+3	; 0x03
    1474:	74 84       	ldd	r7, Z+12	; 0x0c
    1476:	8c 7e       	andi	r24, 0xEC	; 236
    1478:	6b 6e       	ori	r22, 0xEB	; 235
    147a:	76 93       	lac	Z, r23
    147c:	c4 5a       	subi	r28, 0xA4	; 164
    147e:	17 93       	lat	Z, r17
    1480:	bd 55       	subi	r27, 0x5D	; 93
    1482:	4e 8c       	ldd	r4, Y+30	; 0x1e
    1484:	9d 85       	ldd	r25, Y+13	; 0x0d
    1486:	6b 7c       	andi	r22, 0xCB	; 203
    1488:	88 80       	ld	r8, Y
    148a:	6d 69       	ori	r22, 0x9D	; 157
    148c:	73 8e       	std	Z+27, r7	; 0x1b
    148e:	bf 77       	andi	r27, 0x7F	; 127
    1490:	0d 7e       	andi	r16, 0xED	; 237
    1492:	c1 67       	ori	r28, 0x71	; 113
    1494:	46 7f       	andi	r20, 0xF6	; 246
    1496:	a3 8b       	std	Z+19, r26	; 0x13
    1498:	77 7a       	andi	r23, 0xA7	; 167
    149a:	8e 87       	std	Y+14, r24	; 0x0e
    149c:	77 6c       	ori	r23, 0xC7	; 199
    149e:	73 89       	ldd	r23, Z+19	; 0x13
    14a0:	bd 90       	ld	r11, X+
    14a2:	14 60       	ori	r17, 0x04	; 4
    14a4:	c3 78       	andi	r28, 0x83	; 131
    14a6:	43 7a       	andi	r20, 0xA3	; 163
    14a8:	9f 8f       	std	Y+31, r25	; 0x1f
    14aa:	75 79       	andi	r23, 0x95	; 149
    14ac:	8a 88       	ldd	r8, Y+18	; 0x12
    14ae:	7c 69       	ori	r23, 0x9C	; 156
    14b0:	70 80       	ld	r7, Z
    14b2:	b6 a5       	ldd	r27, Z+46	; 0x2e
    14b4:	1f 41       	sbci	r17, 0x1F	; 31
    14b6:	c1 92       	st	Z+, r12
    14b8:	43 70       	andi	r20, 0x03	; 3
    14ba:	a4 9d       	mul	r26, r4
    14bc:	81 7c       	andi	r24, 0xC1	; 193
    14be:	8b 91       	.word	0x918b	; ????
    14c0:	89 6d       	ori	r24, 0xD9	; 217
    14c2:	70 7a       	andi	r23, 0xA0	; 160
    14c4:	af be       	out	0x3f, r10	; 63
    14c6:	3c 2f       	mov	r19, r28
    14c8:	b7 b4       	in	r11, 0x27	; 39
    14ca:	51 66       	ori	r21, 0x61	; 97
    14cc:	9f a3       	std	Y+39, r25	; 0x27
    14ce:	8f 7d       	andi	r24, 0xDF	; 223
    14d0:	87 94       	ror	r8
    14d2:	91 7f       	andi	r25, 0xF1	; 241
    14d4:	73 7e       	andi	r23, 0xE3	; 227
    14d6:	a6 cf       	rjmp	.-180    	; 0x1424 <__stack+0x325>
    14d8:	63 1e       	adc	r6, r19
    14da:	a3 bf       	out	0x33, r26	; 51
    14dc:	65 5e       	subi	r22, 0xE5	; 229
    14de:	99 a7       	std	Y+41, r25	; 0x29
    14e0:	92 7b       	andi	r25, 0xB2	; 178
    14e2:	81 91       	ld	r24, Z+
    14e4:	93 7f       	andi	r25, 0xF3	; 243
    14e6:	71 75       	andi	r23, 0x51	; 81
    14e8:	97 d2       	rcall	.+1326   	; 0x1a18 <__stack+0x919>
    14ea:	7c 1a       	sub	r7, r28
    14ec:	7f c7       	rjmp	.+3838   	; 0x23ec <__stack+0x12ed>
    14ee:	71 4d       	sbci	r23, 0xD1	; 209
    14f0:	82 a0       	ldd	r8, Z+34	; 0x22
    14f2:	92 77       	andi	r25, 0x72	; 114
    14f4:	78 8a       	std	Y+16, r7	; 0x10
    14f6:	8c 83       	std	Y+4, r24	; 0x04
    14f8:	6a 6a       	ori	r22, 0xAA	; 170
    14fa:	84 bf       	out	0x34, r24	; 52
    14fc:	8e 13       	cpse	r24, r30
    14fe:	5e be       	out	0x3e, r5	; 62
    1500:	84 42       	sbci	r24, 0x24	; 36
    1502:	6f a0       	ldd	r6, Y+39	; 0x27
    1504:	94 77       	andi	r25, 0x74	; 116
    1506:	6e 7f       	andi	r22, 0xFE	; 254
    1508:	84 7f       	andi	r24, 0xF4	; 244
    150a:	65 60       	ori	r22, 0x05	; 5
    150c:	78 b1       	in	r23, 0x08	; 8
    150e:	9e 1a       	sub	r9, r30
    1510:	39 b8       	out	0x09, r3	; 9
    1512:	92 3f       	cpi	r25, 0xF2	; 242
    1514:	5e 99       	sbic	0x0b, 6	; 11
    1516:	99 7d       	andi	r25, 0xD9	; 217
    1518:	6f 7a       	andi	r22, 0xAF	; 175
    151a:	86 86       	std	Z+14, r8	; 0x0e
    151c:	66 61       	ori	r22, 0x16	; 22
    151e:	78 a8       	ldd	r7, Y+48	; 0x30
    1520:	b6 30       	cpi	r27, 0x06	; 6
    1522:	29 b2       	in	r2, 0x19	; 25
    1524:	a8 48       	sbci	r26, 0x88	; 136
    1526:	59 9c       	mul	r5, r9
    1528:	9c 86       	std	Y+12, r9	; 0x0c
    152a:	73 78       	andi	r23, 0x83	; 131
    152c:	88 91       	.word	0x9188	; ????
    152e:	75 63       	ori	r23, 0x35	; 53
    1530:	75 a4       	ldd	r7, Z+45	; 0x2d
    1532:	c6 4d       	sbci	r28, 0xD6	; 214
    1534:	1c a4       	ldd	r1, Y+44	; 0x2c
    1536:	bc 57       	subi	r27, 0x7C	; 124
    1538:	54 98       	cbi	0x0a, 4	; 10
    153a:	a2 8c       	ldd	r10, Z+26	; 0x1a
    153c:	79 81       	ldd	r23, Y+1	; 0x01
    153e:	8a 95       	dec	r24
    1540:	84 66       	ori	r24, 0x64	; 100
    1542:	76 9f       	mul	r23, r22
    1544:	d1 67       	ori	r29, 0x71	; 113
    1546:	15 93       	las	Z, r17
    1548:	c3 68       	ori	r28, 0x83	; 131
    154a:	4e 93       	st	-X, r20
    154c:	a5 8f       	std	Z+29, r26	; 0x1d
    154e:	7d 7f       	andi	r23, 0xFD	; 253
    1550:	88 91       	.word	0x9188	; ????
    1552:	8d 69       	ori	r24, 0x9D	; 157
    1554:	6f 98       	cbi	0x0d, 7	; 13
    1556:	ce 84       	ldd	r12, Y+14	; 0x0e
    1558:	17 75       	andi	r17, 0x57	; 87
    155a:	c7 77       	andi	r28, 0x77	; 119
    155c:	4a 86       	std	Y+10, r4	; 0x0a
    155e:	a6 92       	lac	Z, r10
    1560:	82 81       	ldd	r24, Z+2	; 0x02
    1562:	84 89       	ldd	r24, Z+20	; 0x14
    1564:	8e 6c       	ori	r24, 0xCE	; 206
    1566:	60 8d       	ldd	r22, Z+24	; 0x18
    1568:	c2 9b       	sbis	0x18, 2	; 24
    156a:	22 55       	subi	r18, 0x52	; 82
    156c:	bf 8a       	std	Y+23, r11	; 0x17
    156e:	4c 75       	andi	r20, 0x5C	; 92
    1570:	a0 93 83 7e 	sts	0x7E83, r26	; 0x807e83 <__bss_end+0x7c22>
    1574:	83 80       	ldd	r8, Z+3	; 0x03
    1576:	8c 74       	andi	r24, 0x4C	; 76
    1578:	62 84       	ldd	r6, Z+10	; 0x0a
    157a:	b5 ad       	ldd	r27, Z+61	; 0x3d
    157c:	36 3f       	cpi	r19, 0xF6	; 246
    157e:	b0 a1       	ldd	r27, Z+32	; 0x20
    1580:	53 65       	ori	r21, 0x53	; 83
    1582:	98 99       	sbic	0x13, 0	; 19
    1584:	88 7a       	andi	r24, 0xA8	; 168
    1586:	81 85       	ldd	r24, Z+9	; 0x09
    1588:	8f 7a       	andi	r24, 0xAF	; 175
    158a:	5f 79       	andi	r21, 0x9F	; 159
    158c:	a7 b8       	out	0x07, r10	; 7
    158e:	53 27       	eor	r21, r19
    1590:	9b b0       	in	r9, 0x0b	; 11
    1592:	60 56       	subi	r22, 0x60	; 96
    1594:	8e 9f       	mul	r24, r30
    1596:	8a 79       	andi	r24, 0x9A	; 154
    1598:	7c 86       	std	Y+12, r7	; 0x0c
    159a:	89 7d       	andi	r24, 0xD9	; 217
    159c:	60 76       	andi	r22, 0x60	; 96
    159e:	9d b9       	out	0x0d, r25	; 13
    15a0:	67 1d       	adc	r22, r7
    15a2:	82 b7       	in	r24, 0x32	; 50
    15a4:	69 48       	sbci	r22, 0x89	; 137
    15a6:	81 9d       	mul	r24, r1
    15a8:	8a 6f       	ori	r24, 0xFA	; 250
    15aa:	77 81       	ldd	r23, Z+7	; 0x07
    15ac:	86 7c       	andi	r24, 0xC6	; 198
    15ae:	5c 6b       	ori	r21, 0xBC	; 188
    15b0:	91 ba       	out	0x11, r9	; 17
    15b2:	7e 18       	sub	r7, r14
    15b4:	67 bf       	out	0x37, r22	; 55
    15b6:	78 40       	sbci	r23, 0x08	; 8
    15b8:	74 9e       	mul	r7, r20
    15ba:	8c 72       	andi	r24, 0x2C	; 44
    15bc:	74 85       	ldd	r23, Z+12	; 0x0c
    15be:	8a 84       	ldd	r8, Y+10	; 0x0a
    15c0:	64 66       	ori	r22, 0x64	; 100
    15c2:	8e b1       	in	r24, 0x0e	; 14
    15c4:	94 1d       	adc	r25, r4
    15c6:	4d c1       	rjmp	.+666    	; 0x1862 <__stack+0x763>
    15c8:	8c 43       	sbci	r24, 0x3C	; 60
    15ca:	6b a2       	std	Y+35, r6	; 0x23
    15cc:	95 7a       	andi	r25, 0xA5	; 165
    15ce:	77 84       	ldd	r7, Z+15	; 0x0f
    15d0:	87 8f       	std	Z+31, r24	; 0x1f
    15d2:	70 68       	ori	r23, 0x80	; 128
    15d4:	89 b9       	out	0x09, r24	; 9
    15d6:	af 34       	cpi	r26, 0x4F	; 79
    15d8:	41 bf       	out	0x31, r20	; 49
    15da:	a8 4a       	sbci	r26, 0xA8	; 168
    15dc:	67 a5       	ldd	r22, Z+47	; 0x2f
    15de:	a3 87       	std	Z+11, r26	; 0x0b
    15e0:	7a 89       	ldd	r23, Y+18	; 0x12
    15e2:	90 93 79 64 	sts	0x6479, r25	; 0x806479 <__bss_end+0x6218>
    15e6:	83 b2       	in	r8, 0x13	; 19
    15e8:	ba 40       	sbci	r27, 0x0A	; 10
    15ea:	30 b5       	in	r19, 0x20	; 32
    15ec:	b1 52       	subi	r27, 0x21	; 33
    15ee:	5a 9e       	mul	r5, r26
    15f0:	a1 8a       	std	Z+17, r10	; 0x11
    15f2:	78 81       	ld	r23, Y
    15f4:	8a 8f       	std	Y+26, r24	; 0x1a
    15f6:	7b 64       	ori	r23, 0x4B	; 75
    15f8:	79 a8       	ldd	r7, Y+49	; 0x31
    15fa:	c1 51       	subi	r28, 0x11	; 17
    15fc:	22 9f       	mul	r18, r18
    15fe:	b6 57       	subi	r27, 0x76	; 118
    1600:	4e 93       	st	-X, r20
    1602:	a0 85       	ldd	r26, Z+8	; 0x08
    1604:	78 7d       	andi	r23, 0xD8	; 216
    1606:	89 85       	ldd	r24, Y+9	; 0x09
    1608:	7a 66       	ori	r23, 0x6A	; 106
    160a:	71 9c       	mul	r7, r1
    160c:	c0 69       	ori	r28, 0x90	; 144
    160e:	18 8a       	std	Y+16, r1	; 0x10
    1610:	bd 68       	ori	r27, 0x8D	; 141
    1612:	4b 89       	ldd	r20, Y+19	; 0x13
    1614:	a3 8c       	ldd	r10, Z+27	; 0x1b
    1616:	79 7e       	andi	r23, 0xE9	; 233
    1618:	8a 85       	ldd	r24, Y+10	; 0x0a
    161a:	7f 6c       	ori	r23, 0xCF	; 207
    161c:	71 8a       	std	Z+17, r7	; 0x11
    161e:	c5 85       	ldd	r28, Z+13	; 0x0d
    1620:	16 6c       	ori	r17, 0xC6	; 198
    1622:	c1 7e       	andi	r28, 0xE1	; 225
    1624:	42 7e       	andi	r20, 0xE2	; 226
    1626:	a1 96       	adiw	r28, 0x21	; 33
    1628:	79 74       	andi	r23, 0x49	; 73
    162a:	89 84       	ldd	r8, Y+9	; 0x09
    162c:	86 70       	andi	r24, 0x06	; 6
    162e:	70 7e       	andi	r23, 0xE0	; 224
    1630:	bd a4       	ldd	r11, Y+45	; 0x2d
    1632:	19 51       	subi	r17, 0x19	; 25
    1634:	c7 96       	adiw	r24, 0x37	; 55
    1636:	4b 73       	andi	r20, 0x3B	; 59
    1638:	a4 9e       	mul	r10, r20
    163a:	81 79       	andi	r24, 0x91	; 145
    163c:	8c 8a       	std	Y+20, r8	; 0x14
    163e:	83 76       	andi	r24, 0x63	; 99
    1640:	71 7e       	andi	r23, 0xE1	; 225
    1642:	b9 b6       	in	r11, 0x39	; 57
    1644:	2d 3a       	cpi	r18, 0xAD	; 173
    1646:	c2 a2       	std	Z+34, r12	; 0x22
    1648:	48 63       	ori	r20, 0x38	; 56
    164a:	9e a1       	ldd	r25, Y+38	; 0x26
    164c:	83 76       	andi	r24, 0x63	; 99
    164e:	8a 89       	ldd	r24, Y+18	; 0x12
    1650:	83 79       	andi	r24, 0x93	; 147
    1652:	67 7b       	andi	r22, 0xB7	; 183
    1654:	ac b9       	out	0x0c, r26	; 12
    1656:	39 2c       	mov	r3, r9
    1658:	b8 ad       	ldd	r27, Y+56	; 0x38
    165a:	52 59       	subi	r21, 0x92	; 146
    165c:	a0 a2       	std	Z+32, r10	; 0x20
    165e:	83 71       	andi	r24, 0x13	; 19
    1660:	88 8c       	ldd	r8, Y+24	; 0x18
    1662:	7f 7c       	andi	r23, 0xCF	; 207
    1664:	66 75       	andi	r22, 0x56	; 86
    1666:	a8 c0       	rjmp	.+336    	; 0x17b8 <__stack+0x6b9>
    1668:	4c 22       	and	r4, r28
    166a:	a6 ba       	out	0x16, r10	; 22
    166c:	5a 51       	subi	r21, 0x1A	; 26
    166e:	93 a0       	ldd	r9, Z+35	; 0x23
    1670:	85 73       	andi	r24, 0x35	; 53
    1672:	84 88       	ldd	r8, Z+20	; 0x14
    1674:	7d 7e       	andi	r23, 0xED	; 237
    1676:	6e 6e       	ori	r22, 0xEE	; 238
    1678:	9c c3       	rjmp	.+1848   	; 0x1db2 <__stack+0xcb3>
    167a:	61 14       	cp	r6, r1
    167c:	8b bf       	out	0x3b, r24	; 59
    167e:	66 46       	sbci	r22, 0x66	; 102
    1680:	84 a0       	ldd	r8, Z+36	; 0x24
    1682:	8a 74       	andi	r24, 0x4A	; 74
    1684:	7b 88       	ldd	r7, Y+19	; 0x13
    1686:	83 80       	ldd	r8, Z+3	; 0x03
    1688:	6e 69       	ori	r22, 0x9E	; 158
    168a:	89 c5       	rjmp	.+2834   	; 0x219e <__stack+0x109f>
    168c:	78 10       	cpse	r7, r8
    168e:	72 c4       	rjmp	.+2276   	; 0x1f74 <__stack+0xe75>
    1690:	75 44       	sbci	r23, 0x45	; 69
    1692:	7f 9f       	mul	r23, r31
    1694:	91 79       	andi	r25, 0x91	; 145
    1696:	7a 85       	ldd	r23, Y+10	; 0x0a
    1698:	85 7f       	andi	r24, 0xF5	; 245
    169a:	6c 6d       	ori	r22, 0xDC	; 220
    169c:	80 c1       	rjmp	.+768    	; 0x199e <__stack+0x89f>
    169e:	8e 0d       	add	r24, r14
    16a0:	62 c9       	rjmp	.-3388   	; 0x966 <__LOCK_REGION_LENGTH__+0x566>
    16a2:	83 42       	sbci	r24, 0x23	; 35
    16a4:	76 a6       	std	Z+46, r7	; 0x2e
    16a6:	93 77       	andi	r25, 0x73	; 115
    16a8:	75 89       	ldd	r23, Z+21	; 0x15
    16aa:	86 7d       	andi	r24, 0xD6	; 214
    16ac:	6d 71       	andi	r22, 0x1D	; 29
    16ae:	80 be       	out	0x30, r8	; 48
    16b0:	a1 16       	cp	r10, r17
    16b2:	59 cf       	rjmp	.-334    	; 0x1566 <__stack+0x467>
    16b4:	96 44       	sbci	r25, 0x46	; 70
    16b6:	71 af       	std	Z+57, r23	; 0x39
    16b8:	a2 7c       	andi	r26, 0xC2	; 194
    16ba:	78 90       	.word	0x9078	; ????
    16bc:	8d 85       	ldd	r24, Y+13	; 0x0d
    16be:	72 74       	andi	r23, 0x42	; 66
    16c0:	80 be       	out	0x30, r8	; 48
    16c2:	b9 27       	eor	r27, r25
    16c4:	41 c3       	rjmp	.+1666   	; 0x1d48 <__stack+0xc49>
    16c6:	a2 45       	sbci	r26, 0x52	; 82
    16c8:	5e a2       	std	Y+38, r5	; 0x26
    16ca:	9f 7d       	andi	r25, 0xDF	; 223
    16cc:	75 8a       	std	Z+21, r7	; 0x15
    16ce:	8f 83       	std	Y+7, r24	; 0x07
    16d0:	78 71       	andi	r23, 0x18	; 24
    16d2:	75 af       	std	Z+61, r23	; 0x3d
    16d4:	c1 37       	cpi	r28, 0x71	; 113
    16d6:	27 b3       	in	r18, 0x17	; 23
    16d8:	b1 52       	subi	r27, 0x21	; 33
    16da:	58 9d       	mul	r21, r8
    16dc:	a2 84       	ldd	r10, Z+10	; 0x0a
    16de:	78 87       	std	Y+8, r23	; 0x08
    16e0:	8a 7f       	andi	r24, 0xFA	; 250
    16e2:	78 75       	andi	r23, 0x58	; 88
    16e4:	70 a0       	ldd	r7, Z+32	; 0x20
    16e6:	c8 51       	subi	r28, 0x18	; 24
    16e8:	1e a4       	ldd	r1, Y+46	; 0x2e
    16ea:	be 5a       	subi	r27, 0xAE	; 174
    16ec:	4c 90       	ld	r4, X
    16ee:	a9 89       	ldd	r26, Y+17	; 0x11
    16f0:	72 85       	ldd	r23, Z+10	; 0x0a
    16f2:	8d 83       	std	Y+5, r24	; 0x05
    16f4:	79 70       	andi	r23, 0x09	; 9
    16f6:	73 8e       	std	Z+27, r7	; 0x1b
    16f8:	cf 6f       	ori	r28, 0xFF	; 255
    16fa:	0f 87       	std	Y+15, r16	; 0x0f
    16fc:	c8 6e       	ori	r28, 0xE8	; 232
    16fe:	3f 84       	ldd	r3, Y+15	; 0x0f
    1700:	aa 90       	ld	r10, -Y
    1702:	72 80       	ldd	r7, Z+2	; 0x02
    1704:	8b 85       	ldd	r24, Y+11	; 0x0b
    1706:	7d 68       	ori	r23, 0x8D	; 141
    1708:	6f 88       	ldd	r6, Y+23	; 0x17
    170a:	c5 97       	sbiw	r24, 0x35	; 53
    170c:	11 65       	ori	r17, 0x51	; 81
    170e:	d0 86       	std	Z+8, r13	; 0x08
    1710:	42 70       	andi	r20, 0x02	; 2
    1712:	a9 97       	sbiw	r28, 0x29	; 41
    1714:	7e 7b       	andi	r23, 0xBE	; 190
    1716:	86 84       	ldd	r8, Z+14	; 0x0e
    1718:	86 6a       	ori	r24, 0xA6	; 166
    171a:	6e 85       	ldd	r22, Y+14	; 0x0e
    171c:	ab b0       	in	r10, 0x0b	; 11
    171e:	2b 3d       	cpi	r18, 0xDB	; 219
    1720:	b9 a4       	ldd	r11, Y+41	; 0x29
    1722:	48 5c       	subi	r20, 0xC8	; 200
    1724:	a3 98       	cbi	0x14, 3	; 20
    1726:	7c 74       	andi	r23, 0x4C	; 76
    1728:	84 7f       	andi	r24, 0xF4	; 244
    172a:	88 72       	andi	r24, 0x28	; 40
    172c:	62 7d       	andi	r22, 0xD2	; 210
    172e:	9c bb       	out	0x1c, r25	; 28
    1730:	49 1e       	adc	r4, r25
    1732:	a6 b9       	out	0x06, r26	; 6
    1734:	53 47       	sbci	r21, 0x73	; 115
    1736:	98 a2       	std	Y+32, r9	; 0x20
    1738:	7f 78       	andi	r23, 0x8F	; 143
    173a:	86 85       	ldd	r24, Z+14	; 0x0e
    173c:	8b 7e       	andi	r24, 0xEB	; 235
    173e:	5e 7b       	andi	r21, 0xBE	; 190
    1740:	9a bc       	out	0x2a, r9	; 42
    1742:	68 12       	cpse	r6, r24
    1744:	8b c6       	rjmp	.+3350   	; 0x245c <__stack+0x135d>
    1746:	6a 3a       	cpi	r22, 0xAA	; 170
    1748:	84 ab       	std	Z+52, r24	; 0x34
    174a:	87 72       	andi	r24, 0x27	; 39
    174c:	7a 86       	std	Y+10, r7	; 0x0a
    174e:	8a 7e       	andi	r24, 0xEA	; 234
    1750:	5e 77       	andi	r21, 0x7E	; 126
    1752:	94 c1       	rjmp	.+808    	; 0x1a7c <__stack+0x97d>
    1754:	84 10       	cpse	r8, r4
    1756:	72 d4       	rcall	.+2276   	; 0x203c <__stack+0xf3d>
    1758:	84 37       	cpi	r24, 0x74	; 116
    175a:	7c b6       	in	r7, 0x3c	; 60
    175c:	98 76       	andi	r25, 0x68	; 104
    175e:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1760:	91 88       	ldd	r9, Z+17	; 0x11
    1762:	64 74       	andi	r22, 0x44	; 68
    1764:	8e c5       	rjmp	.+2844   	; 0x2282 <__stack+0x1183>
    1766:	9b 12       	cpse	r9, r27
    1768:	5d dc       	rcall	.-1862   	; 0x1024 <__LOCK_REGION_LENGTH__+0xc24>
    176a:	9a 37       	cpi	r25, 0x7A	; 122
    176c:	6b b2       	in	r6, 0x1b	; 27
    176e:	a0 77       	andi	r26, 0x70	; 112
    1770:	72 85       	ldd	r23, Z+10	; 0x0a
    1772:	96 92       	lac	Z, r9
    1774:	6a 70       	andi	r22, 0x0A	; 10
    1776:	8c c0       	rjmp	.+280    	; 0x1890 <__stack+0x791>
    1778:	b0 1d       	adc	r27, r0
    177a:	3d ce       	rjmp	.-902    	; 0x13f6 <__stack+0x2f7>
    177c:	aa 3d       	cpi	r26, 0xDA	; 218
    177e:	58 ab       	std	Y+48, r21	; 0x30
    1780:	a5 7d       	andi	r26, 0xD5	; 213
    1782:	73 84       	ldd	r7, Z+11	; 0x0b
    1784:	8c 93       	st	X, r24
    1786:	71 67       	ori	r23, 0x71	; 113
    1788:	7f ae       	std	Y+63, r7	; 0x3f
    178a:	c2 2d       	mov	r28, r2
    178c:	22 b8       	out	0x02, r2	; 2
    178e:	b9 48       	sbci	r27, 0x89	; 137
    1790:	4c a3       	std	Y+36, r20	; 0x24
    1792:	a4 82       	std	Z+4, r10	; 0x04
    1794:	73 84       	ldd	r7, Z+11	; 0x0b
    1796:	82 8d       	ldd	r24, Z+26	; 0x1a
    1798:	78 5f       	subi	r23, 0xF8	; 248
    179a:	76 9f       	mul	r23, r22
    179c:	c6 46       	sbci	r28, 0x66	; 102
    179e:	0c a1       	ldd	r16, Y+36	; 0x24
    17a0:	c4 55       	subi	r28, 0x54	; 84
    17a2:	3f 92       	push	r3
    17a4:	a8 85       	ldd	r26, Y+8	; 0x08
    17a6:	70 7e       	andi	r23, 0xE0	; 224
    17a8:	80 89       	ldd	r24, Z+16	; 0x10
    17aa:	81 5f       	subi	r24, 0xF1	; 241
    17ac:	6c 9a       	sbi	0x0d, 4	; 13
    17ae:	cf 66       	ori	r28, 0x6F	; 111
    17b0:	03 84       	ldd	r0, Z+11	; 0x0b
    17b2:	cf 66       	ori	r28, 0x6F	; 111
    17b4:	35 82       	std	Z+5, r3	; 0x05
    17b6:	aa 8f       	std	Y+26, r26	; 0x1a
    17b8:	72 7b       	andi	r23, 0xB2	; 178
    17ba:	86 88       	ldd	r8, Z+22	; 0x16
    17bc:	8c 69       	ori	r24, 0x9C	; 156
    17be:	64 92       	xch	Z, r6
    17c0:	ce 88       	ldd	r12, Y+22	; 0x16
    17c2:	08 65       	ori	r16, 0x58	; 88
    17c4:	d6 85       	ldd	r29, Z+14	; 0x0e
    17c6:	39 76       	andi	r19, 0x69	; 105
    17c8:	ae 99       	sbic	0x15, 6	; 21
    17ca:	76 78       	andi	r23, 0x86	; 134
    17cc:	86 85       	ldd	r24, Z+14	; 0x0e
    17ce:	8d 70       	andi	r24, 0x0D	; 13
    17d0:	60 87       	std	Z+8, r22	; 0x08
    17d2:	cb a5       	ldd	r28, Y+43	; 0x2b
    17d4:	14 4b       	sbci	r17, 0xB4	; 180
    17d6:	d0 a2       	std	Z+32, r13	; 0x20
    17d8:	40 67       	ori	r20, 0x70	; 112
    17da:	b2 a5       	ldd	r27, Z+42	; 0x2a
    17dc:	7f 7a       	andi	r23, 0xAF	; 175
    17de:	8b 88       	ldd	r8, Y+19	; 0x13
    17e0:	94 78       	andi	r25, 0x84	; 132
    17e2:	61 7d       	andi	r22, 0xD1	; 209
    17e4:	be ba       	out	0x1e, r11	; 30
    17e6:	27 33       	cpi	r18, 0x37	; 55
    17e8:	c3 b5       	in	r28, 0x23	; 35
    17ea:	4c 56       	subi	r20, 0x6C	; 108
    17ec:	a4 ab       	std	Z+52, r26	; 0x34
    17ee:	84 76       	andi	r24, 0x64	; 100
    17f0:	83 82       	std	Z+3, r8	; 0x03
    17f2:	90 7c       	andi	r25, 0xC0	; 192
    17f4:	61 72       	andi	r22, 0x21	; 33
    17f6:	ab ca       	rjmp	.-2730   	; 0xd4e <__LOCK_REGION_LENGTH__+0x94e>
    17f8:	3f 19       	sub	r19, r15
    17fa:	aa bc       	out	0x2a, r10	; 42
    17fc:	55 49       	sbci	r21, 0x95	; 149
    17fe:	94 a9       	ldd	r25, Z+52	; 0x34
    1800:	8a 72       	andi	r24, 0x2A	; 42
    1802:	81 7d       	andi	r24, 0xD1	; 209
    1804:	87 7e       	andi	r24, 0xE7	; 231
    1806:	5e 6b       	ori	r21, 0xBE	; 190
    1808:	95 cd       	rjmp	.-1238   	; 0x1334 <__stack+0x235>
    180a:	5c 0b       	sbc	r21, r28
    180c:	90 c7       	rjmp	.+3872   	; 0x272e <__stack+0x162f>
    180e:	68 3d       	cpi	r22, 0xD8	; 216
    1810:	83 a8       	ldd	r8, Z+51	; 0x33
    1812:	92 70       	andi	r25, 0x02	; 2
    1814:	7a 84       	ldd	r7, Y+10	; 0x0a
    1816:	86 82       	std	Z+6, r8	; 0x06
    1818:	61 6c       	ori	r22, 0xC1	; 193
    181a:	92 cd       	rjmp	.-1244   	; 0x1340 <__stack+0x241>
    181c:	7c 0d       	add	r23, r12
    181e:	76 ca       	rjmp	.-2836   	; 0xd0c <__LOCK_REGION_LENGTH__+0x90c>
    1820:	7f 3c       	cpi	r23, 0xCF	; 207
    1822:	72 a8       	ldd	r7, Z+50	; 0x32
    1824:	99 73       	andi	r25, 0x39	; 57
    1826:	77 88       	ldd	r7, Z+23	; 0x17
    1828:	83 88       	ldd	r8, Z+19	; 0x13
    182a:	69 6c       	ori	r22, 0xC9	; 201
    182c:	89 c2       	rjmp	.+1298   	; 0x1d40 <__stack+0xc41>
    182e:	9d 1a       	sub	r9, r29
    1830:	5e c8       	rjmp	.-3908   	; 0x8ee <__LOCK_REGION_LENGTH__+0x4ee>
    1832:	9a 48       	sbci	r25, 0x8A	; 138
    1834:	67 a9       	ldd	r22, Z+55	; 0x37
    1836:	a1 7d       	andi	r26, 0xD1	; 209
    1838:	78 8d       	ldd	r23, Y+24	; 0x18
    183a:	87 93       	lat	Z, r24
    183c:	77 71       	andi	r23, 0x17	; 23
    183e:	8b b7       	in	r24, 0x3b	; 59
    1840:	b9 2f       	mov	r27, r25
    1842:	42 bd       	out	0x22, r20	; 34
    1844:	ad 51       	subi	r26, 0x1D	; 29
    1846:	54 a1       	ldd	r21, Z+36	; 0x24
    1848:	a7 85       	ldd	r26, Z+15	; 0x0f
    184a:	77 87       	std	Z+15, r23	; 0x0f
    184c:	84 91       	lpm	r24, Z
    184e:	7b 61       	ori	r23, 0x1B	; 27
    1850:	80 a8       	ldd	r8, Z+48	; 0x30
    1852:	c2 41       	sbci	r28, 0x12	; 18
    1854:	1f a7       	std	Y+47, r17	; 0x2f
    1856:	b6 59       	subi	r27, 0x96	; 150
    1858:	41 90       	ld	r4, Z+
    185a:	aa 84       	ldd	r10, Y+10	; 0x0a
    185c:	71 7f       	andi	r23, 0xF1	; 241
    185e:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1860:	7c 5c       	subi	r23, 0xCC	; 204
    1862:	72 98       	cbi	0x0e, 2	; 14
    1864:	c5 54       	subi	r28, 0x45	; 69
    1866:	11 90       	ld	r1, Z+
    1868:	c6 6a       	ori	r28, 0xA6	; 166
    186a:	39 86       	std	Y+9, r3	; 0x09
    186c:	ac 8d       	ldd	r26, Y+28	; 0x1c
    186e:	6e 7b       	andi	r22, 0xBE	; 190
    1870:	7e 86       	std	Y+14, r7	; 0x0e
    1872:	80 5e       	subi	r24, 0xE0	; 224
    1874:	6d 8e       	std	Y+29, r6	; 0x1d
    1876:	c8 73       	andi	r28, 0x38	; 56
    1878:	0b 7a       	andi	r16, 0xAB	; 171
    187a:	c9 7a       	andi	r28, 0xA9	; 169
    187c:	38 78       	andi	r19, 0x88	; 136
    187e:	ae 94 74 7c 	call	0x28f8e8	; 0x28f8e8 <__TEXT_REGION_LENGTH__+0x26f8e8>
    1882:	86 87       	std	Z+14, r24	; 0x0e
    1884:	85 68       	ori	r24, 0x85	; 133
    1886:	72 89       	ldd	r23, Z+18	; 0x12
    1888:	c4 8d       	ldd	r28, Z+28	; 0x1c
    188a:	13 6d       	ori	r17, 0xD3	; 211
    188c:	cd 8d       	ldd	r28, Y+29	; 0x1d
    188e:	3e 72       	andi	r19, 0x2E	; 46
    1890:	ae 99       	sbic	0x15, 6	; 21
    1892:	76 7b       	andi	r23, 0xB6	; 182
    1894:	8b 85       	ldd	r24, Y+11	; 0x0b
    1896:	85 67       	ori	r24, 0x75	; 117
    1898:	71 86       	std	Z+9, r7	; 0x09
    189a:	b8 96       	adiw	r30, 0x28	; 40
    189c:	17 5d       	subi	r17, 0xD7	; 215
    189e:	c6 92       	lac	Z, r12
    18a0:	41 68       	ori	r20, 0x81	; 129
    18a2:	ab 9c       	mul	r10, r11
    18a4:	79 79       	andi	r23, 0x99	; 153
    18a6:	88 83       	st	Y, r24
    18a8:	87 6f       	ori	r24, 0xF7	; 247
    18aa:	72 85       	ldd	r23, Z+10	; 0x0a
    18ac:	b8 a3       	std	Y+32, r27	; 0x20
    18ae:	1c 52       	subi	r17, 0x2C	; 44
    18b0:	c3 9f       	mul	r28, r19
    18b2:	45 65       	ori	r20, 0x55	; 85
    18b4:	a6 9d       	mul	r26, r6
    18b6:	82 79       	andi	r24, 0x92	; 146
    18b8:	8e 85       	ldd	r24, Y+14	; 0x0e
    18ba:	87 7a       	andi	r24, 0xA7	; 167
    18bc:	74 81       	ldd	r23, Z+4	; 0x04
    18be:	b5 b4       	in	r11, 0x25	; 37
    18c0:	2a 47       	sbci	r18, 0x7A	; 122
    18c2:	c6 a6       	std	Z+46, r12	; 0x2e
    18c4:	50 63       	ori	r21, 0x30	; 48
    18c6:	a5 a2       	std	Z+37, r10	; 0x25
    18c8:	85 7c       	andi	r24, 0xC5	; 197
    18ca:	8e 87       	std	Y+14, r24	; 0x0e
    18cc:	81 7d       	andi	r24, 0xD1	; 209
    18ce:	75 75       	andi	r23, 0x55	; 85
    18d0:	b1 b9       	out	0x01, r27	; 1
    18d2:	2e 3e       	cpi	r18, 0xEE	; 238
    18d4:	bc af       	std	Y+60, r27	; 0x3c
    18d6:	54 5e       	subi	r21, 0xE4	; 228
    18d8:	a1 a5       	ldd	r26, Z+41	; 0x29
    18da:	88 73       	andi	r24, 0x38	; 56
    18dc:	8b 86       	std	Y+11, r8	; 0x0b
    18de:	76 7f       	andi	r23, 0xF6	; 246
    18e0:	73 74       	andi	r23, 0x43	; 67
    18e2:	aa bd       	out	0x2a, r26	; 42
    18e4:	36 30       	cpi	r19, 0x06	; 6
    18e6:	b3 a8       	ldd	r11, Z+51	; 0x33
    18e8:	56 53       	subi	r21, 0x36	; 54
    18ea:	93 9c       	mul	r9, r3
    18ec:	82 71       	andi	r24, 0x12	; 18
    18ee:	88 84       	ldd	r8, Y+8	; 0x08
    18f0:	74 79       	andi	r23, 0x94	; 148
    18f2:	75 6b       	ori	r23, 0xB5	; 181
    18f4:	99 be       	out	0x39, r9	; 57
    18f6:	40 22       	and	r4, r16
    18f8:	9e b0       	in	r9, 0x0e	; 14
    18fa:	57 4d       	sbci	r21, 0xD7	; 215
    18fc:	8f 9a       	sbi	0x11, 7	; 17
    18fe:	85 70       	andi	r24, 0x05	; 5
    1900:	84 86       	std	Z+12, r8	; 0x0c
    1902:	72 75       	andi	r23, 0x52	; 82
    1904:	71 70       	andi	r23, 0x01	; 1
    1906:	8c bd       	out	0x2c, r24	; 44
    1908:	53 18       	sub	r5, r3
    190a:	92 b2       	in	r9, 0x12	; 18
    190c:	63 45       	sbci	r22, 0x53	; 83
    190e:	88 a0       	ldd	r8, Y+32	; 0x20
    1910:	8b 72       	andi	r24, 0x2B	; 43
    1912:	80 8f       	std	Z+24, r24	; 0x18
    1914:	75 70       	andi	r23, 0x05	; 5
    1916:	71 72       	andi	r23, 0x21	; 33
    1918:	8a c0       	rjmp	.+276    	; 0x1a2e <__stack+0x92f>
    191a:	69 18       	sub	r6, r9
    191c:	89 bf       	out	0x39, r24	; 57
    191e:	74 4a       	sbci	r23, 0xA4	; 164
    1920:	7f a2       	std	Y+39, r7	; 0x27
    1922:	95 75       	andi	r25, 0x55	; 85
    1924:	7d 95 82 78 	jmp	0x5ef104	; 0x5ef104 <__TEXT_REGION_LENGTH__+0x5cf104>
    1928:	77 7f       	andi	r23, 0xF7	; 247
    192a:	8c c9       	rjmp	.-3304   	; 0xc44 <__LOCK_REGION_LENGTH__+0x844>
    192c:	86 1f       	adc	r24, r22
    192e:	7c c5       	rjmp	.+2808   	; 0x2428 <__stack+0x1329>
    1930:	87 4c       	sbci	r24, 0xC7	; 199
    1932:	7b a8       	ldd	r7, Y+51	; 0x33
    1934:	9d 7c       	andi	r25, 0xCD	; 205
    1936:	7e 96       	adiw	r30, 0x1e	; 30
    1938:	85 78       	andi	r24, 0x85	; 133
    193a:	73 7a       	andi	r23, 0xA3	; 163
    193c:	88 bf       	out	0x38, r24	; 56
    193e:	95 24       	eor	r9, r5
    1940:	67 c5       	rjmp	.+2766   	; 0x2410 <__stack+0x1311>
    1942:	96 4b       	sbci	r25, 0xB6	; 182
    1944:	6d a7       	std	Y+45, r22	; 0x2d
    1946:	a2 7d       	andi	r26, 0xD2	; 210
    1948:	78 96       	adiw	r30, 0x18	; 24
    194a:	8a 7d       	andi	r24, 0xDA	; 218
    194c:	75 7d       	andi	r23, 0xD5	; 213
    194e:	86 ba       	out	0x16, r8	; 22
    1950:	a3 27       	eor	r26, r19
    1952:	58 bd       	out	0x28, r21	; 40
    1954:	a4 4f       	sbci	r26, 0xF4	; 244
    1956:	5f a1       	ldd	r21, Y+39	; 0x27
    1958:	a4 81       	ldd	r26, Z+4	; 0x04
    195a:	6d 8d       	ldd	r22, Y+29	; 0x1d
    195c:	8a 7d       	andi	r24, 0xDA	; 218
    195e:	70 76       	andi	r23, 0x60	; 96
    1960:	82 b2       	in	r8, 0x12	; 18
    1962:	aa 29       	or	r26, r10
    1964:	45 b6       	in	r4, 0x35	; 53
    1966:	a5 4e       	sbci	r26, 0xE5	; 229
    1968:	57 98       	cbi	0x0a, 7	; 10
    196a:	a6 87       	std	Z+14, r26	; 0x0e
    196c:	70 8a       	std	Z+16, r7	; 0x10
    196e:	8b 7e       	andi	r24, 0xEB	; 235
    1970:	70 72       	andi	r23, 0x20	; 32
    1972:	7e ac       	ldd	r7, Y+62	; 0x3e
    1974:	ae 30       	cpi	r26, 0x0E	; 14
    1976:	3b b3       	in	r19, 0x1b	; 27
    1978:	aa 52       	subi	r26, 0x2A	; 42
    197a:	53 98       	cbi	0x0a, 3	; 10
    197c:	a4 85       	ldd	r26, Z+12	; 0x0c
    197e:	6f 88       	ldd	r6, Y+23	; 0x17
    1980:	85 76       	andi	r24, 0x65	; 101
    1982:	6f 6f       	ori	r22, 0xFF	; 255
    1984:	76 a3       	std	Z+38, r23	; 0x26
    1986:	b3 36       	cpi	r27, 0x63	; 99
    1988:	31 a7       	std	Z+41, r19	; 0x29
    198a:	ad 55       	subi	r26, 0x5D	; 93
    198c:	4b 8e       	std	Y+27, r4	; 0x1b
    198e:	a0 87       	std	Z+8, r26	; 0x08
    1990:	71 8b       	std	Z+17, r23	; 0x11
    1992:	8b 7d       	andi	r24, 0xDB	; 219
    1994:	7a 7c       	andi	r23, 0xCA	; 202
    1996:	7c a2       	std	Y+36, r7	; 0x24
    1998:	c0 4b       	sbci	r28, 0xB0	; 176
    199a:	31 a3       	std	Z+33, r19	; 0x21
    199c:	bc 6b       	ori	r27, 0xBC	; 188
    199e:	54 91       	lpm	r21, Z
    19a0:	a6 8f       	std	Z+30, r26	; 0x1e
    19a2:	78 86       	std	Y+8, r7	; 0x08
    19a4:	89 7b       	andi	r24, 0xB9	; 185
    19a6:	77 74       	andi	r23, 0x47	; 71
    19a8:	7b 97       	sbiw	r30, 0x1b	; 27
    19aa:	bf 5a       	subi	r27, 0xAF	; 175
    19ac:	24 98       	cbi	0x04, 4	; 4
    19ae:	b9 6e       	ori	r27, 0xE9	; 233
    19b0:	4d 86       	std	Y+13, r4	; 0x0d
    19b2:	a0 8e       	std	Z+24, r10	; 0x18
    19b4:	75 84       	ldd	r7, Z+13	; 0x0d
    19b6:	8e 7b       	andi	r24, 0xBE	; 190
    19b8:	75 75       	andi	r23, 0x55	; 85
    19ba:	77 90       	elpm	r7, Z+
    19bc:	c0 60       	ori	r28, 0x00	; 0
    19be:	1c 8d       	ldd	r17, Y+28	; 0x1c
    19c0:	bc 74       	andi	r27, 0x4C	; 76
    19c2:	4c 80       	ldd	r4, Y+4	; 0x04
    19c4:	a2 91       	ld	r26, -Z
    19c6:	71 80       	ldd	r7, Z+1	; 0x01
    19c8:	90 7c       	andi	r25, 0xC0	; 192
    19ca:	70 75       	andi	r23, 0x50	; 80
    19cc:	7b 83       	std	Y+3, r23	; 0x03
    19ce:	bc 71       	andi	r27, 0x1C	; 28
    19d0:	12 76       	andi	r17, 0x62	; 98
    19d2:	b6 7a       	andi	r27, 0xA6	; 166
    19d4:	47 73       	andi	r20, 0x37	; 55
    19d6:	9f 93       	push	r25
    19d8:	74 78       	andi	r23, 0x84	; 132
    19da:	8c 79       	andi	r24, 0x9C	; 156
    19dc:	6d 68       	ori	r22, 0x8D	; 141
    19de:	79 80       	ldd	r7, Y+1	; 0x01
    19e0:	b2 8a       	std	Z+18, r11	; 0x12
    19e2:	1b 6b       	ori	r17, 0xBB	; 187
    19e4:	ba 8f       	std	Y+26, r27	; 0x1a
    19e6:	4f 6b       	ori	r20, 0xBF	; 191
    19e8:	a1 9d       	mul	r26, r1
    19ea:	7c 7a       	andi	r23, 0xAC	; 172
    19ec:	90 87       	std	Z+8, r25	; 0x08
    19ee:	7d 6b       	ori	r23, 0xBD	; 189
    19f0:	78 8c       	ldd	r7, Y+24	; 0x18
    19f2:	b6 97       	sbiw	r30, 0x26	; 38
    19f4:	22 5c       	subi	r18, 0xC2	; 194
    19f6:	be 96       	adiw	r30, 0x2e	; 46
    19f8:	51 63       	ori	r21, 0x31	; 49
    19fa:	a1 9c       	mul	r10, r1
    19fc:	77 76       	andi	r23, 0x67	; 103
    19fe:	8d 87       	std	Y+13, r24	; 0x0d
    1a00:	7c 6d       	ori	r23, 0xDC	; 220
    1a02:	74 8a       	std	Z+20, r7	; 0x14
    1a04:	b2 a6       	std	Z+42, r11	; 0x2a
    1a06:	2d 51       	subi	r18, 0x1D	; 29
    1a08:	bf a5       	ldd	r27, Y+47	; 0x2f
    1a0a:	5b 60       	ori	r21, 0x0B	; 11
    1a0c:	a2 a6       	std	Z+42, r10	; 0x2a
    1a0e:	81 79       	andi	r24, 0x91	; 145
    1a10:	95 8c       	ldd	r9, Z+29	; 0x1d
    1a12:	83 77       	andi	r24, 0x73	; 115
    1a14:	76 8c       	ldd	r7, Z+30	; 0x1e
    1a16:	ae b7       	in	r26, 0x3e	; 62
    1a18:	41 40       	sbci	r20, 0x01	; 1
    1a1a:	b6 b5       	in	r27, 0x26	; 38
    1a1c:	66 57       	subi	r22, 0x76	; 118
    1a1e:	9a ae       	std	Y+58, r9	; 0x3a
    1a20:	8b 7c       	andi	r24, 0xCB	; 203
    1a22:	90 92 85 77 	sts	0x7785, r9	; 0x807785 <__bss_end+0x7524>
    1a26:	72 84       	ldd	r7, Z+10	; 0x0a
    1a28:	a5 b9       	out	0x05, r26	; 5
    1a2a:	51 2e       	mov	r5, r17
    1a2c:	a5 b8       	out	0x05, r10	; 5
    1a2e:	6f 51       	subi	r22, 0x1F	; 31
    1a30:	8a a8       	ldd	r8, Y+50	; 0x32
    1a32:	8b 77       	andi	r24, 0x7B	; 123
    1a34:	82 8c       	ldd	r8, Z+26	; 0x1a
    1a36:	81 73       	andi	r24, 0x31	; 49
    1a38:	6c 79       	andi	r22, 0x9C	; 156
    1a3a:	98 b9       	out	0x08, r25	; 8
    1a3c:	5a 1e       	adc	r5, r26
    1a3e:	89 b4       	in	r8, 0x29	; 41
    1a40:	71 46       	sbci	r23, 0x61	; 97
    1a42:	77 a3       	std	Z+39, r23	; 0x27
    1a44:	8c 6c       	ori	r24, 0xCC	; 204
    1a46:	76 7e       	andi	r23, 0xE6	; 230
    1a48:	7c 74       	andi	r23, 0x4C	; 76
    1a4a:	60 71       	andi	r22, 0x10	; 16
    1a4c:	91 bc       	out	0x21, r9	; 33
    1a4e:	6f 17       	cp	r22, r31
    1a50:	74 bc       	out	0x24, r7	; 36
    1a52:	7f 41       	sbci	r23, 0x1F	; 31
    1a54:	6b 9f       	mul	r22, r27
    1a56:	95 71       	andi	r25, 0x15	; 21
    1a58:	72 81       	ldd	r23, Z+2	; 0x02
    1a5a:	7f 78       	andi	r23, 0x8F	; 143
    1a5c:	65 6b       	ori	r22, 0xB5	; 181
    1a5e:	89 b9       	out	0x09, r24	; 9
    1a60:	82 1a       	sub	r8, r18
    1a62:	63 c1       	rjmp	.+710    	; 0x1d2a <__stack+0xc2b>
    1a64:	91 46       	sbci	r25, 0x61	; 97
    1a66:	61 9d       	mul	r22, r1
    1a68:	9a 77       	andi	r25, 0x7A	; 122
    1a6a:	72 86       	std	Z+10, r7	; 0x0a
    1a6c:	85 82       	std	Z+5, r8	; 0x05
    1a6e:	6b 6f       	ori	r22, 0xFB	; 251
    1a70:	8a b9       	out	0x0a, r24	; 10
    1a72:	9b 24       	eor	r9, r11
    1a74:	57 bd       	out	0x27, r21	; 39
    1a76:	9d 4f       	sbci	r25, 0xFD	; 253
    1a78:	5b 9d       	mul	r21, r11
    1a7a:	a0 81       	ld	r26, Z
    1a7c:	75 87       	std	Z+13, r23	; 0x0d
    1a7e:	87 83       	std	Z+7, r24	; 0x07
    1a80:	74 70       	andi	r23, 0x04	; 4
    1a82:	83 b2       	in	r8, 0x13	; 19
    1a84:	a1 25       	eor	r26, r1
    1a86:	47 b3       	in	r20, 0x17	; 23
    1a88:	9f 53       	subi	r25, 0x3F	; 63
    1a8a:	56 97       	sbiw	r26, 0x16	; 22
    1a8c:	a3 86       	std	Z+11, r10	; 0x0b
    1a8e:	73 88       	ldd	r7, Z+19	; 0x13
    1a90:	89 82       	std	Y+1, r8	; 0x01
    1a92:	74 6e       	ori	r23, 0xE4	; 228
    1a94:	7e ac       	ldd	r7, Y+62	; 0x3e
    1a96:	b1 33       	cpi	r27, 0x31	; 49
    1a98:	42 b5       	in	r20, 0x22	; 34
    1a9a:	a8 5e       	subi	r26, 0xE8	; 232
    1a9c:	55 95       	asr	r21
    1a9e:	a5 8b       	std	Z+21, r26	; 0x15
    1aa0:	77 87       	std	Z+15, r23	; 0x0f
    1aa2:	8d 88       	ldd	r8, Y+21	; 0x15
    1aa4:	7b 76       	andi	r23, 0x6B	; 107
    1aa6:	7f aa       	std	Y+55, r7	; 0x37
    1aa8:	b7 3a       	cpi	r27, 0xA7	; 167
    1aaa:	3b b1       	in	r19, 0x0b	; 11
    1aac:	b1 65       	ori	r27, 0x51	; 81
    1aae:	57 94       	ror	r5
    1ab0:	a7 8c       	ldd	r10, Z+31	; 0x1f
    1ab2:	79 86       	std	Y+9, r7	; 0x09
    1ab4:	89 7e       	andi	r24, 0xE9	; 233
    1ab6:	78 79       	andi	r23, 0x98	; 152
    1ab8:	7a a5       	ldd	r23, Y+42	; 0x2a
    1aba:	bb 45       	sbci	r27, 0x5B	; 91
    1abc:	38 ae       	std	Y+56, r3	; 0x38
    1abe:	b0 64       	ori	r27, 0x40	; 64
    1ac0:	59 92       	st	Y+, r5
    1ac2:	a6 8d       	ldd	r26, Z+30	; 0x1e
    1ac4:	77 8b       	std	Z+23, r23	; 0x17
    1ac6:	8d 7a       	andi	r24, 0xAD	; 173
    1ac8:	73 7c       	andi	r23, 0xC3	; 195
    1aca:	7e 9c       	mul	r7, r14
    1acc:	bf 43       	sbci	r27, 0x3F	; 63
    1ace:	2d a9       	ldd	r18, Y+53	; 0x35
    1ad0:	b3 67       	ori	r27, 0x73	; 115
    1ad2:	53 8e       	std	Z+27, r5	; 0x1b
    1ad4:	a0 8f       	std	Z+24, r26	; 0x18
    1ad6:	77 86       	std	Z+15, r7	; 0x0f
    1ad8:	8e 7d       	andi	r24, 0xDE	; 222
    1ada:	73 7c       	andi	r23, 0xC3	; 195
    1adc:	7c 98       	cbi	0x0f, 4	; 15
    1ade:	bf 4c       	sbci	r27, 0xCF	; 207
    1ae0:	2b 9f       	mul	r18, r27
    1ae2:	b3 68       	ori	r27, 0x83	; 131
    1ae4:	57 89       	ldd	r21, Z+23	; 0x17
    1ae6:	9d 8b       	std	Y+21, r25	; 0x15
    1ae8:	73 83       	std	Z+3, r23	; 0x03
    1aea:	89 77       	andi	r24, 0x79	; 121
    1aec:	6c 75       	andi	r22, 0x5C	; 92
    1aee:	7d 94 b9 4c 	jmp	0x1e9972	; 0x1e9972 <__TEXT_REGION_LENGTH__+0x1c9972>
    1af2:	25 9d       	mul	r18, r5
    1af4:	ae 6c       	ori	r26, 0xCE	; 206
    1af6:	54 88       	ldd	r5, Z+20	; 0x14
    1af8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1afa:	78 82       	st	Y, r7
    1afc:	8f 79       	andi	r24, 0x9F	; 159
    1afe:	6e 76       	andi	r22, 0x6E	; 110
    1b00:	7d 91       	ld	r23, X+
    1b02:	ba 57       	subi	r27, 0x7A	; 122
    1b04:	27 9b       	sbis	0x04, 7	; 4
    1b06:	b5 6f       	ori	r27, 0xF5	; 245
    1b08:	55 87       	std	Z+13, r21	; 0x0d
    1b0a:	9c 8f       	std	Y+28, r25	; 0x1c
    1b0c:	77 81       	ldd	r23, Z+7	; 0x07
    1b0e:	90 7b       	andi	r25, 0xB0	; 176
    1b10:	6a 73       	andi	r22, 0x3A	; 58
    1b12:	7e 8e       	std	Y+30, r7	; 0x1e
    1b14:	bc 5d       	subi	r27, 0xDC	; 220
    1b16:	23 94       	inc	r2
    1b18:	b7 74       	andi	r27, 0x47	; 71
    1b1a:	51 82       	std	Z+1, r5	; 0x01
    1b1c:	9c 90       	ld	r9, X
    1b1e:	74 7c       	andi	r23, 0xC4	; 196
    1b20:	8f 7b       	andi	r24, 0xBF	; 191
    1b22:	68 71       	andi	r22, 0x18	; 24
    1b24:	7e 8a       	std	Y+22, r7	; 0x16
    1b26:	be 65       	ori	r27, 0x5E	; 94
    1b28:	1e 8c       	ldd	r1, Y+30	; 0x1e
    1b2a:	b8 78       	andi	r27, 0x88	; 136
    1b2c:	52 7f       	andi	r21, 0xF2	; 242
    1b2e:	9d 94 78 7b 	jmp	0x26f6f0	; 0x26f6f0 <__TEXT_REGION_LENGTH__+0x24f6f0>
    1b32:	94 84       	ldd	r9, Z+12	; 0x0c
    1b34:	70 6e       	ori	r23, 0xE0	; 224
    1b36:	84 8c       	ldd	r8, Z+28	; 0x1c
    1b38:	b7 6e       	ori	r27, 0xE7	; 231
    1b3a:	18 82       	st	Y, r1
    1b3c:	b5 79       	andi	r27, 0x95	; 149
    1b3e:	4b 78       	andi	r20, 0x8B	; 139
    1b40:	9b 90       	.word	0x909b	; ????
    1b42:	77 78       	andi	r23, 0x87	; 135
    1b44:	91 85       	ldd	r25, Z+9	; 0x09
    1b46:	71 6d       	ori	r23, 0xD1	; 209
    1b48:	81 8b       	std	Z+17, r24	; 0x11
    1b4a:	b7 79       	andi	r27, 0x97	; 151
    1b4c:	1e 78       	andi	r17, 0x8E	; 142
    1b4e:	bb 85       	ldd	r27, Y+11	; 0x0b
    1b50:	54 79       	andi	r21, 0x94	; 148
    1b52:	a0 99       	sbic	0x14, 0	; 20
    1b54:	7d 7c       	andi	r23, 0xCD	; 205
    1b56:	90 80       	ld	r9, Z
    1b58:	6e 71       	andi	r22, 0x1E	; 30
    1b5a:	7f 89       	ldd	r23, Y+23	; 0x17
    1b5c:	b8 85       	ldd	r27, Y+8	; 0x08
    1b5e:	24 76       	andi	r18, 0x64	; 100
    1b60:	bd 8a       	std	Y+21, r11	; 0x15
    1b62:	56 72       	andi	r21, 0x26	; 38
    1b64:	9f 9b       	sbis	0x13, 7	; 19
    1b66:	80 79       	andi	r24, 0x90	; 144
    1b68:	92 89       	ldd	r25, Z+18	; 0x12
    1b6a:	6e 70       	andi	r22, 0x0E	; 14
    1b6c:	82 8c       	ldd	r8, Z+26	; 0x1a
    1b6e:	b6 89       	ldd	r27, Z+22	; 0x16
    1b70:	24 68       	ori	r18, 0x84	; 132
    1b72:	bd 91       	ld	r27, X+	; undefined
    1b74:	58 72       	andi	r21, 0x28	; 40
    1b76:	9c 9f       	mul	r25, r28
    1b78:	86 7c       	andi	r24, 0xC6	; 198
    1b7a:	91 89       	ldd	r25, Z+17	; 0x11
    1b7c:	71 6e       	ori	r23, 0xE1	; 225
    1b7e:	7f 8b       	std	Y+23, r23	; 0x17
    1b80:	b2 94       	swap	r11
    1b82:	2c 64       	ori	r18, 0x4C	; 76
    1b84:	b8 95       	.word	0x95b8	; ????
    1b86:	5d 6a       	ori	r21, 0xAD	; 173
    1b88:	97 9a       	sbi	0x12, 7	; 18
    1b8a:	82 78       	andi	r24, 0x82	; 130
    1b8c:	8d 89       	ldd	r24, Y+21	; 0x15
    1b8e:	70 70       	andi	r23, 0x00	; 0
    1b90:	82 8a       	std	Z+18, r8	; 0x12
    1b92:	b1 95       	neg	r27
    1b94:	2c 59       	subi	r18, 0x9C	; 156
    1b96:	b3 9b       	sbis	0x16, 3	; 22
    1b98:	5d 6c       	ori	r21, 0xCD	; 205
    1b9a:	97 9e       	mul	r9, r23
    1b9c:	8b 76       	andi	r24, 0x6B	; 107
    1b9e:	8e 87       	std	Y+14, r24	; 0x0e
    1ba0:	6f 69       	ori	r22, 0x9F	; 159
    1ba2:	7c 82       	std	Y+4, r7	; 0x04
    1ba4:	a0 a1       	ldd	r26, Z+32	; 0x20
    1ba6:	2f 4b       	sbci	r18, 0xBF	; 191
    1ba8:	ac 9a       	sbi	0x15, 4	; 21
    1baa:	5e 5d       	subi	r21, 0xDE	; 222
    1bac:	8f 98       	cbi	0x11, 7	; 17
    1bae:	87 73       	andi	r24, 0x37	; 55
    1bb0:	87 88       	ldd	r8, Z+23	; 0x17
    1bb2:	70 6d       	ori	r23, 0xD0	; 208
    1bb4:	7e 80       	ldd	r7, Y+6	; 0x06
    1bb6:	9e a7       	std	Y+46, r25	; 0x2e
    1bb8:	36 46       	sbci	r19, 0x66	; 102
    1bba:	ad a9       	ldd	r26, Y+53	; 0x35
    1bbc:	66 5f       	subi	r22, 0xF6	; 246
    1bbe:	93 9e       	mul	r9, r19
    1bc0:	8d 75       	andi	r24, 0x5D	; 93
    1bc2:	85 87       	std	Z+13, r24	; 0x0d
    1bc4:	73 6c       	ori	r23, 0xC3	; 195
    1bc6:	78 7e       	andi	r23, 0xE8	; 232
    1bc8:	a0 af       	std	Z+56, r26	; 0x38
    1bca:	3e 40       	sbci	r19, 0x0E	; 14
    1bcc:	ab a5       	ldd	r26, Y+43	; 0x2b
    1bce:	64 5d       	subi	r22, 0xD4	; 212
    1bd0:	8c 9b       	sbis	0x11, 4	; 17
    1bd2:	8d 78       	andi	r24, 0x8D	; 141
    1bd4:	83 89       	ldd	r24, Z+19	; 0x13
    1bd6:	77 6b       	ori	r23, 0xB7	; 183
    1bd8:	79 81       	ldd	r23, Y+1	; 0x01
    1bda:	a0 a8       	ldd	r10, Z+48	; 0x30
    1bdc:	3c 40       	sbci	r19, 0x0C	; 12
    1bde:	a5 a3       	std	Z+37, r26	; 0x25
    1be0:	62 5b       	subi	r22, 0xB2	; 178
    1be2:	8b 99       	sbic	0x11, 3	; 17
    1be4:	8a 76       	andi	r24, 0x6A	; 106
    1be6:	82 8d       	ldd	r24, Z+26	; 0x1a
    1be8:	77 68       	ori	r23, 0x87	; 135
    1bea:	75 83       	std	Z+5, r23	; 0x05
    1bec:	a2 a7       	std	Z+42, r26	; 0x2a
    1bee:	40 3f       	cpi	r20, 0xF0	; 240
    1bf0:	a1 a7       	std	Z+41, r26	; 0x29
    1bf2:	65 5c       	subi	r22, 0xC5	; 197
    1bf4:	8f 9b       	sbis	0x11, 7	; 17
    1bf6:	8e 76       	andi	r24, 0x6E	; 110
    1bf8:	84 8b       	std	Z+20, r24	; 0x14
    1bfa:	7c 69       	ori	r23, 0x9C	; 156
    1bfc:	75 87       	std	Z+13, r23	; 0x0d
    1bfe:	a0 aa       	std	Z+48, r10	; 0x30
    1c00:	3f 43       	sbci	r19, 0x3F	; 63
    1c02:	a2 a8       	ldd	r10, Z+50	; 0x32
    1c04:	69 5c       	subi	r22, 0xC9	; 201
    1c06:	91 9b       	sbis	0x12, 1	; 18
    1c08:	8e 78       	andi	r24, 0x8E	; 142
    1c0a:	87 92       	lat	Z, r8
    1c0c:	7d 6d       	ori	r23, 0xDD	; 221
    1c0e:	75 85       	ldd	r23, Z+13	; 0x0d
    1c10:	a3 aa       	std	Z+51, r10	; 0x33
    1c12:	47 3d       	cpi	r20, 0xD7	; 215
    1c14:	a0 aa       	std	Z+48, r10	; 0x30
    1c16:	6d 5c       	subi	r22, 0xCD	; 205
    1c18:	8b 9d       	mul	r24, r11
    1c1a:	91 7a       	andi	r25, 0xA1	; 161
    1c1c:	80 8d       	ldd	r24, Z+24	; 0x18
    1c1e:	7c 6c       	ori	r23, 0xCC	; 204
    1c20:	70 83       	st	Z, r23
    1c22:	9c b1       	in	r25, 0x0c	; 12
    1c24:	50 36       	cpi	r21, 0x60	; 96
    1c26:	9c af       	std	Y+60, r25	; 0x3c
    1c28:	73 5a       	subi	r23, 0xA3	; 163
    1c2a:	8d 9c       	mul	r8, r13
    1c2c:	92 7b       	andi	r25, 0xB2	; 178
    1c2e:	80 91 7c 6d 	lds	r24, 0x6D7C	; 0x806d7c <__bss_end+0x6b1b>
    1c32:	73 84       	ldd	r7, Z+11	; 0x0b
    1c34:	9b b5       	in	r25, 0x2b	; 43
    1c36:	55 33       	cpi	r21, 0x35	; 53
    1c38:	99 b4       	in	r9, 0x29	; 41
    1c3a:	74 59       	subi	r23, 0x94	; 148
    1c3c:	88 9d       	mul	r24, r8
    1c3e:	96 7a       	andi	r25, 0xA6	; 166
    1c40:	83 94       	inc	r8
    1c42:	84 6f       	ori	r24, 0xF4	; 244
    1c44:	74 88       	ldd	r7, Z+20	; 0x14
    1c46:	99 b9       	out	0x09, r25	; 9
    1c48:	58 2b       	or	r21, r24
    1c4a:	93 b1       	in	r25, 0x03	; 3
    1c4c:	75 55       	subi	r23, 0x55	; 85
    1c4e:	82 9b       	sbis	0x10, 2	; 16
    1c50:	92 78       	andi	r25, 0x82	; 130
    1c52:	7c 91       	ld	r23, X
    1c54:	82 6a       	ori	r24, 0xA2	; 162
    1c56:	70 84       	ldd	r7, Z+8	; 0x08
    1c58:	98 b6       	in	r9, 0x38	; 56
    1c5a:	5a 29       	or	r21, r10
    1c5c:	8e b0       	in	r8, 0x0e	; 14
    1c5e:	75 55       	subi	r23, 0x55	; 85
    1c60:	7e 96       	adiw	r30, 0x1e	; 30
    1c62:	95 7b       	andi	r25, 0xB5	; 181
    1c64:	79 8d       	ldd	r23, Y+25	; 0x19
    1c66:	80 69       	ori	r24, 0x90	; 144
    1c68:	69 7e       	andi	r22, 0xE9	; 233
    1c6a:	8e b2       	in	r8, 0x1e	; 30
    1c6c:	58 28       	or	r5, r8
    1c6e:	8e af       	std	Y+62, r24	; 0x3e
    1c70:	7c 55       	subi	r23, 0x5C	; 92
    1c72:	7c 93       	st	X, r23
    1c74:	91 7a       	andi	r25, 0xA1	; 161
    1c76:	72 87       	std	Z+10, r23	; 0x0a
    1c78:	7d 68       	ori	r23, 0x8D	; 141
    1c7a:	69 7f       	andi	r22, 0xF9	; 249
    1c7c:	8f b1       	in	r24, 0x0f	; 15
    1c7e:	5c 24       	eor	r5, r12
    1c80:	87 ac       	ldd	r8, Z+63	; 0x3f
    1c82:	79 55       	subi	r23, 0x59	; 89
    1c84:	78 95       	.word	0x9578	; ????
    1c86:	95 7d       	andi	r25, 0xD5	; 213
    1c88:	78 8c       	ldd	r7, Y+24	; 0x18
    1c8a:	80 69       	ori	r24, 0x90	; 144
    1c8c:	6c 7f       	andi	r22, 0xFC	; 252
    1c8e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1c90:	60 28       	or	r6, r0
    1c92:	87 ae       	std	Z+63, r8	; 0x3f
    1c94:	7d 59       	subi	r23, 0x9D	; 157
    1c96:	7d 98       	cbi	0x0f, 5	; 15
    1c98:	95 80       	ldd	r9, Z+5	; 0x05
    1c9a:	79 8e       	std	Y+25, r7	; 0x19
    1c9c:	82 6d       	ori	r24, 0xD2	; 210
    1c9e:	70 88       	ldd	r7, Z+16	; 0x10
    1ca0:	94 b7       	in	r25, 0x34	; 52
    1ca2:	6a 2d       	mov	r22, r10
    1ca4:	8d b3       	in	r24, 0x1d	; 29
    1ca6:	83 5b       	subi	r24, 0xB3	; 179
    1ca8:	81 99       	sbic	0x10, 1	; 16
    1caa:	99 82       	std	Y+1, r9	; 0x01
    1cac:	7b 92       	.word	0x927b	; ????
    1cae:	84 70       	andi	r24, 0x04	; 4
    1cb0:	74 8a       	std	Z+20, r7	; 0x14
    1cb2:	98 ba       	out	0x18, r9	; 24
    1cb4:	6e 30       	cpi	r22, 0x0E	; 14
    1cb6:	8b b5       	in	r24, 0x2b	; 43
    1cb8:	86 5f       	subi	r24, 0xF6	; 246
    1cba:	7f 9a       	sbi	0x0f, 7	; 15
    1cbc:	9c 89       	ldd	r25, Y+20	; 0x14
    1cbe:	80 94       	com	r8
    1cc0:	89 75       	andi	r24, 0x59	; 89
    1cc2:	73 88       	ldd	r7, Z+19	; 0x13
    1cc4:	96 b3       	in	r25, 0x16	; 22
    1cc6:	70 2b       	or	r23, r16
    1cc8:	87 b2       	in	r8, 0x17	; 23
    1cca:	88 63       	ori	r24, 0x38	; 56
    1ccc:	7f 9a       	sbi	0x0f, 7	; 15
    1cce:	97 88       	ldd	r9, Z+23	; 0x17
    1cd0:	78 8d       	ldd	r23, Y+24	; 0x18
    1cd2:	84 70       	andi	r24, 0x04	; 4
    1cd4:	6b 85       	ldd	r22, Y+11	; 0x0b
    1cd6:	93 af       	std	Z+59, r25	; 0x3b
    1cd8:	72 29       	or	r23, r2
    1cda:	82 ad       	ldd	r24, Z+58	; 0x3a
    1cdc:	87 5f       	subi	r24, 0xF7	; 247
    1cde:	7b 97       	sbiw	r30, 0x1b	; 27
    1ce0:	95 87       	std	Z+13, r25	; 0x0d
    1ce2:	76 8b       	std	Z+22, r23	; 0x16
    1ce4:	83 6f       	ori	r24, 0xF3	; 243
    1ce6:	69 82       	std	Y+1, r6	; 0x01
    1ce8:	8f ad       	ldd	r24, Y+63	; 0x3f
    1cea:	77 28       	or	r7, r7
    1cec:	7b ab       	std	Y+51, r23	; 0x33
    1cee:	83 5d       	subi	r24, 0xD3	; 211
    1cf0:	75 93       	las	Z, r23
    1cf2:	94 84       	ldd	r9, Z+12	; 0x0c
    1cf4:	77 8a       	std	Z+23, r7	; 0x17
    1cf6:	82 6f       	ori	r24, 0xF2	; 242
    1cf8:	6b 81       	ldd	r22, Y+3	; 0x03
    1cfa:	8e ae       	std	Y+62, r8	; 0x3e
    1cfc:	7a 27       	eor	r23, r26
    1cfe:	77 ab       	std	Z+55, r23	; 0x37
    1d00:	82 59       	subi	r24, 0x92	; 146
    1d02:	71 93       	st	Z+, r23
    1d04:	94 85       	ldd	r25, Z+12	; 0x0c
    1d06:	74 8a       	std	Z+20, r7	; 0x14
    1d08:	83 6f       	ori	r24, 0xF3	; 243
    1d0a:	6a 7b       	andi	r22, 0xBA	; 186
    1d0c:	8b ac       	ldd	r8, Y+59	; 0x3b
    1d0e:	76 22       	and	r7, r22
    1d10:	6e aa       	std	Y+54, r6	; 0x36
    1d12:	86 58       	subi	r24, 0x86	; 134
    1d14:	6f 8f       	std	Y+31, r22	; 0x1f
    1d16:	92 83       	std	Z+2, r25	; 0x02
    1d18:	6b 80       	ldd	r6, Y+3	; 0x03
    1d1a:	80 6c       	ori	r24, 0xC0	; 192
    1d1c:	66 78       	andi	r22, 0x86	; 134
    1d1e:	8b af       	std	Y+59, r24	; 0x3b
    1d20:	7f 26       	eor	r7, r31
    1d22:	6d ac       	ldd	r6, Y+61	; 0x3d
    1d24:	89 5a       	subi	r24, 0xA9	; 169
    1d26:	6b 8c       	ldd	r6, Y+27	; 0x1b
    1d28:	92 89       	ldd	r25, Z+18	; 0x12
    1d2a:	71 84       	ldd	r7, Z+9	; 0x09
    1d2c:	88 76       	andi	r24, 0x68	; 104
    1d2e:	6c 79       	andi	r22, 0x9C	; 156
    1d30:	8b b1       	in	r24, 0x0b	; 11
    1d32:	86 26       	eor	r8, r22
    1d34:	6b b0       	in	r6, 0x0b	; 11
    1d36:	92 62       	ori	r25, 0x22	; 34
    1d38:	70 94       	com	r7
    1d3a:	98 92       	.word	0x9298	; ????
    1d3c:	79 87       	std	Y+9, r23	; 0x09
    1d3e:	8c 7d       	andi	r24, 0xDC	; 220
    1d40:	73 7d       	andi	r23, 0xD3	; 211
    1d42:	90 b4       	in	r9, 0x20	; 32
    1d44:	95 2f       	mov	r25, r21
    1d46:	66 b3       	in	r22, 0x16	; 22
    1d48:	98 67       	ori	r25, 0x78	; 120
    1d4a:	6d 92       	st	X+, r6
    1d4c:	9a 94       	dec	r9
    1d4e:	7a 84       	ldd	r7, Y+10	; 0x0a
    1d50:	8a 79       	andi	r24, 0x9A	; 154
    1d52:	70 7d       	andi	r23, 0xD0	; 208
    1d54:	8d af       	std	Y+61, r24	; 0x3d
    1d56:	9e 37       	cpi	r25, 0x7E	; 126
    1d58:	5c ae       	std	Y+60, r5	; 0x3c
    1d5a:	9c 6a       	ori	r25, 0xAC	; 172
    1d5c:	68 8f       	std	Y+24, r22	; 0x18
    1d5e:	98 98       	cbi	0x13, 0	; 19
    1d60:	7e 87       	std	Y+14, r23	; 0x0e
    1d62:	8b 79       	andi	r24, 0x9B	; 155
    1d64:	74 79       	andi	r23, 0x94	; 148
    1d66:	87 a5       	ldd	r24, Z+47	; 0x2f
    1d68:	a1 35       	cpi	r26, 0x51	; 81
    1d6a:	49 a5       	ldd	r20, Y+41	; 0x29
    1d6c:	9b 67       	ori	r25, 0x7B	; 123
    1d6e:	60 89       	ldd	r22, Z+16	; 0x10
    1d70:	90 92 7b 7f 	sts	0x7F7B, r9	; 0x807f7b <__bss_end+0x7d1a>
    1d74:	84 76       	andi	r24, 0x64	; 100
    1d76:	71 74       	andi	r23, 0x41	; 65
    1d78:	84 a4       	ldd	r8, Z+44	; 0x2c
    1d7a:	ab 3e       	cpi	r26, 0xEB	; 235
    1d7c:	41 a6       	std	Z+41, r4	; 0x29
    1d7e:	a5 6e       	ori	r26, 0xE5	; 229
    1d80:	60 8a       	std	Z+16, r6	; 0x10
    1d82:	97 95       	ror	r25
    1d84:	7d 7d       	andi	r23, 0xDD	; 221
    1d86:	87 78       	andi	r24, 0x87	; 135
    1d88:	71 70       	andi	r23, 0x01	; 1
    1d8a:	80 9f       	mul	r24, r16
    1d8c:	b0 4b       	sbci	r27, 0xB0	; 176
    1d8e:	31 9b       	sbis	0x06, 1	; 6
    1d90:	aa 74       	andi	r26, 0x4A	; 74
    1d92:	5a 82       	std	Y+2, r5	; 0x02
    1d94:	99 98       	cbi	0x13, 1	; 19
    1d96:	85 83       	std	Z+5, r24	; 0x05
    1d98:	8b 7d       	andi	r24, 0xDB	; 219
    1d9a:	77 72       	andi	r23, 0x27	; 39
    1d9c:	80 98       	cbi	0x10, 0	; 16
    1d9e:	b6 62       	ori	r27, 0x26	; 38
    1da0:	30 90 b1 84 	lds	r3, 0x84B1	; 0x8084b1 <__bss_end+0x8250>
    1da4:	62 7e       	andi	r22, 0xE2	; 226
    1da6:	93 97       	sbiw	r26, 0x23	; 35
    1da8:	88 7f       	andi	r24, 0xF8	; 248
    1daa:	83 7b       	andi	r24, 0xB3	; 179
    1dac:	7c 70       	andi	r23, 0x0C	; 12
    1dae:	7f 92       	push	r7
    1db0:	b3 77       	andi	r27, 0x73	; 115
    1db2:	2c 7c       	andi	r18, 0xCC	; 204
    1db4:	a9 8b       	std	Y+17, r26	; 0x11
    1db6:	64 71       	andi	r22, 0x14	; 20
    1db8:	91 98       	cbi	0x12, 1	; 18
    1dba:	8d 7e       	andi	r24, 0xED	; 237
    1dbc:	83 7b       	andi	r24, 0xB3	; 179
    1dbe:	7c 70       	andi	r23, 0x0C	; 12
    1dc0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1dc2:	ab 8a       	std	Y+19, r10	; 0x13
    1dc4:	2f 6a       	ori	r18, 0xAF	; 175
    1dc6:	ac 93       	st	X, r26
    1dc8:	65 66       	ori	r22, 0x65	; 101
    1dca:	8d 96       	adiw	r24, 0x2d	; 45
    1dcc:	8b 7b       	andi	r24, 0xBB	; 187
    1dce:	80 79       	andi	r24, 0x90	; 144
    1dd0:	7a 70       	andi	r23, 0x0A	; 10
    1dd2:	74 88       	ldd	r7, Z+20	; 0x14
    1dd4:	a5 95       	asr	r26
    1dd6:	36 58       	subi	r19, 0x86	; 134
    1dd8:	a6 97       	sbiw	r28, 0x26	; 38
    1dda:	68 5f       	subi	r22, 0xF8	; 248
    1ddc:	85 94       	asr	r8
    1dde:	8a 78       	andi	r24, 0x8A	; 138
    1de0:	79 76       	andi	r23, 0x69	; 105
    1de2:	77 6e       	ori	r23, 0xE7	; 231
    1de4:	70 82       	st	Z, r7
    1de6:	99 98       	cbi	0x13, 1	; 19
    1de8:	3b 49       	sbci	r19, 0x9B	; 155
    1dea:	9a 99       	sbic	0x13, 2	; 19
    1dec:	6b 59       	subi	r22, 0x9B	; 155
    1dee:	7d 8f       	std	Y+29, r23	; 0x1d
    1df0:	8d 79       	andi	r24, 0x9D	; 157
    1df2:	7a 76       	andi	r23, 0x6A	; 106
    1df4:	78 73       	andi	r23, 0x38	; 56
    1df6:	6f 7d       	andi	r22, 0xDF	; 223
    1df8:	98 a1       	ldd	r25, Y+32	; 0x20
    1dfa:	44 3f       	cpi	r20, 0xF4	; 244
    1dfc:	98 a1       	ldd	r25, Y+32	; 0x20
    1dfe:	74 60       	ori	r23, 0x04	; 4
    1e00:	80 96       	adiw	r24, 0x20	; 32
    1e02:	95 82       	std	Z+5, r9	; 0x05
    1e04:	7d 79       	andi	r23, 0x9D	; 157
    1e06:	7c 7b       	andi	r23, 0xBC	; 188
    1e08:	73 84       	ldd	r7, Z+11	; 0x0b
    1e0a:	9d b3       	in	r25, 0x1d	; 29
    1e0c:	5a 41       	sbci	r21, 0x1A	; 26
    1e0e:	99 ab       	std	Y+49, r25	; 0x31
    1e10:	84 65       	ori	r24, 0x54	; 84
    1e12:	82 99       	sbic	0x10, 2	; 16
    1e14:	9b 8d       	ldd	r25, Y+27	; 0x1b
    1e16:	84 7f       	andi	r24, 0xF4	; 244
    1e18:	81 86       	std	Z+9, r8	; 0x09
    1e1a:	79 83       	std	Y+1, r23	; 0x01
    1e1c:	9b b7       	in	r25, 0x3b	; 59
    1e1e:	6d 3d       	cpi	r22, 0xDD	; 221
    1e20:	90 af       	std	Z+56, r25	; 0x38
    1e22:	8e 6a       	ori	r24, 0xAE	; 174
    1e24:	7b 97       	sbiw	r30, 0x1b	; 27
    1e26:	98 90       	.word	0x9098	; ????
    1e28:	87 7e       	andi	r24, 0xE7	; 231
    1e2a:	7b 86       	std	Y+11, r7	; 0x0b
    1e2c:	7c 7d       	andi	r23, 0xDC	; 220
    1e2e:	92 b6       	in	r9, 0x32	; 50
    1e30:	77 31       	cpi	r23, 0x17	; 23
    1e32:	79 a7       	std	Y+41, r23	; 0x29
    1e34:	8c 63       	ori	r24, 0x3C	; 60
    1e36:	70 8d       	ldd	r23, Z+24	; 0x18
    1e38:	94 8c       	ldd	r9, Z+28	; 0x1c
    1e3a:	81 7d       	andi	r24, 0xD1	; 209
    1e3c:	73 7e       	andi	r23, 0xE3	; 227
    1e3e:	79 78       	andi	r23, 0x89	; 137
    1e40:	85 b0       	in	r8, 0x05	; 5
    1e42:	88 2e       	mov	r8, r24
    1e44:	67 a4       	ldd	r6, Z+47	; 0x2f
    1e46:	92 65       	ori	r25, 0x52	; 82
    1e48:	66 88       	ldd	r6, Z+22	; 0x16
    1e4a:	91 8c       	ldd	r9, Z+25	; 0x19
    1e4c:	7d 78       	andi	r23, 0x8D	; 141
    1e4e:	72 77       	andi	r23, 0x72	; 114
    1e50:	76 73       	andi	r23, 0x36	; 54
    1e52:	80 ac       	ldd	r8, Z+56	; 0x38
    1e54:	9a 38       	cpi	r25, 0x8A	; 138
    1e56:	56 a4       	ldd	r5, Z+46	; 0x2e
    1e58:	9e 6d       	ori	r25, 0xDE	; 222
    1e5a:	5f 82       	std	Y+7, r5	; 0x07
    1e5c:	92 8f       	std	Z+26, r25	; 0x1a
    1e5e:	80 7a       	andi	r24, 0xA0	; 160
    1e60:	75 7a       	andi	r23, 0xA5	; 165
    1e62:	77 6f       	ori	r23, 0xF7	; 247
    1e64:	7a a2       	std	Y+34, r7	; 0x22
    1e66:	a1 3d       	cpi	r26, 0xD1	; 209
    1e68:	46 9b       	sbis	0x08, 6	; 8
    1e6a:	a2 76       	andi	r26, 0x62	; 98
    1e6c:	5e 7c       	andi	r21, 0xCE	; 206
    1e6e:	90 90 81 7a 	lds	r9, 0x7A81	; 0x807a81 <__bss_end+0x7820>
    1e72:	76 79       	andi	r23, 0x96	; 150
    1e74:	7b 73       	andi	r23, 0x3B	; 59
    1e76:	7a 9f       	mul	r23, r26
    1e78:	ab 4f       	sbci	r26, 0xFB	; 251
    1e7a:	3e 94 a4 78 	call	0xcf148	; 0xcf148 <__TEXT_REGION_LENGTH__+0xaf148>
    1e7e:	5e 78       	andi	r21, 0x8E	; 142
    1e80:	91 93       	st	Z+, r25
    1e82:	85 7f       	andi	r24, 0xF5	; 245
    1e84:	79 77       	andi	r23, 0x79	; 121
    1e86:	7a 77       	andi	r23, 0x7A	; 122
    1e88:	78 96       	adiw	r30, 0x18	; 24
    1e8a:	ad 5a       	subi	r26, 0xAD	; 173
    1e8c:	3a 89       	ldd	r19, Y+18	; 0x12
    1e8e:	a6 80       	ldd	r10, Z+6	; 0x06
    1e90:	63 78       	andi	r22, 0x83	; 131
    1e92:	91 97       	sbiw	r26, 0x21	; 33
    1e94:	8b 81       	ldd	r24, Y+3	; 0x03
    1e96:	7e 7a       	andi	r23, 0xAE	; 174
    1e98:	82 7b       	andi	r24, 0xB2	; 178
    1e9a:	75 95       	asr	r23
    1e9c:	ae 6a       	ori	r26, 0xAE	; 174
    1e9e:	39 80       	ldd	r3, Y+1	; 0x01
    1ea0:	a6 8b       	std	Z+22, r26	; 0x16
    1ea2:	6b 74       	andi	r22, 0x4B	; 75
    1ea4:	8f 99       	sbic	0x11, 7	; 17
    1ea6:	90 82       	st	Z, r9
    1ea8:	7f 7a       	andi	r23, 0xAF	; 175
    1eaa:	85 81       	ldd	r24, Z+5	; 0x05
    1eac:	7c 91       	ld	r23, X
    1eae:	b7 83       	std	Z+7, r27	; 0x07
    1eb0:	3f 79       	andi	r19, 0x9F	; 159
    1eb2:	aa 95       	dec	r26
    1eb4:	6e 73       	andi	r22, 0x3E	; 62
    1eb6:	8c 96       	adiw	r24, 0x2c	; 44
    1eb8:	91 85       	ldd	r25, Z+9	; 0x09
    1eba:	81 78       	andi	r24, 0x81	; 129
    1ebc:	82 83       	std	Z+2, r24	; 0x02
    1ebe:	79 81       	ldd	r23, Y+1	; 0x01
    1ec0:	b0 91 38 68 	lds	r27, 0x6838	; 0x806838 <__bss_end+0x65d7>
    1ec4:	a7 97       	sbiw	r28, 0x27	; 39
    1ec6:	6f 6d       	ori	r22, 0xDF	; 223
    1ec8:	89 92       	st	Y+, r8
    1eca:	92 87       	std	Z+10, r25	; 0x0a
    1ecc:	7e 76       	andi	r23, 0x6E	; 110
    1ece:	7c 7e       	andi	r23, 0xEC	; 236
    1ed0:	76 7e       	andi	r23, 0xE6	; 230
    1ed2:	aa 9a       	sbi	0x15, 2	; 21
    1ed4:	3f 59       	subi	r19, 0x9F	; 159
    1ed6:	a0 9a       	sbi	0x14, 0	; 20
    1ed8:	73 66       	ori	r23, 0x63	; 99
    1eda:	81 8f       	std	Z+25, r24	; 0x19
    1edc:	8e 84       	ldd	r8, Y+14	; 0x0e
    1ede:	7e 76       	andi	r23, 0x6E	; 110
    1ee0:	7b 7f       	andi	r23, 0xFB	; 251
    1ee2:	76 7d       	andi	r23, 0xD6	; 214
    1ee4:	9e a3       	std	Y+38, r25	; 0x26
    1ee6:	49 4b       	sbci	r20, 0xB9	; 185
    1ee8:	98 9c       	mul	r9, r8
    1eea:	78 61       	ori	r23, 0x18	; 24
    1eec:	7e 90       	ld	r7, -X
    1eee:	8f 87       	std	Y+15, r24	; 0x0f
    1ef0:	7f 77       	andi	r23, 0x7F	; 127
    1ef2:	77 82       	std	Z+7, r7	; 0x07
    1ef4:	7a 7a       	andi	r23, 0xAA	; 170
    1ef6:	98 a8       	ldd	r9, Y+48	; 0x30
    1ef8:	55 3f       	cpi	r21, 0xF5	; 245
    1efa:	8d 9b       	sbis	0x11, 5	; 17
    1efc:	79 60       	ori	r23, 0x09	; 9
    1efe:	78 8c       	ldd	r7, Y+24	; 0x18
    1f00:	90 88       	ldd	r9, Z+16	; 0x10
    1f02:	80 78       	andi	r24, 0x80	; 128
    1f04:	72 7f       	andi	r23, 0xF2	; 242
    1f06:	71 71       	andi	r23, 0x11	; 17
    1f08:	8b a3       	std	Y+35, r24	; 0x23
    1f0a:	5f 34       	cpi	r21, 0x4F	; 79
    1f0c:	84 9c       	mul	r8, r4
    1f0e:	7c 61       	ori	r23, 0x1C	; 28
    1f10:	6f 8b       	std	Y+23, r22	; 0x17
    1f12:	8a 85       	ldd	r24, Y+10	; 0x0a
    1f14:	7c 72       	andi	r23, 0x2C	; 44
    1f16:	6f 77       	andi	r22, 0x7F	; 127
    1f18:	76 74       	andi	r23, 0x46	; 70
    1f1a:	89 a8       	ldd	r8, Y+49	; 0x31
    1f1c:	6e 37       	cpi	r22, 0x7E	; 126
    1f1e:	7b a4       	ldd	r7, Y+43	; 0x2b
    1f20:	84 64       	ori	r24, 0x44	; 68
    1f22:	72 88       	ldd	r7, Z+18	; 0x12
    1f24:	8b 89       	ldd	r24, Y+19	; 0x13
    1f26:	83 7b       	andi	r24, 0xB3	; 179
    1f28:	73 7e       	andi	r23, 0xE3	; 227
    1f2a:	7e 79       	andi	r23, 0x9E	; 158
    1f2c:	88 aa       	std	Y+48, r8	; 0x30
    1f2e:	80 38       	cpi	r24, 0x80	; 128
    1f30:	72 a7       	std	Z+42, r23	; 0x2a
    1f32:	8e 72       	andi	r24, 0x2E	; 46
    1f34:	79 90       	ld	r7, Y+
    1f36:	94 93       	xch	Z, r25
    1f38:	8b 82       	std	Y+3, r8	; 0x03
    1f3a:	7b 7f       	andi	r23, 0xFB	; 251
    1f3c:	85 80       	ldd	r8, Z+5	; 0x05
    1f3e:	89 b1       	in	r24, 0x09	; 9
    1f40:	8a 42       	sbci	r24, 0x2A	; 42
    1f42:	70 a5       	ldd	r23, Z+40	; 0x28
    1f44:	95 72       	andi	r25, 0x25	; 37
    1f46:	75 8b       	std	Z+21, r23	; 0x15
    1f48:	90 95       	com	r25
    1f4a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f4c:	78 79       	andi	r23, 0x98	; 152
    1f4e:	81 7b       	andi	r24, 0xB1	; 177
    1f50:	83 a8       	ldd	r8, Z+51	; 0x33
    1f52:	8f 3f       	cpi	r24, 0xFF	; 255
    1f54:	63 a0       	ldd	r6, Z+35	; 0x23
    1f56:	92 6f       	ori	r25, 0xF2	; 242
    1f58:	6e 86       	std	Y+14, r6	; 0x0e
    1f5a:	8b 90       	.word	0x908b	; ????
    1f5c:	8a 82       	std	Y+2, r8	; 0x02
    1f5e:	75 76       	andi	r23, 0x65	; 101
    1f60:	80 7b       	andi	r24, 0xB0	; 176
    1f62:	7d 9e       	mul	r7, r29
    1f64:	95 41       	sbci	r25, 0x15	; 21
    1f66:	56 9c       	mul	r5, r6
    1f68:	96 75       	andi	r25, 0x56	; 86
    1f6a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1f6c:	8c 8f       	std	Y+28, r24	; 0x1c
    1f6e:	8c 88       	ldd	r8, Y+20	; 0x14
    1f70:	7b 74       	andi	r23, 0x4B	; 75
    1f72:	81 7d       	andi	r24, 0xD1	; 209
    1f74:	81 a0       	ldd	r8, Z+33	; 0x21
    1f76:	a5 56       	subi	r26, 0x65	; 101
    1f78:	54 9c       	mul	r5, r4
    1f7a:	a0 7f       	andi	r26, 0xF0	; 240
    1f7c:	6b 83       	std	Y+3, r22	; 0x03
    1f7e:	91 92       	st	Z+, r9
    1f80:	8e 88       	ldd	r8, Y+22	; 0x16
    1f82:	7b 74       	andi	r23, 0x4B	; 75
    1f84:	7d 7c       	andi	r23, 0xCD	; 205
    1f86:	82 98       	cbi	0x10, 2	; 16
    1f88:	a6 5d       	subi	r26, 0xD6	; 214
    1f8a:	47 92       	lat	Z, r4
    1f8c:	9f 84       	ldd	r9, Y+15	; 0x0f
    1f8e:	6a 7d       	andi	r22, 0xDA	; 218
    1f90:	8e 8e       	std	Y+30, r8	; 0x1e
    1f92:	91 86       	std	Z+9, r9	; 0x09
    1f94:	7c 73       	andi	r23, 0x3C	; 60
    1f96:	79 78       	andi	r23, 0x89	; 137
    1f98:	7d 92       	st	X+, r7
    1f9a:	a9 69       	ori	r26, 0x99	; 153
    1f9c:	3c 83       	std	Y+4, r19	; 0x04
    1f9e:	9c 81       	ldd	r25, Y+4	; 0x04
    1fa0:	68 73       	andi	r22, 0x38	; 56
    1fa2:	87 84       	ldd	r8, Z+15	; 0x0f
    1fa4:	87 83       	std	Z+7, r24	; 0x07
    1fa6:	7a 71       	andi	r23, 0x1A	; 26
    1fa8:	73 75       	andi	r23, 0x53	; 83
    1faa:	78 89       	ldd	r23, Y+16	; 0x10
    1fac:	a3 73       	andi	r26, 0x33	; 51
    1fae:	38 74       	andi	r19, 0x48	; 72
    1fb0:	9b 85       	ldd	r25, Y+11	; 0x0b
    1fb2:	68 6d       	ori	r22, 0xD8	; 216
    1fb4:	85 85       	ldd	r24, Z+13	; 0x0d
    1fb6:	8a 86       	std	Y+10, r8	; 0x0a
    1fb8:	7d 72       	andi	r23, 0x2D	; 45
    1fba:	73 77       	andi	r23, 0x73	; 115
    1fbc:	7a 88       	ldd	r7, Y+18	; 0x12
    1fbe:	a3 84       	ldd	r10, Z+11	; 0x0b
    1fc0:	3c 68       	ori	r19, 0x8C	; 140
    1fc2:	9b 8f       	std	Y+27, r25	; 0x1b
    1fc4:	73 6c       	ori	r23, 0xC3	; 195
    1fc6:	85 89       	ldd	r24, Z+21	; 0x15
    1fc8:	8d 87       	std	Y+13, r24	; 0x0d
    1fca:	7e 74       	andi	r23, 0x4E	; 78
    1fcc:	73 74       	andi	r23, 0x43	; 67
    1fce:	72 7f       	andi	r23, 0xF2	; 242
    1fd0:	9c 8c       	ldd	r9, Y+28	; 0x1c
    1fd2:	3f 57       	subi	r19, 0x7F	; 127
    1fd4:	92 91       	ld	r25, -Z
    1fd6:	77 68       	ori	r23, 0x87	; 135
    1fd8:	81 89       	ldd	r24, Z+17	; 0x11
    1fda:	8e 8c       	ldd	r8, Y+30	; 0x1e
    1fdc:	81 74       	andi	r24, 0x41	; 65
    1fde:	71 75       	andi	r23, 0x51	; 81
    1fe0:	72 7f       	andi	r23, 0xF2	; 242
    1fe2:	99 9e       	mul	r9, r25
    1fe4:	54 51       	subi	r21, 0x14	; 20
    1fe6:	92 96       	adiw	r26, 0x22	; 34
    1fe8:	81 6a       	ori	r24, 0xA1	; 161
    1fea:	7c 88       	ldd	r7, Y+20	; 0x14
    1fec:	8b 91       	.word	0x918b	; ????
    1fee:	84 78       	andi	r24, 0x84	; 132
    1ff0:	75 7b       	andi	r23, 0xB5	; 181
    1ff2:	79 7c       	andi	r23, 0xC9	; 201
    1ff4:	95 a6       	std	Z+45, r9	; 0x2d
    1ff6:	68 47       	sbci	r22, 0x78	; 120
    1ff8:	86 9e       	mul	r8, r22
    1ffa:	88 71       	andi	r24, 0x18	; 24
    1ffc:	79 8a       	std	Y+17, r7	; 0x11
    1ffe:	91 98       	cbi	0x12, 1	; 18
    2000:	8e 82       	std	Y+6, r8	; 0x06
    2002:	7f 83       	std	Y+7, r23	; 0x07
    2004:	7e 7f       	andi	r23, 0xFE	; 254
    2006:	93 af       	std	Z+59, r25	; 0x3b
    2008:	7d 48       	sbci	r23, 0x8D	; 141
    200a:	7d a0       	ldd	r7, Y+37	; 0x25
    200c:	95 7b       	andi	r25, 0xB5	; 181
    200e:	7e 90       	ld	r7, -X
    2010:	92 9c       	mul	r9, r2
    2012:	90 82       	st	Z, r9
    2014:	7f 84       	ldd	r7, Y+15	; 0x0f
    2016:	80 80       	ld	r8, Z
    2018:	8f ad       	ldd	r24, Y+63	; 0x3f
    201a:	94 4f       	sbci	r25, 0xF4	; 244
    201c:	72 9c       	mul	r7, r2
    201e:	94 7f       	andi	r25, 0xF4	; 244
    2020:	74 83       	std	Z+4, r23	; 0x04
    2022:	87 94       	ror	r8
    2024:	91 7d       	andi	r25, 0xD1	; 209
    2026:	79 80       	ldd	r7, Y+1	; 0x01
    2028:	7a 77       	andi	r23, 0x7A	; 122
    202a:	87 9e       	mul	r8, r23
    202c:	9d 56       	subi	r25, 0x6D	; 109
    202e:	54 8d       	ldd	r21, Z+28	; 0x1c
    2030:	91 82       	std	Z+1, r9	; 0x01
    2032:	70 7a       	andi	r23, 0xA0	; 160
    2034:	87 8c       	ldd	r8, Z+31	; 0x1f
    2036:	90 7c       	andi	r25, 0xC0	; 192
    2038:	74 7b       	andi	r23, 0xB4	; 180
    203a:	72 6d       	ori	r23, 0xD2	; 210
    203c:	78 8e       	std	Y+24, r7	; 0x18
    203e:	9c 6c       	ori	r25, 0xCC	; 204
    2040:	4b 7a       	andi	r20, 0xAB	; 171
    2042:	98 88       	ldd	r9, Y+16	; 0x10
    2044:	74 76       	andi	r23, 0x64	; 100
    2046:	83 87       	std	Z+11, r24	; 0x0b
    2048:	8f 85       	ldd	r24, Y+15	; 0x0f
    204a:	75 7b       	andi	r23, 0xB5	; 181
    204c:	78 71       	andi	r23, 0x18	; 24
    204e:	79 87       	std	Y+9, r23	; 0x09
    2050:	9e 85       	ldd	r25, Y+14	; 0x0e
    2052:	4d 5d       	subi	r20, 0xDD	; 221
    2054:	87 8c       	ldd	r8, Z+31	; 0x1f
    2056:	75 6c       	ori	r23, 0xC5	; 197
    2058:	7a 82       	std	Y+2, r7	; 0x02
    205a:	8f 8a       	std	Y+23, r8	; 0x17
    205c:	76 78       	andi	r23, 0x86	; 134
    205e:	7d 6e       	ori	r23, 0xED	; 237
    2060:	72 7f       	andi	r23, 0xF2	; 242
    2062:	92 9b       	sbis	0x12, 2	; 18
    2064:	5e 4f       	sbci	r21, 0xFE	; 254
    2066:	7f 90       	pop	r7
    2068:	84 69       	ori	r24, 0x94	; 148
    206a:	72 7f       	andi	r23, 0xF2	; 242
    206c:	85 8c       	ldd	r8, Z+29	; 0x1d
    206e:	78 77       	andi	r23, 0x78	; 120
    2070:	81 6f       	ori	r24, 0xF1	; 241
    2072:	6d 7d       	andi	r22, 0xDD	; 221
    2074:	89 9f       	mul	r24, r25
    2076:	7f 4b       	sbci	r23, 0xBF	; 191
    2078:	6a 91       	ld	r22, -Y
    207a:	8c 76       	andi	r24, 0x6C	; 108
    207c:	6e 7f       	andi	r22, 0xFE	; 254
    207e:	87 8f       	std	Z+31, r24	; 0x1f
    2080:	86 79       	andi	r24, 0x96	; 150
    2082:	8a 7d       	andi	r24, 0xDA	; 218
    2084:	6d 7e       	andi	r22, 0xED	; 237
    2086:	86 9b       	sbis	0x10, 6	; 16
    2088:	9c 64       	ori	r25, 0x4C	; 76
    208a:	59 8a       	std	Y+17, r5	; 0x11
    208c:	99 85       	ldd	r25, Y+9	; 0x09
    208e:	74 7e       	andi	r23, 0xE4	; 228
    2090:	87 8d       	ldd	r24, Z+31	; 0x1f
    2092:	8f 7c       	andi	r24, 0xCF	; 207
    2094:	8a 88       	ldd	r8, Y+18	; 0x12
    2096:	6d 76       	andi	r22, 0x6D	; 109
    2098:	84 8c       	ldd	r8, Z+28	; 0x1c
    209a:	a1 85       	ldd	r26, Z+9	; 0x09
    209c:	57 75       	andi	r21, 0x57	; 87
    209e:	98 95       	break
    20a0:	81 7c       	andi	r24, 0xC1	; 193
    20a2:	8a 8a       	std	Y+18, r8	; 0x12
    20a4:	8f 87       	std	Y+15, r24	; 0x0f
    20a6:	89 94       	.word	0x9489	; ????
    20a8:	7a 6e       	ori	r23, 0xEA	; 234
    20aa:	82 87       	std	Z+10, r24	; 0x0a
    20ac:	96 9d       	mul	r25, r6
    20ae:	63 59       	subi	r22, 0x93	; 147
    20b0:	83 8f       	std	Z+27, r24	; 0x1b
    20b2:	83 72       	andi	r24, 0x23	; 35
    20b4:	7e 85       	ldd	r23, Y+14	; 0x0e
    20b6:	84 85       	ldd	r24, Z+12	; 0x0c
    20b8:	86 94       	lsr	r8
    20ba:	82 67       	ori	r24, 0x72	; 114
    20bc:	6e 81       	ldd	r22, Y+6	; 0x06
    20be:	88 9a       	sbi	0x11, 0	; 17
    20c0:	81 52       	subi	r24, 0x21	; 33
    20c2:	70 8e       	std	Z+24, r7	; 0x18
    20c4:	89 7a       	andi	r24, 0xA9	; 169
    20c6:	79 83       	std	Y+1, r23	; 0x01
    20c8:	7e 80       	ldd	r7, Y+6	; 0x06
    20ca:	88 91       	.word	0x9188	; ????
    20cc:	8a 70       	andi	r24, 0x0A	; 10
    20ce:	65 79       	andi	r22, 0x95	; 149
    20d0:	85 8f       	std	Z+29, r24	; 0x1d
    20d2:	96 69       	ori	r25, 0x96	; 150
    20d4:	59 83       	std	Y+1, r21	; 0x01
    20d6:	91 84       	ldd	r9, Z+9	; 0x09
    20d8:	7c 80       	ldd	r7, Y+4	; 0x04
    20da:	85 80       	ldd	r8, Z+5	; 0x05
    20dc:	88 96       	adiw	r24, 0x28	; 40
    20de:	91 80       	ldd	r9, Z+1	; 0x01
    20e0:	69 6f       	ori	r22, 0xF9	; 249
    20e2:	86 8b       	std	Z+22, r24	; 0x16
    20e4:	9a 8c       	ldd	r9, Y+26	; 0x1a
    20e6:	60 6c       	ori	r22, 0xC0	; 192
    20e8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    20ea:	7e 7b       	andi	r23, 0xBE	; 190
    20ec:	80 7a       	andi	r24, 0xA0	; 160
    20ee:	7b 93       	.word	0x937b	; ????
    20f0:	97 88       	ldd	r9, Z+23	; 0x17
    20f2:	75 69       	ori	r23, 0x95	; 149
    20f4:	7d 8a       	std	Y+21, r7	; 0x15
    20f6:	8e 98       	cbi	0x11, 6	; 17
    20f8:	7c 5f       	subi	r23, 0xFC	; 252
    20fa:	77 8c       	ldd	r7, Z+31	; 0x1f
    20fc:	86 7e       	andi	r24, 0xE6	; 230
    20fe:	7f 7d       	andi	r23, 0xDF	; 223
    2100:	74 86       	std	Z+12, r7	; 0x0c
    2102:	99 8e       	std	Y+25, r9	; 0x19
    2104:	7c 68       	ori	r23, 0x8C	; 140
    2106:	68 7e       	andi	r22, 0xE8	; 232
    2108:	84 86       	std	Z+12, r8	; 0x0c
    210a:	91 6f       	ori	r25, 0xF1	; 241
    210c:	5e 80       	ldd	r5, Y+6	; 0x06
    210e:	8a 81       	ldd	r24, Y+2	; 0x02
    2110:	7b 7a       	andi	r23, 0xAB	; 171
    2112:	73 74       	andi	r23, 0x43	; 67
    2114:	8e 96       	adiw	r24, 0x2e	; 46
    2116:	85 75       	andi	r24, 0x55	; 85
    2118:	67 71       	andi	r22, 0x17	; 23
    211a:	83 81       	ldd	r24, Z+3	; 0x03
    211c:	90 8a       	std	Z+16, r9	; 0x10
    211e:	60 6e       	ori	r22, 0xE0	; 224
    2120:	8c 88       	ldd	r8, Y+20	; 0x14
    2122:	84 81       	ldd	r24, Z+4	; 0x04
    2124:	7c 77       	andi	r23, 0x7C	; 124
    2126:	83 9a       	sbi	0x10, 3	; 16
    2128:	93 80       	ldd	r9, Z+3	; 0x03
    212a:	71 69       	ori	r23, 0x91	; 145
    212c:	7d 87       	std	Y+13, r23	; 0x0d
    212e:	85 95       	asr	r24
    2130:	79 5f       	subi	r23, 0xF9	; 249
    2132:	7b 87       	std	Y+11, r23	; 0x0b
    2134:	83 7d       	andi	r24, 0xD3	; 211
    2136:	77 75       	andi	r23, 0x57	; 87
    2138:	71 84       	ldd	r7, Z+9	; 0x09
    213a:	94 82       	std	Z+4, r9	; 0x04
    213c:	6e 64       	ori	r22, 0x4E	; 78
    213e:	6a 7f       	andi	r22, 0xFA	; 250
    2140:	7f 89       	ldd	r23, Y+23	; 0x17
    2142:	92 6a       	ori	r25, 0xA2	; 162
    2144:	66 87       	std	Z+14, r22	; 0x0e
    2146:	85 7d       	andi	r24, 0xD5	; 213
    2148:	7a 77       	andi	r23, 0x7A	; 122
    214a:	74 78       	andi	r23, 0x84	; 132
    214c:	94 95       	.word	0x9594	; ????
    214e:	7e 74       	andi	r23, 0x4E	; 78
    2150:	6a 76       	andi	r22, 0x6A	; 106
    2152:	8a 83       	std	Y+2, r24	; 0x02
    2154:	91 8a       	std	Z+17, r9	; 0x11
    2156:	64 73       	andi	r22, 0x34	; 52
    2158:	88 82       	st	Y, r8
    215a:	7f 7b       	andi	r23, 0xBF	; 191
    215c:	7a 78       	andi	r23, 0x8A	; 138
    215e:	84 9f       	mul	r24, r20
    2160:	91 7c       	andi	r25, 0xC1	; 193
    2162:	75 70       	andi	r23, 0x05	; 5
    2164:	84 88       	ldd	r8, Z+20	; 0x14
    2166:	87 9e       	mul	r8, r23
    2168:	80 66       	ori	r24, 0x60	; 96
    216a:	87 8d       	ldd	r24, Z+31	; 0x1f
    216c:	85 84       	ldd	r8, Z+13	; 0x0d
    216e:	82 7f       	andi	r24, 0xF2	; 242
    2170:	79 94       	.word	0x9479	; ????
    2172:	a0 88       	ldd	r10, Z+16	; 0x10
    2174:	7c 74       	andi	r23, 0x4C	; 76
    2176:	78 8a       	std	Y+16, r7	; 0x10
    2178:	84 8e       	std	Z+28, r8	; 0x1c
    217a:	98 71       	andi	r25, 0x18	; 24
    217c:	6c 87       	std	Y+12, r22	; 0x0c
    217e:	85 82       	std	Z+5, r8	; 0x05
    2180:	83 80       	ldd	r8, Z+3	; 0x03
    2182:	7a 80       	ldd	r7, Y+2	; 0x02
    2184:	9b 96       	adiw	r26, 0x2b	; 43
    2186:	7e 74       	andi	r23, 0x4E	; 78
    2188:	6c 7a       	andi	r22, 0xAC	; 172
    218a:	82 7d       	andi	r24, 0xD2	; 210
    218c:	94 8c       	ldd	r9, Z+28	; 0x1c
    218e:	65 73       	andi	r22, 0x35	; 53
    2190:	84 7e       	andi	r24, 0xE4	; 228
    2192:	80 7c       	andi	r24, 0xC0	; 192
    2194:	78 72       	andi	r23, 0x28	; 40
    2196:	82 99       	sbic	0x10, 2	; 16
    2198:	87 75       	andi	r24, 0x57	; 87
    219a:	72 6c       	ori	r23, 0xC2	; 194
    219c:	79 7c       	andi	r23, 0xC9	; 201
    219e:	81 97       	sbiw	r24, 0x21	; 33
    21a0:	7c 67       	ori	r23, 0x7C	; 124
    21a2:	7c 80       	ldd	r7, Y+4	; 0x04
    21a4:	81 80       	ldd	r8, Z+1	; 0x01
    21a6:	78 75       	andi	r23, 0x58	; 88
    21a8:	74 8d       	ldd	r23, Z+28	; 0x1c
    21aa:	98 81       	ld	r25, Y
    21ac:	7d 75       	andi	r23, 0x5D	; 93
    21ae:	72 80       	ldd	r7, Z+2	; 0x02
    21b0:	7f 8f       	std	Y+31, r23	; 0x1f
    21b2:	97 73       	andi	r25, 0x37	; 55
    21b4:	6c 7c       	andi	r22, 0xCC	; 204
    21b6:	80 83       	st	Z, r24
    21b8:	7f 7c       	andi	r23, 0xCF	; 207
    21ba:	77 81       	ldd	r23, Z+7	; 0x07
    21bc:	9b 93       	.word	0x939b	; ????
    21be:	81 7e       	andi	r24, 0xE1	; 225
    21c0:	6f 71       	andi	r22, 0x1F	; 31
    21c2:	7b 7d       	andi	r23, 0xDB	; 219
    21c4:	94 8f       	std	Z+28, r25	; 0x1c
    21c6:	6b 70       	andi	r22, 0x0B	; 11
    21c8:	81 85       	ldd	r24, Z+9	; 0x09
    21ca:	86 83       	std	Z+6, r24	; 0x06
    21cc:	7d 77       	andi	r23, 0x7D	; 125
    21ce:	88 9a       	sbi	0x11, 0	; 17
    21d0:	8b 81       	ldd	r24, Y+3	; 0x03
    21d2:	79 6a       	ori	r23, 0xA9	; 169
    21d4:	72 7d       	andi	r23, 0xD2	; 210
    21d6:	85 9b       	sbis	0x10, 5	; 16
    21d8:	8c 6b       	ori	r24, 0xBC	; 188
    21da:	72 84       	ldd	r7, Z+10	; 0x0a
    21dc:	87 83       	std	Z+7, r24	; 0x07
    21de:	80 78       	andi	r24, 0x80	; 128
    21e0:	74 8c       	ldd	r7, Z+28	; 0x1c
    21e2:	98 87       	std	Y+8, r25	; 0x08
    21e4:	7f 71       	andi	r23, 0x1F	; 31
    21e6:	67 75       	andi	r22, 0x57	; 87
    21e8:	7f 8c       	ldd	r7, Y+31	; 0x1f
    21ea:	9d 82       	std	Y+5, r9	; 0x05
    21ec:	68 79       	andi	r22, 0x98	; 152
    21ee:	86 85       	ldd	r24, Z+14	; 0x0e
    21f0:	83 7c       	andi	r24, 0xC3	; 195
    21f2:	72 77       	andi	r23, 0x72	; 114
    21f4:	92 95       	swap	r25
    21f6:	88 81       	ld	r24, Y
    21f8:	70 6c       	ori	r23, 0xC0	; 192
    21fa:	7d 83       	std	Y+5, r23	; 0x05
    21fc:	90 9b       	sbis	0x12, 0	; 18
    21fe:	79 67       	ori	r23, 0x79	; 121
    2200:	7e 86       	std	Y+14, r7	; 0x0e
    2202:	87 88       	ldd	r8, Z+23	; 0x17
    2204:	7d 74       	andi	r23, 0x4D	; 77
    2206:	7e 95 93 85 	call	0x5d0b26	; 0x5d0b26 <__TEXT_REGION_LENGTH__+0x5b0b26>
    220a:	7d 6f       	ori	r23, 0xFD	; 253
    220c:	6e 82       	std	Y+6, r6	; 0x06
    220e:	89 95       	.word	0x9589	; ????
    2210:	98 73       	andi	r25, 0x38	; 56
    2212:	69 80       	ldd	r6, Y+1	; 0x01
    2214:	84 86       	std	Z+12, r8	; 0x0c
    2216:	83 76       	andi	r24, 0x63	; 99
    2218:	70 80       	ld	r7, Z
    221a:	96 8e       	std	Z+30, r9	; 0x1e
    221c:	82 79       	andi	r24, 0x92	; 146
    221e:	69 6d       	ori	r22, 0xD9	; 217
    2220:	7f 84       	ldd	r7, Y+15	; 0x0f
    2222:	93 8d       	ldd	r25, Z+27	; 0x1b
    2224:	67 69       	ori	r22, 0x97	; 151
    2226:	7e 7f       	andi	r23, 0xFE	; 254
    2228:	84 80       	ldd	r8, Z+4	; 0x04
    222a:	71 70       	andi	r23, 0x01	; 1
    222c:	85 97       	sbiw	r24, 0x25	; 37
    222e:	8a 7f       	andi	r24, 0xFA	; 250
    2230:	76 67       	ori	r23, 0x76	; 118
    2232:	71 85       	ldd	r23, Z+9	; 0x09
    2234:	8a 99       	sbic	0x11, 2	; 17
    2236:	8c 69       	ori	r24, 0x9C	; 156
    2238:	73 84       	ldd	r7, Z+11	; 0x0b
    223a:	84 89       	ldd	r24, Z+20	; 0x14
    223c:	7e 70       	andi	r23, 0x0E	; 14
    223e:	75 89       	ldd	r23, Z+21	; 0x15
    2240:	94 84       	ldd	r9, Z+12	; 0x0c
    2242:	7a 6e       	ori	r23, 0xEA	; 234
    2244:	65 75       	andi	r22, 0x55	; 85
    2246:	85 8b       	std	Z+21, r24	; 0x15
    2248:	96 81       	ldd	r25, Z+6	; 0x06
    224a:	66 74       	andi	r22, 0x46	; 70
    224c:	80 82       	st	Z, r8
    224e:	85 78       	andi	r24, 0x85	; 133
    2250:	70 79       	andi	r23, 0x90	; 144
    2252:	8c 92       	st	X, r8
    2254:	85 7b       	andi	r24, 0xB5	; 181
    2256:	6e 68       	ori	r22, 0x8E	; 142
    2258:	76 83       	std	Z+6, r23	; 0x06
    225a:	8c 92       	st	X, r8
    225c:	7a 65       	ori	r23, 0x5A	; 90
    225e:	74 80       	ldd	r7, Z+4	; 0x04
    2260:	83 84       	ldd	r8, Z+11	; 0x0b
    2262:	77 71       	andi	r23, 0x17	; 23
    2264:	7c 91       	ld	r23, X
    2266:	91 83       	std	Z+1, r25	; 0x01
    2268:	7b 6a       	ori	r23, 0xAB	; 171
    226a:	68 7e       	andi	r22, 0xE8	; 232
    226c:	8a 8f       	std	Y+26, r24	; 0x1a
    226e:	93 77       	andi	r25, 0x73	; 115
    2270:	66 79       	andi	r22, 0x96	; 150
    2272:	83 88       	ldd	r8, Z+19	; 0x13
    2274:	87 78       	andi	r24, 0x87	; 135
    2276:	74 80       	ldd	r7, Z+4	; 0x04
    2278:	93 94       	inc	r9
    227a:	86 7d       	andi	r24, 0xD6	; 214
    227c:	6f 6f       	ori	r22, 0xFF	; 255
    227e:	85 8e       	std	Z+29, r8	; 0x1d
    2280:	93 95       	inc	r25
    2282:	7a 71       	andi	r23, 0x1A	; 26
    2284:	81 88       	ldd	r8, Z+17	; 0x11
    2286:	8e 89       	ldd	r24, Y+22	; 0x16
    2288:	7a 79       	andi	r23, 0x9A	; 154
    228a:	86 97       	sbiw	r24, 0x26	; 38
    228c:	92 84       	ldd	r9, Z+10	; 0x0a
    228e:	79 6d       	ori	r23, 0xD9	; 217
    2290:	74 88       	ldd	r7, Z+20	; 0x14
    2292:	91 94       	neg	r9
    2294:	90 79       	andi	r25, 0x90	; 144
    2296:	6b 79       	andi	r22, 0x9B	; 155
    2298:	85 87       	std	Z+13, r24	; 0x0d
    229a:	82 76       	andi	r24, 0x62	; 98
    229c:	75 89       	ldd	r23, Z+21	; 0x15
    229e:	99 91       	ld	r25, Y+
    22a0:	81 75       	andi	r24, 0x51	; 81
    22a2:	6d 72       	andi	r22, 0x2D	; 45
    22a4:	82 88       	ldd	r8, Z+18	; 0x12
    22a6:	8a 8d       	ldd	r24, Y+26	; 0x1a
    22a8:	7a 6d       	ori	r23, 0xDA	; 218
    22aa:	7d 88       	ldd	r7, Y+21	; 0x15
    22ac:	87 7e       	andi	r24, 0xE7	; 231
    22ae:	71 74       	andi	r23, 0x41	; 65
    22b0:	85 95       	asr	r24
    22b2:	8e 7f       	andi	r24, 0xFE	; 254
    22b4:	76 6f       	ori	r23, 0xF6	; 246
    22b6:	70 80       	ld	r7, Z
    22b8:	86 88       	ldd	r8, Z+22	; 0x16
    22ba:	8d 7c       	andi	r24, 0xCD	; 205
    22bc:	6c 7b       	andi	r22, 0xBC	; 188
    22be:	83 83       	std	Z+3, r24	; 0x03
    22c0:	7d 72       	andi	r23, 0x2D	; 45
    22c2:	78 88       	ldd	r7, Y+16	; 0x10
    22c4:	92 89       	ldd	r25, Z+18	; 0x12
    22c6:	7d 76       	andi	r23, 0x6D	; 109
    22c8:	71 72       	andi	r23, 0x21	; 33
    22ca:	82 8a       	std	Z+18, r8	; 0x12
    22cc:	8a 92       	st	-Y, r8
    22ce:	7e 6d       	ori	r23, 0xDE	; 222
    22d0:	7e 85       	ldd	r23, Y+14	; 0x0e
    22d2:	84 81       	ldd	r24, Z+4	; 0x04
    22d4:	75 7b       	andi	r23, 0xB5	; 181
    22d6:	8b 91       	.word	0x918b	; ????
    22d8:	8d 85       	ldd	r24, Y+13	; 0x0d
    22da:	7f 74       	andi	r23, 0x4F	; 79
    22dc:	70 80       	ld	r7, Z
    22de:	87 88       	ldd	r8, Z+23	; 0x17
    22e0:	92 83       	std	Z+2, r25	; 0x02
    22e2:	6e 76       	andi	r22, 0x6E	; 110
    22e4:	80 83       	st	Z, r24
    22e6:	7e 76       	andi	r23, 0x6E	; 110
    22e8:	7c 85       	ldd	r23, Y+12	; 0x0c
    22ea:	8c 88       	ldd	r8, Y+20	; 0x14
    22ec:	83 7c       	andi	r24, 0xC3	; 195
    22ee:	70 70       	andi	r23, 0x00	; 0
    22f0:	82 87       	std	Z+10, r24	; 0x0a
    22f2:	88 95       	sleep
    22f4:	89 71       	andi	r24, 0x19	; 25
    22f6:	70 7b       	andi	r23, 0xB0	; 176
    22f8:	80 7a       	andi	r24, 0xA0	; 160
    22fa:	74 79       	andi	r23, 0x94	; 148
    22fc:	80 87       	std	Z+8, r24	; 0x08
    22fe:	89 86       	std	Y+9, r8	; 0x09
    2300:	7c 6a       	ori	r23, 0xAC	; 172
    2302:	68 76       	andi	r22, 0x68	; 104
    2304:	7b 7d       	andi	r23, 0xDB	; 219
    2306:	8c 8b       	std	Y+20, r24	; 0x14
    2308:	72 6b       	ori	r23, 0xB2	; 178
    230a:	7b 82       	std	Y+3, r7	; 0x03
    230c:	7b 77       	andi	r23, 0x7B	; 123
    230e:	77 7a       	andi	r23, 0xA7	; 167
    2310:	7f 84       	ldd	r7, Y+15	; 0x0f
    2312:	87 7d       	andi	r24, 0xD7	; 215
    2314:	6d 6c       	ori	r22, 0xCD	; 205
    2316:	75 79       	andi	r23, 0x95	; 149
    2318:	7e 8e       	std	Y+30, r7	; 0x1e
    231a:	92 7b       	andi	r25, 0xB2	; 178
    231c:	6e 7a       	andi	r22, 0xAE	; 174
    231e:	82 7f       	andi	r24, 0xF2	; 242
    2320:	7c 7c       	andi	r23, 0xCC	; 204
    2322:	7d 81       	ldd	r23, Y+5	; 0x05
    2324:	88 8c       	ldd	r8, Y+24	; 0x18
    2326:	82 75       	andi	r24, 0x52	; 82
    2328:	72 75       	andi	r23, 0x52	; 82
    232a:	7c 83       	std	Y+4, r23	; 0x04
    232c:	8d 93       	st	X+, r24
    232e:	83 70       	andi	r24, 0x03	; 3
    2330:	75 80       	ldd	r7, Z+5	; 0x05
    2332:	80 7f       	andi	r24, 0xF0	; 240
    2334:	7f 7f       	andi	r23, 0xFF	; 255
    2336:	83 8a       	std	Z+19, r8	; 0x13
    2338:	90 8a       	std	Z+16, r9	; 0x10
    233a:	7a 73       	andi	r23, 0x3A	; 58
    233c:	74 7b       	andi	r23, 0xB4	; 180
    233e:	82 8b       	std	Z+18, r24	; 0x12
    2340:	94 8b       	std	Z+20, r25	; 0x14
    2342:	7c 77       	andi	r23, 0x7C	; 124
    2344:	7c 84       	ldd	r7, Y+12	; 0x0c
    2346:	84 82       	std	Z+4, r8	; 0x04
    2348:	82 83       	std	Z+2, r24	; 0x02
    234a:	89 93       	st	Y+, r24
    234c:	90 83       	st	Z, r25
    234e:	7a 78       	andi	r23, 0x8A	; 138
    2350:	79 7f       	andi	r23, 0xF9	; 249
    2352:	8b 91       	.word	0x918b	; ????
    2354:	90 88       	ldd	r9, Z+16	; 0x10
    2356:	7e 7f       	andi	r23, 0xFE	; 254
    2358:	86 87       	std	Z+14, r24	; 0x0e
    235a:	86 81       	ldd	r24, Z+6	; 0x06
    235c:	7f 83       	std	Y+7, r23	; 0x07
    235e:	8b 90       	.word	0x908b	; ????
    2360:	87 7b       	andi	r24, 0xB7	; 183
    2362:	78 77       	andi	r23, 0x78	; 120
    2364:	7e 8a       	std	Y+22, r7	; 0x16
    2366:	8c 92       	st	X, r8
    2368:	8f 7e       	andi	r24, 0xEF	; 239
    236a:	75 80       	ldd	r7, Z+5	; 0x05
    236c:	87 83       	std	Z+7, r24	; 0x07
    236e:	81 80       	ldd	r8, Z+1	; 0x01
    2370:	7f 84       	ldd	r7, Y+15	; 0x0f
    2372:	8f 89       	ldd	r24, Y+23	; 0x17
    2374:	7d 79       	andi	r23, 0x9D	; 157
    2376:	74 74       	andi	r23, 0x44	; 68
    2378:	7e 83       	std	Y+6, r23	; 0x06
    237a:	84 8c       	ldd	r8, Z+28	; 0x1c
    237c:	85 75       	andi	r24, 0x55	; 85
    237e:	74 7e       	andi	r23, 0xE4	; 228
    2380:	7f 7e       	andi	r23, 0xEF	; 239
    2382:	7d 7a       	andi	r23, 0xAD	; 173
    2384:	7c 88       	ldd	r7, Y+20	; 0x14
    2386:	85 78       	andi	r24, 0x85	; 133
    2388:	75 72       	andi	r23, 0x25	; 37
    238a:	6f 73       	andi	r22, 0x3F	; 63
    238c:	7b 7e       	andi	r23, 0xEB	; 235
    238e:	83 87       	std	Z+11, r24	; 0x0b
    2390:	7e 74       	andi	r23, 0x4E	; 78
    2392:	78 7f       	andi	r23, 0xF8	; 248
    2394:	7f 7e       	andi	r23, 0xEF	; 239
    2396:	78 7a       	andi	r23, 0xA8	; 168
    2398:	80 81       	ld	r24, Z
    239a:	7a 77       	andi	r23, 0x7A	; 122
    239c:	75 74       	andi	r23, 0x45	; 69
    239e:	73 78       	andi	r23, 0x83	; 131
    23a0:	80 80       	ld	r8, Z
    23a2:	87 88       	ldd	r8, Z+23	; 0x17
    23a4:	7b 74       	andi	r23, 0x4B	; 75
    23a6:	7a 7d       	andi	r23, 0xDA	; 218
    23a8:	7d 7c       	andi	r23, 0xCD	; 205
    23aa:	7b 7e       	andi	r23, 0xEB	; 235
    23ac:	82 81       	ldd	r24, Z+2	; 0x02
    23ae:	7c 7e       	andi	r23, 0xEC	; 236
    23b0:	79 73       	andi	r23, 0x39	; 57
    23b2:	75 7d       	andi	r23, 0xD5	; 213
    23b4:	7f 86       	std	Y+15, r7	; 0x0f
    23b6:	8f 8b       	std	Y+23, r24	; 0x17
    23b8:	7c 77       	andi	r23, 0x7C	; 124
    23ba:	7b 7b       	andi	r23, 0xBB	; 187
    23bc:	7d 7a       	andi	r23, 0xAD	; 173
    23be:	78 7e       	andi	r23, 0xE8	; 232
    23c0:	81 7f       	andi	r24, 0xF1	; 241
    23c2:	83 83       	std	Z+3, r24	; 0x03
    23c4:	78 74       	andi	r23, 0x48	; 72
    23c6:	79 7c       	andi	r23, 0xC9	; 201
    23c8:	7f 89       	ldd	r23, Y+23	; 0x17
    23ca:	8e 85       	ldd	r24, Y+14	; 0x0e
    23cc:	7c 79       	andi	r23, 0x9C	; 156
    23ce:	79 7e       	andi	r23, 0xE9	; 233
    23d0:	81 7c       	andi	r24, 0xC1	; 193
    23d2:	7d 81       	ldd	r23, Y+5	; 0x05
    23d4:	81 84       	ldd	r8, Z+9	; 0x09
    23d6:	87 7e       	andi	r24, 0xE7	; 231
    23d8:	76 78       	andi	r23, 0x86	; 134
    23da:	78 7a       	andi	r23, 0xA8	; 168
    23dc:	83 8a       	std	Z+19, r8	; 0x13
    23de:	8c 8c       	ldd	r8, Y+28	; 0x1c
    23e0:	83 7a       	andi	r24, 0xA3	; 163
    23e2:	81 86       	std	Z+9, r8	; 0x09
    23e4:	7f 7c       	andi	r23, 0xCF	; 207
    23e6:	80 7f       	andi	r24, 0xF0	; 240
    23e8:	82 89       	ldd	r24, Z+18	; 0x12
    23ea:	87 80       	ldd	r8, Z+7	; 0x07
    23ec:	7d 7c       	andi	r23, 0xCD	; 205
    23ee:	78 7c       	andi	r23, 0xC8	; 200
    23f0:	83 89       	ldd	r24, Z+19	; 0x13
    23f2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    23f4:	84 7f       	andi	r24, 0xF4	; 244
    23f6:	80 80       	ld	r8, Z
    23f8:	7b 7e       	andi	r23, 0xEB	; 235
    23fa:	84 82       	std	Z+4, r8	; 0x04
    23fc:	83 89       	ldd	r24, Z+19	; 0x13
    23fe:	86 80       	ldd	r8, Z+6	; 0x06
    2400:	7f 7b       	andi	r23, 0xBF	; 191
    2402:	77 7b       	andi	r23, 0xB7	; 183
    2404:	82 88       	ldd	r8, Z+18	; 0x12
    2406:	8a 8b       	std	Y+18, r24	; 0x12
    2408:	86 7d       	andi	r24, 0xD6	; 214
    240a:	7b 7f       	andi	r23, 0xFB	; 251
    240c:	7c 7b       	andi	r23, 0xBC	; 188
    240e:	80 80       	ld	r8, Z
    2410:	81 87       	std	Z+9, r24	; 0x09
    2412:	88 83       	st	Y, r24
    2414:	7d 78       	andi	r23, 0x8D	; 141
    2416:	71 74       	andi	r23, 0x41	; 65
    2418:	7d 83       	std	Y+5, r23	; 0x05
    241a:	87 8c       	ldd	r8, Z+31	; 0x1f
    241c:	87 79       	andi	r24, 0x97	; 151
    241e:	77 7d       	andi	r23, 0xD7	; 215
    2420:	7c 7b       	andi	r23, 0xBC	; 188
    2422:	7f 81       	ldd	r23, Y+7	; 0x07
    2424:	81 86       	std	Z+9, r8	; 0x09
    2426:	86 83       	std	Z+6, r24	; 0x06
    2428:	7e 75       	andi	r23, 0x5E	; 94
    242a:	70 76       	andi	r23, 0x60	; 96
    242c:	7f 85       	ldd	r23, Y+15	; 0x0f
    242e:	89 8e       	std	Y+25, r8	; 0x19
    2430:	90 81       	ld	r25, Z
    2432:	77 7a       	andi	r23, 0xA7	; 167
    2434:	7c 7b       	andi	r23, 0xBC	; 188
    2436:	7e 7f       	andi	r23, 0xFE	; 254
    2438:	81 88       	ldd	r8, Z+17	; 0x11
    243a:	8a 86       	std	Y+10, r8	; 0x0a
    243c:	80 7b       	andi	r24, 0xB0	; 176
    243e:	76 76       	andi	r23, 0x66	; 102
    2440:	7e 83       	std	Y+6, r23	; 0x06
    2442:	87 90       	elpm	r8, Z+
    2444:	93 8d       	ldd	r25, Z+27	; 0x1b
    2446:	7e 78       	andi	r23, 0x8E	; 142
    2448:	7f 7b       	andi	r23, 0xBF	; 191
    244a:	77 80       	ldd	r7, Z+7	; 0x07
    244c:	81 80       	ldd	r8, Z+1	; 0x01
    244e:	86 85       	ldd	r24, Z+14	; 0x0e
    2450:	80 7c       	andi	r24, 0xC0	; 192
    2452:	78 74       	andi	r23, 0x48	; 72
    2454:	77 7f       	andi	r23, 0xF7	; 247
    2456:	82 87       	std	Z+10, r24	; 0x0a
    2458:	8d 8c       	ldd	r8, Y+29	; 0x1d
    245a:	7d 74       	andi	r23, 0x4D	; 77
    245c:	75 73       	andi	r23, 0x35	; 53
    245e:	72 7a       	andi	r23, 0xA2	; 162
    2460:	7e 7a       	andi	r23, 0xAE	; 174
    2462:	81 83       	std	Z+1, r24	; 0x01
    2464:	7c 77       	andi	r23, 0x7C	; 124
    2466:	75 71       	andi	r23, 0x15	; 21
    2468:	6f 75       	andi	r22, 0x5F	; 95
    246a:	7c 7e       	andi	r23, 0xEC	; 236
    246c:	84 8a       	std	Z+20, r8	; 0x14
    246e:	84 75       	andi	r24, 0x54	; 84
    2470:	6e 71       	andi	r22, 0x1E	; 30
    2472:	70 73       	andi	r23, 0x30	; 48
    2474:	7d 7c       	andi	r23, 0xCD	; 205
    2476:	7a 83       	std	Y+2, r23	; 0x02
    2478:	82 7a       	andi	r24, 0xA2	; 162
    247a:	7b 7a       	andi	r23, 0xAB	; 171
    247c:	73 73       	andi	r23, 0x33	; 51
    247e:	7b 80       	ldd	r7, Y+3	; 0x03
    2480:	85 90       	lpm	r8, Z+
    2482:	91 8a       	std	Z+17, r9	; 0x11
    2484:	7e 74       	andi	r23, 0x4E	; 78
    2486:	76 79       	andi	r23, 0x96	; 150
    2488:	7c 83       	std	Y+4, r23	; 0x04
    248a:	84 82       	std	Z+4, r8	; 0x04
    248c:	86 84       	ldd	r8, Z+14	; 0x0e
    248e:	7f 80       	ldd	r7, Y+7	; 0x07
    2490:	7b 70       	andi	r23, 0x0B	; 11
    2492:	72 79       	andi	r23, 0x92	; 146
    2494:	7f 82       	std	Y+7, r7	; 0x07
    2496:	8a 94       	dec	r8
    2498:	90 83       	st	Z, r25
    249a:	78 78       	andi	r23, 0x88	; 136
    249c:	7b 7c       	andi	r23, 0xCB	; 203
    249e:	80 81       	ld	r24, Z
    24a0:	80 80       	ld	r8, Z
    24a2:	81 82       	std	Z+1, r8	; 0x01
    24a4:	81 7e       	andi	r24, 0xE1	; 225
    24a6:	79 79       	andi	r23, 0x99	; 153
    24a8:	7d 84       	ldd	r7, Y+13	; 0x0d
    24aa:	86 8a       	std	Z+22, r8	; 0x16
    24ac:	93 94       	inc	r9
    24ae:	89 7e       	andi	r24, 0xE9	; 233
    24b0:	7e 80       	ldd	r7, Y+6	; 0x06
    24b2:	7e 85       	ldd	r23, Y+14	; 0x0e
    24b4:	8b 84       	ldd	r8, Y+11	; 0x0b
    24b6:	83 86       	std	Z+11, r8	; 0x0b
    24b8:	84 81       	ldd	r24, Z+4	; 0x04
    24ba:	80 7b       	andi	r24, 0xB0	; 176
    24bc:	77 7c       	andi	r23, 0xC7	; 199
    24be:	83 87       	std	Z+11, r24	; 0x0b
    24c0:	88 91       	.word	0x9188	; ????
    24c2:	95 8d       	ldd	r25, Z+29	; 0x1d
    24c4:	81 7d       	andi	r24, 0xD1	; 209
    24c6:	7d 7e       	andi	r23, 0xED	; 237
    24c8:	81 83       	std	Z+1, r24	; 0x01
    24ca:	81 81       	ldd	r24, Z+1	; 0x01
    24cc:	82 86       	std	Z+10, r8	; 0x0a
    24ce:	83 7d       	andi	r24, 0xD3	; 211
    24d0:	7b 7a       	andi	r23, 0xAB	; 171
    24d2:	79 7b       	andi	r23, 0xB9	; 185
    24d4:	84 85       	ldd	r24, Z+12	; 0x0c
    24d6:	86 8d       	ldd	r24, Z+30	; 0x1e
    24d8:	8c 82       	std	Y+4, r8	; 0x04
    24da:	7b 79       	andi	r23, 0x9B	; 155
    24dc:	7a 7b       	andi	r23, 0xBA	; 186
    24de:	7d 80       	ldd	r7, Y+5	; 0x05
    24e0:	7e 7c       	andi	r23, 0xCE	; 206
    24e2:	7e 7b       	andi	r23, 0xBE	; 190
    24e4:	74 73       	andi	r23, 0x34	; 52
    24e6:	72 6f       	ori	r23, 0xF2	; 242
    24e8:	72 7c       	andi	r23, 0xC2	; 194
    24ea:	7d 80       	ldd	r7, Y+5	; 0x05
    24ec:	8a 8a       	std	Y+18, r8	; 0x12
    24ee:	81 79       	andi	r24, 0x91	; 145
    24f0:	73 73       	andi	r23, 0x33	; 51
    24f2:	78 7d       	andi	r23, 0xD8	; 216
    24f4:	80 7e       	andi	r24, 0xE0	; 224
    24f6:	7d 80       	ldd	r7, Y+5	; 0x05
    24f8:	7e 7a       	andi	r23, 0xAE	; 174
    24fa:	7b 7a       	andi	r23, 0xAB	; 171
    24fc:	74 76       	andi	r23, 0x64	; 100
    24fe:	7d 81       	ldd	r23, Y+5	; 0x05
    2500:	83 8d       	ldd	r24, Z+27	; 0x1b
    2502:	93 8c       	ldd	r9, Z+27	; 0x1b
    2504:	82 7a       	andi	r24, 0xA2	; 162
    2506:	78 7a       	andi	r23, 0xA8	; 168
    2508:	7b 7e       	andi	r23, 0xEB	; 235
    250a:	82 80       	ldd	r8, Z+2	; 0x02
    250c:	7f 81       	ldd	r23, Y+7	; 0x07
    250e:	7f 7d       	andi	r23, 0xDF	; 223
    2510:	7e 79       	andi	r23, 0x9E	; 158
    2512:	72 78       	andi	r23, 0x82	; 130
    2514:	85 87       	std	Z+13, r24	; 0x0d
    2516:	87 90       	elpm	r8, Z+
    2518:	91 86       	std	Z+9, r9	; 0x09
    251a:	7c 7a       	andi	r23, 0xAC	; 172
    251c:	79 78       	andi	r23, 0x89	; 137
    251e:	7d 82       	std	Y+5, r7	; 0x05
    2520:	7e 7f       	andi	r23, 0xFE	; 254
    2522:	84 80       	ldd	r8, Z+4	; 0x04
    2524:	79 78       	andi	r23, 0x89	; 137
    2526:	79 73       	andi	r23, 0x39	; 57
    2528:	74 7e       	andi	r23, 0xE4	; 228
    252a:	84 83       	std	Z+4, r24	; 0x04
    252c:	8b 95       	.word	0x958b	; ????
    252e:	8f 83       	std	Y+7, r24	; 0x07
    2530:	7b 77       	andi	r23, 0x7B	; 123
    2532:	77 7b       	andi	r23, 0xB7	; 183
    2534:	7f 7d       	andi	r23, 0xDF	; 223
    2536:	7d 80       	ldd	r7, Y+5	; 0x05
    2538:	7f 7e       	andi	r23, 0xEF	; 239
    253a:	7c 78       	andi	r23, 0x8C	; 140
    253c:	72 70       	andi	r23, 0x02	; 2
    253e:	74 7e       	andi	r23, 0xE4	; 228
    2540:	84 85       	ldd	r24, Z+12	; 0x0c
    2542:	8c 94 8f 84 	jmp	0x21091e	; 0x21091e <__TEXT_REGION_LENGTH__+0x1f091e>
    2546:	7e 79       	andi	r23, 0x9E	; 158
    2548:	76 79       	andi	r23, 0x96	; 150
    254a:	7f 80       	ldd	r7, Y+7	; 0x07
    254c:	84 84       	ldd	r8, Z+12	; 0x0c
    254e:	81 7d       	andi	r24, 0xD1	; 209
    2550:	7a 79       	andi	r23, 0x9A	; 154
    2552:	78 74       	andi	r23, 0x48	; 72
    2554:	76 80       	ldd	r7, Z+6	; 0x06
    2556:	85 85       	ldd	r24, Z+13	; 0x0d
    2558:	8f 93       	push	r24
    255a:	8a 7f       	andi	r24, 0xFA	; 250
    255c:	7b 78       	andi	r23, 0x8B	; 139
    255e:	77 82       	std	Z+7, r7	; 0x07
    2560:	87 83       	std	Z+7, r24	; 0x07
    2562:	84 85       	ldd	r24, Z+12	; 0x0c
    2564:	7f 7a       	andi	r23, 0xAF	; 175
    2566:	78 75       	andi	r23, 0x58	; 88
    2568:	6f 70       	andi	r22, 0x0F	; 15
    256a:	7b 89       	ldd	r23, Y+19	; 0x13
    256c:	90 93 96 94 	sts	0x9496, r25	; 0x809496 <__bss_end+0x9235>
    2570:	8c 86       	std	Y+12, r8	; 0x0c
    2572:	7f 74       	andi	r23, 0x4F	; 79
    2574:	75 7c       	andi	r23, 0xC5	; 197
    2576:	7c 80       	ldd	r7, Y+4	; 0x04
    2578:	87 8b       	std	Z+23, r24	; 0x17
    257a:	87 82       	std	Z+7, r8	; 0x07
    257c:	80 7b       	andi	r24, 0xB0	; 176
    257e:	77 79       	andi	r23, 0x97	; 151
    2580:	7c 7f       	andi	r23, 0xFC	; 252
    2582:	83 88       	ldd	r8, Z+19	; 0x13
    2584:	8d 8e       	std	Y+29, r8	; 0x1d
    2586:	8b 87       	std	Y+11, r24	; 0x0b
    2588:	87 84       	ldd	r8, Z+15	; 0x0f
    258a:	7d 7c       	andi	r23, 0xCD	; 205
    258c:	7e 7e       	andi	r23, 0xEE	; 238
    258e:	81 81       	ldd	r24, Z+1	; 0x01
    2590:	7c 7a       	andi	r23, 0xAC	; 172
    2592:	79 7a       	andi	r23, 0xA9	; 169
    2594:	7a 7b       	andi	r23, 0xBA	; 186
    2596:	7b 7c       	andi	r23, 0xCB	; 203
    2598:	81 87       	std	Z+9, r24	; 0x09
    259a:	8b 8c       	ldd	r8, Y+27	; 0x1b
    259c:	8b 8b       	std	Y+19, r24	; 0x13
    259e:	88 81       	ld	r24, Y
    25a0:	7d 7c       	andi	r23, 0xCD	; 205
    25a2:	7d 7f       	andi	r23, 0xFD	; 253
    25a4:	82 84       	ldd	r8, Z+10	; 0x0a
    25a6:	82 7d       	andi	r24, 0xD2	; 210
    25a8:	79 77       	andi	r23, 0x79	; 121
    25aa:	74 72       	andi	r23, 0x24	; 36
    25ac:	73 74       	andi	r23, 0x43	; 67
    25ae:	77 7d       	andi	r23, 0xD7	; 215
    25b0:	82 84       	ldd	r8, Z+10	; 0x0a
    25b2:	83 84       	ldd	r8, Z+11	; 0x0b
    25b4:	84 81       	ldd	r24, Z+4	; 0x04
    25b6:	7f 7d       	andi	r23, 0xDF	; 223
    25b8:	7a 78       	andi	r23, 0x8A	; 138
    25ba:	78 79       	andi	r23, 0x98	; 152
    25bc:	79 79       	andi	r23, 0x99	; 153
    25be:	78 76       	andi	r23, 0x68	; 104
    25c0:	73 73       	andi	r23, 0x33	; 51
    25c2:	76 78       	andi	r23, 0x86	; 134
    25c4:	7a 7c       	andi	r23, 0xCA	; 202
    25c6:	7f 84       	ldd	r7, Y+15	; 0x0f
    25c8:	87 86       	std	Z+15, r8	; 0x0f
    25ca:	86 86       	std	Z+14, r8	; 0x0e
    25cc:	84 82       	std	Z+4, r8	; 0x04
    25ce:	81 7f       	andi	r24, 0xF1	; 241
    25d0:	7c 79       	andi	r23, 0x9C	; 156
    25d2:	76 79       	andi	r23, 0x96	; 150
    25d4:	7b 7b       	andi	r23, 0xBB	; 187
    25d6:	7c 7d       	andi	r23, 0xDC	; 220
    25d8:	7d 7c       	andi	r23, 0xCD	; 205
    25da:	7d 7d       	andi	r23, 0xDD	; 221
    25dc:	7f 80       	ldd	r7, Y+7	; 0x07
    25de:	82 81       	ldd	r24, Z+2	; 0x02
    25e0:	83 87       	std	Z+11, r24	; 0x0b
    25e2:	86 86       	std	Z+14, r8	; 0x0e
    25e4:	84 80       	ldd	r8, Z+4	; 0x04
    25e6:	7e 7b       	andi	r23, 0xBE	; 190
    25e8:	78 74       	andi	r23, 0x48	; 72
    25ea:	72 73       	andi	r23, 0x32	; 50
    25ec:	75 77       	andi	r23, 0x75	; 117
    25ee:	7c 80       	ldd	r7, Y+4	; 0x04
    25f0:	81 82       	std	Z+1, r8	; 0x01
    25f2:	80 7d       	andi	r24, 0xD0	; 208
    25f4:	80 81       	ld	r24, Z
    25f6:	82 84       	ldd	r8, Z+10	; 0x0a
    25f8:	87 88       	ldd	r8, Z+23	; 0x17
    25fa:	87 89       	ldd	r24, Z+23	; 0x17
    25fc:	8a 86       	std	Y+10, r8	; 0x0a
    25fe:	84 82       	std	Z+4, r8	; 0x04
    2600:	80 80       	ld	r8, Z
    2602:	7b 76       	andi	r23, 0x6B	; 107
    2604:	78 7a       	andi	r23, 0xA8	; 168
    2606:	7b 7e       	andi	r23, 0xEB	; 235
    2608:	80 81       	ld	r24, Z
    260a:	81 80       	ldd	r8, Z+1	; 0x01
    260c:	80 82       	st	Z, r8
    260e:	84 84       	ldd	r8, Z+12	; 0x0c
    2610:	86 8d       	ldd	r24, Z+30	; 0x1e
    2612:	91 94       	neg	r9
    2614:	95 93       	las	Z, r25
    2616:	91 8f       	std	Z+25, r25	; 0x19
    2618:	89 84       	ldd	r8, Y+9	; 0x09
    261a:	81 7e       	andi	r24, 0xE1	; 225
    261c:	7a 7b       	andi	r23, 0xBA	; 186
    261e:	80 83       	st	Z, r24
    2620:	85 87       	std	Z+13, r24	; 0x0d
    2622:	87 84       	ldd	r8, Z+15	; 0x0f
    2624:	80 7f       	andi	r24, 0xF0	; 240
    2626:	7f 80       	ldd	r7, Y+7	; 0x07
    2628:	84 89       	ldd	r24, Z+20	; 0x14
    262a:	8d 90       	ld	r8, X+
    262c:	92 92       	st	-Z, r9
    262e:	8c 86       	std	Y+12, r8	; 0x0c
    2630:	82 7e       	andi	r24, 0xE2	; 226
    2632:	7a 79       	andi	r23, 0x9A	; 154
    2634:	78 78       	andi	r23, 0x88	; 136
    2636:	78 78       	andi	r23, 0x88	; 136
    2638:	79 78       	andi	r23, 0x89	; 137
    263a:	78 78       	andi	r23, 0x88	; 136
    263c:	76 74       	andi	r23, 0x46	; 70
    263e:	77 79       	andi	r23, 0x97	; 151
    2640:	7a 7d       	andi	r23, 0xDA	; 218
    2642:	81 84       	ldd	r8, Z+9	; 0x09
    2644:	84 82       	std	Z+4, r8	; 0x04
    2646:	7e 7a       	andi	r23, 0xAE	; 174
    2648:	77 75       	andi	r23, 0x57	; 87
    264a:	74 76       	andi	r23, 0x64	; 100
    264c:	78 78       	andi	r23, 0x88	; 136
    264e:	77 76       	andi	r23, 0x67	; 103
    2650:	75 73       	andi	r23, 0x35	; 53
    2652:	72 72       	andi	r23, 0x22	; 34
    2654:	72 75       	andi	r23, 0x52	; 82
    2656:	77 78       	andi	r23, 0x87	; 135
    2658:	7b 7c       	andi	r23, 0xCB	; 203
    265a:	7f 80       	ldd	r7, Y+7	; 0x07
    265c:	83 83       	std	Z+3, r24	; 0x03
    265e:	82 80       	ldd	r8, Z+2	; 0x02
    2660:	7d 7f       	andi	r23, 0xFD	; 253
    2662:	7f 7e       	andi	r23, 0xEF	; 239
    2664:	7c 7a       	andi	r23, 0xAC	; 172
    2666:	78 76       	andi	r23, 0x68	; 104
    2668:	75 76       	andi	r23, 0x65	; 101
    266a:	76 76       	andi	r23, 0x66	; 102
    266c:	79 7c       	andi	r23, 0xC9	; 201
    266e:	7d 7e       	andi	r23, 0xED	; 237
    2670:	7e 7e       	andi	r23, 0xEE	; 238
    2672:	80 83       	st	Z, r24
    2674:	86 87       	std	Z+14, r24	; 0x0e
    2676:	87 87       	std	Z+15, r24	; 0x0f
    2678:	88 88       	ldd	r8, Y+16	; 0x10
    267a:	88 87       	std	Y+8, r24	; 0x08
    267c:	86 84       	ldd	r8, Z+14	; 0x0e
    267e:	81 80       	ldd	r8, Z+1	; 0x01
    2680:	7f 7c       	andi	r23, 0xCF	; 207
    2682:	7a 7c       	andi	r23, 0xCA	; 202
    2684:	7d 7e       	andi	r23, 0xED	; 237
    2686:	7e 7e       	andi	r23, 0xEE	; 238
    2688:	7f 7f       	andi	r23, 0xFF	; 255
    268a:	80 81       	ld	r24, Z
    268c:	82 84       	ldd	r8, Z+10	; 0x0a
    268e:	87 88       	ldd	r8, Z+23	; 0x17
    2690:	87 88       	ldd	r8, Z+23	; 0x17
    2692:	89 88       	ldd	r8, Y+17	; 0x11
    2694:	88 87       	std	Y+8, r24	; 0x08
    2696:	85 83       	std	Z+5, r24	; 0x05
    2698:	82 81       	ldd	r24, Z+2	; 0x02
    269a:	7e 7c       	andi	r23, 0xCE	; 206
    269c:	7b 7c       	andi	r23, 0xCB	; 203
    269e:	7b 7a       	andi	r23, 0xAB	; 171
    26a0:	7c 7d       	andi	r23, 0xDC	; 220
    26a2:	7e 7f       	andi	r23, 0xFE	; 254
    26a4:	81 82       	std	Z+1, r8	; 0x01
    26a6:	83 86       	std	Z+11, r8	; 0x0b
    26a8:	88 8a       	std	Y+16, r8	; 0x10
    26aa:	8b 8b       	std	Y+19, r24	; 0x13
    26ac:	88 86       	std	Y+8, r8	; 0x08
    26ae:	85 83       	std	Z+5, r24	; 0x05
    26b0:	82 81       	ldd	r24, Z+2	; 0x02
    26b2:	7f 7f       	andi	r23, 0xFF	; 255
    26b4:	7e 7d       	andi	r23, 0xDE	; 222
    26b6:	7c 79       	andi	r23, 0x9C	; 156
    26b8:	79 78       	andi	r23, 0x89	; 137
    26ba:	79 78       	andi	r23, 0x89	; 137
    26bc:	79 7a       	andi	r23, 0xA9	; 169
    26be:	7c 7e       	andi	r23, 0xEC	; 236
    26c0:	7e 80       	ldd	r7, Y+6	; 0x06
    26c2:	81 81       	ldd	r24, Z+1	; 0x01
    26c4:	84 87       	std	Z+12, r24	; 0x0c
    26c6:	87 87       	std	Z+15, r24	; 0x0f
    26c8:	85 82       	std	Z+5, r8	; 0x05
    26ca:	80 80       	ld	r8, Z
    26cc:	7e 7c       	andi	r23, 0xCE	; 206
    26ce:	78 77       	andi	r23, 0x78	; 120
    26d0:	78 78       	andi	r23, 0x88	; 136
    26d2:	78 7b       	andi	r23, 0xB8	; 184
    26d4:	79 7a       	andi	r23, 0xA9	; 169
    26d6:	7c 7e       	andi	r23, 0xEC	; 236
    26d8:	80 81       	ld	r24, Z
    26da:	85 86       	std	Z+13, r8	; 0x0d
    26dc:	85 84       	ldd	r8, Z+13	; 0x0d
    26de:	84 80       	ldd	r8, Z+4	; 0x04
    26e0:	7f 7f       	andi	r23, 0xFF	; 255
    26e2:	7f 7f       	andi	r23, 0xFF	; 255
    26e4:	7f 7f       	andi	r23, 0xFF	; 255
    26e6:	7f 7e       	andi	r23, 0xEF	; 239
    26e8:	7e 7c       	andi	r23, 0xCE	; 206
    26ea:	7a 78       	andi	r23, 0x8A	; 138
    26ec:	77 76       	andi	r23, 0x67	; 103
    26ee:	78 79       	andi	r23, 0x98	; 152
    26f0:	7b 7e       	andi	r23, 0xEB	; 235
    26f2:	80 83       	st	Z, r24
    26f4:	81 81       	ldd	r24, Z+1	; 0x01
    26f6:	83 84       	ldd	r8, Z+11	; 0x0b
    26f8:	83 81       	ldd	r24, Z+3	; 0x03
    26fa:	82 83       	std	Z+2, r24	; 0x02
    26fc:	82 82       	std	Z+2, r8	; 0x02
    26fe:	83 82       	std	Z+3, r8	; 0x03
    2700:	82 81       	ldd	r24, Z+2	; 0x02
    2702:	83 80       	ldd	r8, Z+3	; 0x03
    2704:	7f 7f       	andi	r23, 0xFF	; 255
    2706:	7e 7f       	andi	r23, 0xFE	; 254
    2708:	7e 7f       	andi	r23, 0xFE	; 254
    270a:	7f 80       	ldd	r7, Y+7	; 0x07
    270c:	80 81       	ld	r24, Z
    270e:	82 80       	ldd	r8, Z+2	; 0x02
    2710:	80 81       	ld	r24, Z
    2712:	80 80       	ld	r8, Z
    2714:	81 81       	ldd	r24, Z+1	; 0x01
    2716:	7f 7e       	andi	r23, 0xEF	; 239
    2718:	80 7f       	andi	r24, 0xF0	; 240
    271a:	7e 7e       	andi	r23, 0xEE	; 238
    271c:	7f 80       	ldd	r7, Y+7	; 0x07
    271e:	80 81       	ld	r24, Z
    2720:	80 81       	ld	r24, Z
    2722:	81 81       	ldd	r24, Z+1	; 0x01
    2724:	80 7c       	andi	r24, 0xC0	; 192
    2726:	7a 79       	andi	r23, 0x9A	; 154
    2728:	79 7a       	andi	r23, 0xA9	; 169
    272a:	7b 7b       	andi	r23, 0xBB	; 187
    272c:	7d 7d       	andi	r23, 0xDD	; 221
    272e:	7f 7f       	andi	r23, 0xFF	; 255
    2730:	7f 7e       	andi	r23, 0xEF	; 239
    2732:	7f 80       	ldd	r7, Y+7	; 0x07
    2734:	80 81       	ld	r24, Z
    2736:	80 80       	ld	r8, Z
    2738:	81 81       	ldd	r24, Z+1	; 0x01
    273a:	7f 7f       	andi	r23, 0xFF	; 255
    273c:	7f 7f       	andi	r23, 0xFF	; 255
    273e:	80 81       	ld	r24, Z
    2740:	81 80       	ldd	r8, Z+1	; 0x01
    2742:	80 80       	ld	r8, Z
    2744:	7f 80       	ldd	r7, Y+7	; 0x07
    2746:	81 80       	ldd	r8, Z+1	; 0x01
    2748:	80 80       	ld	r8, Z
    274a:	80 7f       	andi	r24, 0xF0	; 240
    274c:	7f 7f       	andi	r23, 0xFF	; 255
    274e:	80 81       	ld	r24, Z
    2750:	7f 80       	ldd	r7, Y+7	; 0x07
    2752:	80 80       	ld	r8, Z
    2754:	81 83       	std	Z+1, r24	; 0x01
    2756:	83 83       	std	Z+3, r24	; 0x03
    2758:	83 82       	std	Z+3, r8	; 0x03
    275a:	82 83       	std	Z+2, r24	; 0x02
    275c:	83 81       	ldd	r24, Z+3	; 0x03
    275e:	81 81       	ldd	r24, Z+1	; 0x01
    2760:	80 80       	ld	r8, Z
    2762:	80 81       	ld	r24, Z
    2764:	82 80       	ldd	r8, Z+2	; 0x02
    2766:	80 7f       	andi	r24, 0xF0	; 240
    2768:	7e 7d       	andi	r23, 0xDE	; 222
    276a:	7e 7c       	andi	r23, 0xCE	; 206
    276c:	7c 7c       	andi	r23, 0xCC	; 204
    276e:	7e 81       	ldd	r23, Y+6	; 0x06
    2770:	81 82       	std	Z+1, r8	; 0x01
    2772:	82 81       	ldd	r24, Z+2	; 0x02
    2774:	81 82       	std	Z+1, r8	; 0x01
    2776:	81 80       	ldd	r8, Z+1	; 0x01
    2778:	7f 7f       	andi	r23, 0xFF	; 255
    277a:	80 81       	ld	r24, Z
    277c:	82 82       	std	Z+2, r8	; 0x02
    277e:	81 80       	ldd	r8, Z+1	; 0x01
    2780:	7f 7d       	andi	r23, 0xDF	; 223
    2782:	7b 79       	andi	r23, 0x9B	; 155
    2784:	79 79       	andi	r23, 0x99	; 153
    2786:	7a 7c       	andi	r23, 0xCA	; 202
    2788:	7e 80       	ldd	r7, Y+6	; 0x06
    278a:	81 84       	ldd	r8, Z+9	; 0x09
    278c:	86 87       	std	Z+14, r24	; 0x0e
    278e:	86 86       	std	Z+14, r8	; 0x0e
    2790:	83 81       	ldd	r24, Z+3	; 0x03
    2792:	80 7f       	andi	r24, 0xF0	; 240
    2794:	7f 80       	ldd	r7, Y+7	; 0x07
    2796:	81 82       	std	Z+1, r8	; 0x01
    2798:	82 82       	std	Z+2, r8	; 0x02
    279a:	82 81       	ldd	r24, Z+2	; 0x02
    279c:	80 80       	ld	r8, Z
    279e:	7f 7f       	andi	r23, 0xFF	; 255
    27a0:	7f 7d       	andi	r23, 0xDF	; 223
    27a2:	7e 7e       	andi	r23, 0xEE	; 238
    27a4:	80 81       	ld	r24, Z
    27a6:	80 7f       	andi	r24, 0xF0	; 240
    27a8:	7e 7e       	andi	r23, 0xEE	; 238
    27aa:	7f 7e       	andi	r23, 0xEF	; 239
    27ac:	7d 7e       	andi	r23, 0xED	; 237
    27ae:	7f 7e       	andi	r23, 0xEF	; 239
    27b0:	7c 7c       	andi	r23, 0xCC	; 204
    27b2:	7c 7c       	andi	r23, 0xCC	; 204
    27b4:	7b 7b       	andi	r23, 0xBB	; 187
    27b6:	7c 7d       	andi	r23, 0xDC	; 220
    27b8:	7f 7e       	andi	r23, 0xEF	; 239
    27ba:	7e 7e       	andi	r23, 0xEE	; 238
    27bc:	7c 7a       	andi	r23, 0xAC	; 172
    27be:	7a 7a       	andi	r23, 0xAA	; 170
    27c0:	7a 7b       	andi	r23, 0xBA	; 186
    27c2:	7c 7d       	andi	r23, 0xDC	; 220
    27c4:	7e 7e       	andi	r23, 0xEE	; 238
    27c6:	7e 7c       	andi	r23, 0xCE	; 206
    27c8:	7b 7c       	andi	r23, 0xCB	; 203
    27ca:	7c 7c       	andi	r23, 0xCC	; 204
    27cc:	7d 7f       	andi	r23, 0xFD	; 253
    27ce:	7f 7e       	andi	r23, 0xEF	; 239
    27d0:	7e 7f       	andi	r23, 0xFE	; 254
    27d2:	7d 7d       	andi	r23, 0xDD	; 221
    27d4:	7f 80       	ldd	r7, Y+7	; 0x07
    27d6:	81 82       	std	Z+1, r8	; 0x01
    27d8:	81 80       	ldd	r8, Z+1	; 0x01
    27da:	81 81       	ldd	r24, Z+1	; 0x01
    27dc:	83 83       	std	Z+3, r24	; 0x03
    27de:	84 84       	ldd	r8, Z+12	; 0x0c
    27e0:	84 84       	ldd	r8, Z+12	; 0x0c
    27e2:	84 85       	ldd	r24, Z+12	; 0x0c
    27e4:	85 85       	ldd	r24, Z+13	; 0x0d
    27e6:	85 84       	ldd	r8, Z+13	; 0x0d
    27e8:	83 83       	std	Z+3, r24	; 0x03
    27ea:	85 85       	ldd	r24, Z+13	; 0x0d
    27ec:	84 84       	ldd	r8, Z+12	; 0x0c
    27ee:	84 84       	ldd	r8, Z+12	; 0x0c
    27f0:	82 81       	ldd	r24, Z+2	; 0x02
    27f2:	82 83       	std	Z+2, r24	; 0x02
    27f4:	84 84       	ldd	r8, Z+12	; 0x0c
    27f6:	85 84       	ldd	r8, Z+13	; 0x0d
    27f8:	85 84       	ldd	r8, Z+13	; 0x0d
    27fa:	82 83       	std	Z+2, r24	; 0x02
    27fc:	82 82       	std	Z+2, r8	; 0x02
    27fe:	81 82       	std	Z+1, r8	; 0x01
    2800:	81 80       	ldd	r8, Z+1	; 0x01
    2802:	80 81       	ld	r24, Z
    2804:	80 80       	ld	r8, Z
    2806:	7f 7e       	andi	r23, 0xEF	; 239
    2808:	7e 00       	.word	0x007e	; ????

0000280a <__ctors_end>:
    280a:	11 24       	eor	r1, r1
    280c:	1f be       	out	0x3f, r1	; 63
    280e:	cf ef       	ldi	r28, 0xFF	; 255
    2810:	d0 e1       	ldi	r29, 0x10	; 16
    2812:	de bf       	out	0x3e, r29	; 62
    2814:	cd bf       	out	0x3d, r28	; 61

00002816 <__do_copy_data>:
    2816:	12 e0       	ldi	r17, 0x02	; 2
    2818:	a0 e0       	ldi	r26, 0x00	; 0
    281a:	b1 e0       	ldi	r27, 0x01	; 1
    281c:	ec ec       	ldi	r30, 0xCC	; 204
    281e:	f7 e4       	ldi	r31, 0x47	; 71
    2820:	00 e0       	ldi	r16, 0x00	; 0
    2822:	0b bf       	out	0x3b, r16	; 59
    2824:	02 c0       	rjmp	.+4      	; 0x282a <__do_copy_data+0x14>
    2826:	07 90       	elpm	r0, Z+
    2828:	0d 92       	st	X+, r0
    282a:	a0 31       	cpi	r26, 0x10	; 16
    282c:	b1 07       	cpc	r27, r17
    282e:	d9 f7       	brne	.-10     	; 0x2826 <__do_copy_data+0x10>

00002830 <__do_clear_bss>:
    2830:	22 e0       	ldi	r18, 0x02	; 2
    2832:	a0 e1       	ldi	r26, 0x10	; 16
    2834:	b2 e0       	ldi	r27, 0x02	; 2
    2836:	01 c0       	rjmp	.+2      	; 0x283a <.do_clear_bss_start>

00002838 <.do_clear_bss_loop>:
    2838:	1d 92       	st	X+, r1

0000283a <.do_clear_bss_start>:
    283a:	a1 36       	cpi	r26, 0x61	; 97
    283c:	b2 07       	cpc	r27, r18
    283e:	e1 f7       	brne	.-8      	; 0x2838 <.do_clear_bss_loop>
    2840:	a0 d6       	rcall	.+3392   	; 0x3582 <main>
    2842:	0c 94 e4 23 	jmp	0x47c8	; 0x47c8 <_exit>

00002846 <__bad_interrupt>:
    2846:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000284a <init_ADC>:
void externalAREF(){
	if((ADMUX & 0xC0) == 0xC0){
		ADMUX &= ~0xC0;
		ADMUX = (1<<6);
		delay_mS(5);
		read_ADC(0);
    284a:	80 e4       	ldi	r24, 0x40	; 64
    284c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    2850:	ea e7       	ldi	r30, 0x7A	; 122
    2852:	f0 e0       	ldi	r31, 0x00	; 0
    2854:	86 e0       	ldi	r24, 0x06	; 6
    2856:	80 83       	st	Z, r24
    2858:	80 81       	ld	r24, Z
    285a:	80 68       	ori	r24, 0x80	; 128
    285c:	80 83       	st	Z, r24
    285e:	08 95       	ret

00002860 <read_ADC>:
    2860:	ec e7       	ldi	r30, 0x7C	; 124
    2862:	f0 e0       	ldi	r31, 0x00	; 0
    2864:	90 81       	ld	r25, Z
    2866:	90 7c       	andi	r25, 0xC0	; 192
    2868:	87 70       	andi	r24, 0x07	; 7
    286a:	89 2b       	or	r24, r25
    286c:	80 83       	st	Z, r24
    286e:	ea e7       	ldi	r30, 0x7A	; 122
    2870:	f0 e0       	ldi	r31, 0x00	; 0
    2872:	80 81       	ld	r24, Z
    2874:	80 64       	ori	r24, 0x40	; 64
    2876:	80 83       	st	Z, r24
    2878:	80 81       	ld	r24, Z
    287a:	86 fd       	sbrc	r24, 6
    287c:	fd cf       	rjmp	.-6      	; 0x2878 <read_ADC+0x18>
    287e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    2882:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    2886:	90 e0       	ldi	r25, 0x00	; 0
    2888:	92 2b       	or	r25, r18
    288a:	08 95       	ret

0000288c <read_gas_sensor>:
	}
}

uint16_t read_gas_sensor(){
	return read_ADC(2);
    288c:	82 e0       	ldi	r24, 0x02	; 2
    288e:	e8 cf       	rjmp	.-48     	; 0x2860 <read_ADC>
}
    2890:	08 95       	ret

00002892 <mars_moisture>:

uint16_t mars_moisture(){
	return read_ADC(3);
    2892:	83 e0       	ldi	r24, 0x03	; 3
    2894:	e5 cf       	rjmp	.-54     	; 0x2860 <read_ADC>
}
    2896:	08 95       	ret

00002898 <dac_write>:
	}
	dac_write(0);
	I2C_init(333);
}

void dac_write(uint8_t val){
    2898:	cf 93       	push	r28
    289a:	c8 2f       	mov	r28, r24
	I2C_start();
    289c:	0a d5       	rcall	.+2580   	; 0x32b2 <I2C_start>
	I2C_write(DAC_ADDR << 1); //DAC address in write mode
    289e:	80 ec       	ldi	r24, 0xC0	; 192
    28a0:	15 d5       	rcall	.+2602   	; 0x32cc <I2C_write>
	I2C_write(0); //power-down bits = 00 -> normal op, don't care data bits = 0000
    28a2:	80 e0       	ldi	r24, 0x00	; 0
    28a4:	13 d5       	rcall	.+2598   	; 0x32cc <I2C_write>
	I2C_write(val); //next 8 bits is the DAC register value
    28a6:	8c 2f       	mov	r24, r28
    28a8:	11 d5       	rcall	.+2594   	; 0x32cc <I2C_write>
    28aa:	0c d5       	rcall	.+2584   	; 0x32c4 <I2C_stop>
	I2C_stop();
    28ac:	cf 91       	pop	r28
    28ae:	08 95       	ret

000028b0 <play_tone>:
}
    28b0:	8f 92       	push	r8
    28b2:	9f 92       	push	r9
	set_LED(1, 0);
	set_LED(2, 0);
	_delay_ms(50);
}

void play_tone(uint16_t freq, uint16_t duration){
    28b4:	af 92       	push	r10
    28b6:	bf 92       	push	r11
    28b8:	cf 92       	push	r12
    28ba:	df 92       	push	r13
    28bc:	ef 92       	push	r14
    28be:	ff 92       	push	r15
    28c0:	cf 93       	push	r28
    28c2:	7c 01       	movw	r14, r24
    28c4:	6b 01       	movw	r12, r22
	uint32_t start = get_mS();
    28c6:	0e 94 46 20 	call	0x408c	; 0x408c <get_mS>
    28ca:	4b 01       	movw	r8, r22
    28cc:	5c 01       	movw	r10, r24
	uint8_t t = 0;
	I2C_init(freq/2 - freq/100);
    28ce:	a7 01       	movw	r20, r14
    28d0:	56 95       	lsr	r21
    28d2:	47 95       	ror	r20
    28d4:	97 01       	movw	r18, r14
    28d6:	36 95       	lsr	r19
    28d8:	27 95       	ror	r18
    28da:	36 95       	lsr	r19
    28dc:	27 95       	ror	r18
    28de:	ab e7       	ldi	r26, 0x7B	; 123
    28e0:	b4 e1       	ldi	r27, 0x14	; 20
    28e2:	0e 94 0b 23 	call	0x4616	; 0x4616 <__umulhisi3>
    28e6:	96 95       	lsr	r25
    28e8:	87 95       	ror	r24
    28ea:	9a 01       	movw	r18, r20
    28ec:	28 1b       	sub	r18, r24
    28ee:	39 0b       	sbc	r19, r25
    28f0:	c9 01       	movw	r24, r18
    28f2:	be d4       	rcall	.+2428   	; 0x3270 <I2C_init>
	_delay_ms(50);
}

void play_tone(uint16_t freq, uint16_t duration){
	uint32_t start = get_mS();
	uint8_t t = 0;
    28f4:	c0 e0       	ldi	r28, 0x00	; 0
	I2C_init(freq/2 - freq/100);
	while(get_mS() - start < duration){
    28f6:	e1 2c       	mov	r14, r1
    28f8:	f1 2c       	mov	r15, r1
    28fa:	08 c0       	rjmp	.+16     	; 0x290c <play_tone+0x5c>
		dac_write(sine_table[t % sizeof(sine_table)]);
    28fc:	ec 2f       	mov	r30, r28
    28fe:	ef 70       	andi	r30, 0x0F	; 15
    2900:	f0 e0       	ldi	r31, 0x00	; 0
    2902:	e4 51       	subi	r30, 0x14	; 20
    2904:	fe 4f       	sbci	r31, 0xFE	; 254
    2906:	80 81       	ld	r24, Z
    2908:	c7 df       	rcall	.-114    	; 0x2898 <dac_write>
		t++;
    290a:	cf 5f       	subi	r28, 0xFF	; 255

void play_tone(uint16_t freq, uint16_t duration){
	uint32_t start = get_mS();
	uint8_t t = 0;
	I2C_init(freq/2 - freq/100);
	while(get_mS() - start < duration){
    290c:	0e 94 46 20 	call	0x408c	; 0x408c <get_mS>
    2910:	dc 01       	movw	r26, r24
    2912:	cb 01       	movw	r24, r22
    2914:	88 19       	sub	r24, r8
    2916:	99 09       	sbc	r25, r9
    2918:	aa 09       	sbc	r26, r10
    291a:	bb 09       	sbc	r27, r11
    291c:	8c 15       	cp	r24, r12
    291e:	9d 05       	cpc	r25, r13
    2920:	ae 05       	cpc	r26, r14
    2922:	bf 05       	cpc	r27, r15
		dac_write(sine_table[t % sizeof(sine_table)]);
		t++;
	}
	dac_write(0);
    2924:	58 f3       	brcs	.-42     	; 0x28fc <play_tone+0x4c>
    2926:	80 e0       	ldi	r24, 0x00	; 0
	I2C_init(333);
    2928:	b7 df       	rcall	.-146    	; 0x2898 <dac_write>
    292a:	8d e4       	ldi	r24, 0x4D	; 77
    292c:	91 e0       	ldi	r25, 0x01	; 1
    292e:	a0 d4       	rcall	.+2368   	; 0x3270 <I2C_init>
}
    2930:	cf 91       	pop	r28
    2932:	ff 90       	pop	r15
    2934:	ef 90       	pop	r14
    2936:	df 90       	pop	r13
    2938:	cf 90       	pop	r12
    293a:	bf 90       	pop	r11
    293c:	af 90       	pop	r10
    293e:	9f 90       	pop	r9
    2940:	8f 90       	pop	r8
    2942:	08 95       	ret

00002944 <roll>:
	
uint16_t freqs[] = {233, 262, 277, 277, 311, 262, 233, 208, 233, 233, 262, 277, 233, 208, 415, 415, 311, 233, 233, 262, 277, 233, 277, 311, 262, 233, 262, 233, 208, 233, 233, 262, 277, 233, 208, 311, 311, 311, 349, 311, 277, 311, 349, 277, 311, 311, 311, 349, 311, 208, 208, 233, 262, 277, 233, 311, 349, 311};
	
uint16_t times[] = {191, 192, 192, 192, 192, 192, 192, 1536, 192, 192, 192, 192, 383, 192, 384, 192, 1152, 192, 192, 192, 192, 192, 192, 384, 192, 192, 192, 192, 764, 192, 192, 192, 192, 192, 384, 192, 192, 192, 191, 768, 960, 192, 192, 192, 192, 192, 192, 192, 192, 192, 1151, 192, 192, 192, 384, 192, 192, 576};

void roll(){
    2944:	6f 92       	push	r6
    2946:	7f 92       	push	r7
    2948:	8f 92       	push	r8
    294a:	9f 92       	push	r9
    294c:	af 92       	push	r10
    294e:	bf 92       	push	r11
    2950:	cf 92       	push	r12
    2952:	df 92       	push	r13
    2954:	ef 92       	push	r14
    2956:	ff 92       	push	r15
    2958:	0f 93       	push	r16
    295a:	1f 93       	push	r17
    295c:	cf 93       	push	r28
    295e:	df 93       	push	r29
    2960:	cd b7       	in	r28, 0x3d	; 61
    2962:	de b7       	in	r29, 0x3e	; 62
    2964:	2f 97       	sbiw	r28, 0x0f	; 15
    2966:	0f b6       	in	r0, 0x3f	; 63
    2968:	f8 94       	cli
    296a:	de bf       	out	0x3e, r29	; 62
    296c:	0f be       	out	0x3f, r0	; 63
    296e:	cd bf       	out	0x3d, r28	; 61
	uint8_t R[3] = {0, 255, 255};
    2970:	19 82       	std	Y+1, r1	; 0x01
    2972:	8f ef       	ldi	r24, 0xFF	; 255
    2974:	8a 83       	std	Y+2, r24	; 0x02
    2976:	8b 83       	std	Y+3, r24	; 0x03
	uint8_t G[3] = {64, 0, 255};
    2978:	90 e4       	ldi	r25, 0x40	; 64
    297a:	9c 83       	std	Y+4, r25	; 0x04
    297c:	1d 82       	std	Y+5, r1	; 0x05
    297e:	8e 83       	std	Y+6, r24	; 0x06
	uint8_t B[3] = {0, 255, 255};
    2980:	1f 82       	std	Y+7, r1	; 0x07
    2982:	88 87       	std	Y+8, r24	; 0x08
    2984:	89 87       	std	Y+9, r24	; 0x09
	uint8_t *ptrs[3] = {R, G, B};
    2986:	ce 01       	movw	r24, r28
    2988:	01 96       	adiw	r24, 0x01	; 1
    298a:	9b 87       	std	Y+11, r25	; 0x0b
    298c:	8a 87       	std	Y+10, r24	; 0x0a
    298e:	03 96       	adiw	r24, 0x03	; 3
    2990:	9d 87       	std	Y+13, r25	; 0x0d
    2992:	8c 87       	std	Y+12, r24	; 0x0c
    2994:	03 96       	adiw	r24, 0x03	; 3
    2996:	9f 87       	std	Y+15, r25	; 0x0f
    2998:	8e 87       	std	Y+14, r24	; 0x0e
    299a:	0f 2e       	mov	r0, r31
    299c:	f4 e0       	ldi	r31, 0x04	; 4
    299e:	cf 2e       	mov	r12, r31
    29a0:	f1 e0       	ldi	r31, 0x01	; 1
    29a2:	df 2e       	mov	r13, r31
    29a4:	f0 2d       	mov	r31, r0
    29a6:	0f 2e       	mov	r0, r31
    29a8:	f8 e7       	ldi	r31, 0x78	; 120
    29aa:	af 2e       	mov	r10, r31
    29ac:	f1 e0       	ldi	r31, 0x01	; 1
    29ae:	bf 2e       	mov	r11, r31
    29b0:	f0 2d       	mov	r31, r0
    29b2:	0f 2e       	mov	r0, r31
    29b4:	f8 e7       	ldi	r31, 0x78	; 120
    29b6:	8f 2e       	mov	r8, r31
    29b8:	f1 e0       	ldi	r31, 0x01	; 1
    29ba:	9f 2e       	mov	r9, r31
    29bc:	f0 2d       	mov	r31, r0
	for(int i = 0;i < sizeof(freqs)/2;i++){
		play_tone(freqs[i], times[i]/3);
		_delay_ms(50);
		ptrs[rand() % 3][rand() % 3] = (rand() % 4) * 16;
    29be:	0f 2e       	mov	r0, r31
    29c0:	f3 e0       	ldi	r31, 0x03	; 3
    29c2:	ef 2e       	mov	r14, r31
    29c4:	f1 2c       	mov	r15, r1
    29c6:	f0 2d       	mov	r31, r0
		set_LED(rand() % 3, rand() & 1 ? 3 : 0);
    29c8:	0f 2e       	mov	r0, r31
    29ca:	f3 e0       	ldi	r31, 0x03	; 3
    29cc:	6f 2e       	mov	r6, r31
    29ce:	f0 2d       	mov	r31, r0
    29d0:	71 2c       	mov	r7, r1
	uint8_t R[3] = {0, 255, 255};
	uint8_t G[3] = {64, 0, 255};
	uint8_t B[3] = {0, 255, 255};
	uint8_t *ptrs[3] = {R, G, B};
	for(int i = 0;i < sizeof(freqs)/2;i++){
		play_tone(freqs[i], times[i]/3);
    29d2:	f6 01       	movw	r30, r12
    29d4:	21 91       	ld	r18, Z+
    29d6:	31 91       	ld	r19, Z+
    29d8:	6f 01       	movw	r12, r30
    29da:	ab ea       	ldi	r26, 0xAB	; 171
    29dc:	ba ea       	ldi	r27, 0xAA	; 170
    29de:	0e 94 0b 23 	call	0x4616	; 0x4616 <__umulhisi3>
    29e2:	bc 01       	movw	r22, r24
    29e4:	76 95       	lsr	r23
    29e6:	67 95       	ror	r22
    29e8:	f5 01       	movw	r30, r10
    29ea:	81 91       	ld	r24, Z+
    29ec:	91 91       	ld	r25, Z+
    29ee:	5f 01       	movw	r10, r30
    29f0:	5f df       	rcall	.-322    	; 0x28b0 <play_tone>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    29f2:	ff ef       	ldi	r31, 0xFF	; 255
    29f4:	20 e7       	ldi	r18, 0x70	; 112
    29f6:	82 e0       	ldi	r24, 0x02	; 2
    29f8:	f1 50       	subi	r31, 0x01	; 1
    29fa:	20 40       	sbci	r18, 0x00	; 0
    29fc:	80 40       	sbci	r24, 0x00	; 0
    29fe:	e1 f7       	brne	.-8      	; 0x29f8 <roll+0xb4>
    2a00:	00 c0       	rjmp	.+0      	; 0x2a02 <roll+0xbe>
    2a02:	00 00       	nop
		_delay_ms(50);
		ptrs[rand() % 3][rand() % 3] = (rand() % 4) * 16;
    2a04:	0e 94 7f 23 	call	0x46fe	; 0x46fe <rand>
    2a08:	b7 01       	movw	r22, r14
    2a0a:	0e 94 ba 22 	call	0x4574	; 0x4574 <__divmodhi4>
    2a0e:	fc 01       	movw	r30, r24
    2a10:	ee 0f       	add	r30, r30
    2a12:	ff 1f       	adc	r31, r31
    2a14:	81 e0       	ldi	r24, 0x01	; 1
    2a16:	90 e0       	ldi	r25, 0x00	; 0
    2a18:	8c 0f       	add	r24, r28
    2a1a:	9d 1f       	adc	r25, r29
    2a1c:	e8 0f       	add	r30, r24
    2a1e:	f9 1f       	adc	r31, r25
    2a20:	01 85       	ldd	r16, Z+9	; 0x09
    2a22:	12 85       	ldd	r17, Z+10	; 0x0a
    2a24:	0e 94 7f 23 	call	0x46fe	; 0x46fe <rand>
    2a28:	b7 01       	movw	r22, r14
    2a2a:	0e 94 ba 22 	call	0x4574	; 0x4574 <__divmodhi4>
    2a2e:	08 0f       	add	r16, r24
    2a30:	19 1f       	adc	r17, r25
    2a32:	0e 94 7f 23 	call	0x46fe	; 0x46fe <rand>
    2a36:	83 70       	andi	r24, 0x03	; 3
    2a38:	90 78       	andi	r25, 0x80	; 128
    2a3a:	99 23       	and	r25, r25
    2a3c:	24 f4       	brge	.+8      	; 0x2a46 <roll+0x102>
    2a3e:	01 97       	sbiw	r24, 0x01	; 1
    2a40:	8c 6f       	ori	r24, 0xFC	; 252
    2a42:	9f 6f       	ori	r25, 0xFF	; 255
    2a44:	01 96       	adiw	r24, 0x01	; 1
    2a46:	82 95       	swap	r24
    2a48:	80 7f       	andi	r24, 0xF0	; 240
    2a4a:	f8 01       	movw	r30, r16
    2a4c:	80 83       	st	Z, r24
		set_LED(rand() % 3, rand() & 1 ? 3 : 0);
    2a4e:	0e 94 7f 23 	call	0x46fe	; 0x46fe <rand>
    2a52:	80 fd       	sbrc	r24, 0
    2a54:	02 c0       	rjmp	.+4      	; 0x2a5a <roll+0x116>
    2a56:	17 2d       	mov	r17, r7
    2a58:	01 c0       	rjmp	.+2      	; 0x2a5c <roll+0x118>
    2a5a:	16 2d       	mov	r17, r6
    2a5c:	0e 94 7f 23 	call	0x46fe	; 0x46fe <rand>
    2a60:	b7 01       	movw	r22, r14
    2a62:	0e 94 ba 22 	call	0x4574	; 0x4574 <__divmodhi4>
    2a66:	61 2f       	mov	r22, r17
    2a68:	7f d4       	rcall	.+2302   	; 0x3368 <set_LED>
		update_LEDS(0);
    2a6a:	80 e0       	ldi	r24, 0x00	; 0
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	9b d4       	rcall	.+2358   	; 0x33a6 <update_LEDS>
		set_RGB(R, G, B);
    2a70:	ae 01       	movw	r20, r28
    2a72:	49 5f       	subi	r20, 0xF9	; 249
    2a74:	5f 4f       	sbci	r21, 0xFF	; 255
    2a76:	be 01       	movw	r22, r28
    2a78:	6c 5f       	subi	r22, 0xFC	; 252
    2a7a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a7c:	ce 01       	movw	r24, r28
    2a7e:	01 96       	adiw	r24, 0x01	; 1
    2a80:	07 d5       	rcall	.+2574   	; 0x3490 <set_RGB>
void roll(){
	uint8_t R[3] = {0, 255, 255};
	uint8_t G[3] = {64, 0, 255};
	uint8_t B[3] = {0, 255, 255};
	uint8_t *ptrs[3] = {R, G, B};
	for(int i = 0;i < sizeof(freqs)/2;i++){
    2a82:	c8 14       	cp	r12, r8
    2a84:	d9 04       	cpc	r13, r9
    2a86:	09 f0       	breq	.+2      	; 0x2a8a <roll+0x146>
    2a88:	a4 cf       	rjmp	.-184    	; 0x29d2 <roll+0x8e>
    2a8a:	ff ef       	ldi	r31, 0xFF	; 255
    2a8c:	20 e7       	ldi	r18, 0x70	; 112
    2a8e:	82 e0       	ldi	r24, 0x02	; 2
    2a90:	f1 50       	subi	r31, 0x01	; 1
    2a92:	20 40       	sbci	r18, 0x00	; 0
    2a94:	80 40       	sbci	r24, 0x00	; 0
    2a96:	e1 f7       	brne	.-8      	; 0x2a90 <roll+0x14c>
    2a98:	00 c0       	rjmp	.+0      	; 0x2a9a <roll+0x156>
    2a9a:	00 00       	nop
		set_LED(rand() % 3, rand() & 1 ? 3 : 0);
		update_LEDS(0);
		set_RGB(R, G, B);
	}
	_delay_ms(50);
	R[2] = R[1] = R[0] = 0;
    2a9c:	19 82       	std	Y+1, r1	; 0x01
    2a9e:	1a 82       	std	Y+2, r1	; 0x02
    2aa0:	1b 82       	std	Y+3, r1	; 0x03
	set_RGB(R, R, R);
    2aa2:	ae 01       	movw	r20, r28
    2aa4:	4f 5f       	subi	r20, 0xFF	; 255
    2aa6:	5f 4f       	sbci	r21, 0xFF	; 255
    2aa8:	ba 01       	movw	r22, r20
    2aaa:	ca 01       	movw	r24, r20
	set_LED(0, 0);
    2aac:	f1 d4       	rcall	.+2530   	; 0x3490 <set_RGB>
    2aae:	60 e0       	ldi	r22, 0x00	; 0
    2ab0:	80 e0       	ldi	r24, 0x00	; 0
	set_LED(1, 0);
    2ab2:	5a d4       	rcall	.+2228   	; 0x3368 <set_LED>
    2ab4:	60 e0       	ldi	r22, 0x00	; 0
    2ab6:	81 e0       	ldi	r24, 0x01	; 1
    2ab8:	57 d4       	rcall	.+2222   	; 0x3368 <set_LED>
	set_LED(2, 0);
    2aba:	60 e0       	ldi	r22, 0x00	; 0
    2abc:	82 e0       	ldi	r24, 0x02	; 2
    2abe:	54 d4       	rcall	.+2216   	; 0x3368 <set_LED>
    2ac0:	9f ef       	ldi	r25, 0xFF	; 255
    2ac2:	e0 e7       	ldi	r30, 0x70	; 112
    2ac4:	f2 e0       	ldi	r31, 0x02	; 2
    2ac6:	91 50       	subi	r25, 0x01	; 1
    2ac8:	e0 40       	sbci	r30, 0x00	; 0
    2aca:	f0 40       	sbci	r31, 0x00	; 0
    2acc:	e1 f7       	brne	.-8      	; 0x2ac6 <roll+0x182>
    2ace:	00 c0       	rjmp	.+0      	; 0x2ad0 <roll+0x18c>
    2ad0:	00 00       	nop
    2ad2:	2f 96       	adiw	r28, 0x0f	; 15
	_delay_ms(50);
}
    2ad4:	0f b6       	in	r0, 0x3f	; 63
    2ad6:	f8 94       	cli
    2ad8:	de bf       	out	0x3e, r29	; 62
    2ada:	0f be       	out	0x3f, r0	; 63
    2adc:	cd bf       	out	0x3d, r28	; 61
    2ade:	df 91       	pop	r29
    2ae0:	cf 91       	pop	r28
    2ae2:	1f 91       	pop	r17
    2ae4:	0f 91       	pop	r16
    2ae6:	ff 90       	pop	r15
    2ae8:	ef 90       	pop	r14
    2aea:	df 90       	pop	r13
    2aec:	cf 90       	pop	r12
    2aee:	bf 90       	pop	r11
    2af0:	af 90       	pop	r10
    2af2:	9f 90       	pop	r9
    2af4:	8f 90       	pop	r8
    2af6:	7f 90       	pop	r7
    2af8:	6f 90       	pop	r6
    2afa:	08 95       	ret

00002afc <play_audio>:
    2afc:	0f 93       	push	r16
	I2C_write(0); //power-down bits = 00 -> normal op, don't care data bits = 0000
	I2C_write(val); //next 8 bits is the DAC register value
	I2C_stop();
}

void play_audio(const uint8_t *PROGMEM samples, uint16_t len){
    2afe:	1f 93       	push	r17
    2b00:	cf 93       	push	r28
    2b02:	df 93       	push	r29
	for(uint16_t i = 0;i < len;i++){
    2b04:	61 15       	cp	r22, r1
    2b06:	71 05       	cpc	r23, r1
    2b08:	59 f0       	breq	.+22     	; 0x2b20 <play_audio+0x24>
    2b0a:	8c 01       	movw	r16, r24
    2b0c:	ec 01       	movw	r28, r24
    2b0e:	06 0f       	add	r16, r22
    2b10:	17 1f       	adc	r17, r23
		dac_write(pgm_read_byte(samples + i));
    2b12:	fe 01       	movw	r30, r28
    2b14:	84 91       	lpm	r24, Z
    2b16:	c0 de       	rcall	.-640    	; 0x2898 <dac_write>
    2b18:	21 96       	adiw	r28, 0x01	; 1
	I2C_write(val); //next 8 bits is the DAC register value
	I2C_stop();
}

void play_audio(const uint8_t *PROGMEM samples, uint16_t len){
	for(uint16_t i = 0;i < len;i++){
    2b1a:	c0 17       	cp	r28, r16
    2b1c:	d1 07       	cpc	r29, r17
    2b1e:	c9 f7       	brne	.-14     	; 0x2b12 <play_audio+0x16>
		dac_write(pgm_read_byte(samples + i));
	}
    2b20:	df 91       	pop	r29
    2b22:	cf 91       	pop	r28
    2b24:	1f 91       	pop	r17
    2b26:	0f 91       	pop	r16
    2b28:	08 95       	ret

00002b2a <get_encoder_ticks>:
/*Sets the specified encoder counter to the specified value*/
void set_encoder_ticks(uint8_t which, int32_t ticks){
	if(which){
		encoder1_ticks = ticks;
	} else {
		encoder0_ticks = ticks;
    2b2a:	88 23       	and	r24, r24
    2b2c:	49 f0       	breq	.+18     	; 0x2b40 <get_encoder_ticks+0x16>
    2b2e:	60 91 1d 02 	lds	r22, 0x021D	; 0x80021d <encoder1_ticks>
    2b32:	70 91 1e 02 	lds	r23, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2b36:	80 91 1f 02 	lds	r24, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2b3a:	90 91 20 02 	lds	r25, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2b3e:	08 95       	ret
    2b40:	60 91 19 02 	lds	r22, 0x0219	; 0x800219 <encoder0_ticks>
    2b44:	70 91 1a 02 	lds	r23, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2b48:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2b4c:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2b50:	08 95       	ret

00002b52 <init_encoders>:
	}
}

/*Initializes the encoders*/
void init_encoders(){
	EIMSK &= 0x33; //Disable pin change interrupts
    2b52:	8d b3       	in	r24, 0x1d	; 29
    2b54:	83 73       	andi	r24, 0x33	; 51
    2b56:	8d bb       	out	0x1d, r24	; 29
	DDRE &= 0x3F; //Set PE6, PE7 as inputs
    2b58:	8d b1       	in	r24, 0x0d	; 13
    2b5a:	8f 73       	andi	r24, 0x3F	; 63
    2b5c:	8d b9       	out	0x0d, r24	; 13
	DDRD &= 0xF3; //Set PD2, PD3 as inputs
    2b5e:	8a b1       	in	r24, 0x0a	; 10
    2b60:	83 7f       	andi	r24, 0xF3	; 243
    2b62:	8a b9       	out	0x0a, r24	; 10
	PORTE |= 0xC0; //Enable pullups on PE6, PE7
    2b64:	8e b1       	in	r24, 0x0e	; 14
    2b66:	80 6c       	ori	r24, 0xC0	; 192
    2b68:	8e b9       	out	0x0e, r24	; 14
	PORTD |= 0x0C; //Enable pullups on PD2, PD3
    2b6a:	8b b1       	in	r24, 0x0b	; 11
    2b6c:	8c 60       	ori	r24, 0x0C	; 12
    2b6e:	8b b9       	out	0x0b, r24	; 11
	encoder0_ticks = 0; //Reset count
    2b70:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <encoder0_ticks>
    2b74:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <encoder0_ticks+0x1>
    2b78:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <encoder0_ticks+0x2>
    2b7c:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <encoder0_ticks+0x3>
	encoder1_ticks = 0;
    2b80:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <encoder1_ticks>
    2b84:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <encoder1_ticks+0x1>
    2b88:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <encoder1_ticks+0x2>
    2b8c:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <encoder1_ticks+0x3>
	EICRB |= 0x50; //Enable pin change interrupt on PE6, PE7
    2b90:	ea e6       	ldi	r30, 0x6A	; 106
    2b92:	f0 e0       	ldi	r31, 0x00	; 0
    2b94:	80 81       	ld	r24, Z
    2b96:	80 65       	ori	r24, 0x50	; 80
    2b98:	80 83       	st	Z, r24
	EICRA |= 0x50; //Enable pin change interrupt on PD2, PD3
    2b9a:	e9 e6       	ldi	r30, 0x69	; 105
    2b9c:	f0 e0       	ldi	r31, 0x00	; 0
    2b9e:	80 81       	ld	r24, Z
    2ba0:	80 65       	ori	r24, 0x50	; 80
    2ba2:	80 83       	st	Z, r24
	EIMSK |= 0xCC; //Re-enable pin change mask for 2, 3, 6, 7
    2ba4:	8d b3       	in	r24, 0x1d	; 29
    2ba6:	8c 6c       	ori	r24, 0xCC	; 204
    2ba8:	8d bb       	out	0x1d, r24	; 29
    2baa:	08 95       	ret

00002bac <reset_encoder>:
}

/*Resets the specified encoder count. Passing which = 2 will reset both*/
void reset_encoder(uint8_t which){
	EIMSK &= 0x33; //Disable pin change interrupts
    2bac:	9d b3       	in	r25, 0x1d	; 29
    2bae:	93 73       	andi	r25, 0x33	; 51
    2bb0:	9d bb       	out	0x1d, r25	; 29
	switch(which){
    2bb2:	81 30       	cpi	r24, 0x01	; 1
    2bb4:	a9 f0       	breq	.+42     	; 0x2be0 <reset_encoder+0x34>
    2bb6:	18 f0       	brcs	.+6      	; 0x2bbe <reset_encoder+0x12>
    2bb8:	82 30       	cpi	r24, 0x02	; 2
    2bba:	51 f0       	breq	.+20     	; 0x2bd0 <reset_encoder+0x24>
    2bbc:	19 c0       	rjmp	.+50     	; 0x2bf0 <reset_encoder+0x44>
		case 0:
			encoder0_ticks = 0;
    2bbe:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <encoder0_ticks>
    2bc2:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <encoder0_ticks+0x1>
    2bc6:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <encoder0_ticks+0x2>
    2bca:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <encoder0_ticks+0x3>
			break;
    2bce:	10 c0       	rjmp	.+32     	; 0x2bf0 <reset_encoder+0x44>
		case 2:
			encoder0_ticks = 0;
    2bd0:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <encoder0_ticks>
    2bd4:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <encoder0_ticks+0x1>
    2bd8:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <encoder0_ticks+0x2>
    2bdc:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <encoder0_ticks+0x3>
		case 1:
			encoder1_ticks = 0;
    2be0:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <encoder1_ticks>
    2be4:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <encoder1_ticks+0x1>
    2be8:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <encoder1_ticks+0x2>
    2bec:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <encoder1_ticks+0x3>
			break;
	}
	EIMSK |= 0xCC; //Enable pin change interrupt on PE6, PE7
    2bf0:	8d b3       	in	r24, 0x1d	; 29
    2bf2:	8c 6c       	ori	r24, 0xCC	; 204
    2bf4:	8d bb       	out	0x1d, r24	; 29
    2bf6:	08 95       	ret

00002bf8 <__vector_7>:
}

ISR(INT6_vect){ //PE6, A
    2bf8:	1f 92       	push	r1
    2bfa:	0f 92       	push	r0
    2bfc:	0f b6       	in	r0, 0x3f	; 63
    2bfe:	0f 92       	push	r0
    2c00:	11 24       	eor	r1, r1
    2c02:	8f 93       	push	r24
    2c04:	9f 93       	push	r25
    2c06:	af 93       	push	r26
    2c08:	bf 93       	push	r27
	uint8_t state = PINE;
    2c0a:	8c b1       	in	r24, 0x0c	; 12
	if(state & (1<<PE6)){ //A rising
    2c0c:	86 ff       	sbrs	r24, 6
    2c0e:	2a c0       	rjmp	.+84     	; 0x2c64 <__vector_7+0x6c>
		if(state & (1<<PE7)){ //B high
    2c10:	88 23       	and	r24, r24
    2c12:	a4 f4       	brge	.+40     	; 0x2c3c <__vector_7+0x44>
			encoder0_ticks++;
    2c14:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <encoder0_ticks>
    2c18:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2c1c:	a0 91 1b 02 	lds	r26, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2c20:	b0 91 1c 02 	lds	r27, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2c24:	01 96       	adiw	r24, 0x01	; 1
    2c26:	a1 1d       	adc	r26, r1
    2c28:	b1 1d       	adc	r27, r1
    2c2a:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <encoder0_ticks>
    2c2e:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <encoder0_ticks+0x1>
    2c32:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <encoder0_ticks+0x2>
    2c36:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <encoder0_ticks+0x3>
    2c3a:	3d c0       	rjmp	.+122    	; 0x2cb6 <__vector_7+0xbe>
		} else { //B low
			encoder0_ticks--;
    2c3c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <encoder0_ticks>
    2c40:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2c44:	a0 91 1b 02 	lds	r26, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2c48:	b0 91 1c 02 	lds	r27, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2c4c:	01 97       	sbiw	r24, 0x01	; 1
    2c4e:	a1 09       	sbc	r26, r1
    2c50:	b1 09       	sbc	r27, r1
    2c52:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <encoder0_ticks>
    2c56:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <encoder0_ticks+0x1>
    2c5a:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <encoder0_ticks+0x2>
    2c5e:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <encoder0_ticks+0x3>
    2c62:	29 c0       	rjmp	.+82     	; 0x2cb6 <__vector_7+0xbe>
		}
	} else { //A falling
		if(state & (1<<PE7)){ //B high
    2c64:	88 23       	and	r24, r24
    2c66:	a4 f4       	brge	.+40     	; 0x2c90 <__vector_7+0x98>
			encoder0_ticks--;
    2c68:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <encoder0_ticks>
    2c6c:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2c70:	a0 91 1b 02 	lds	r26, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2c74:	b0 91 1c 02 	lds	r27, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2c78:	01 97       	sbiw	r24, 0x01	; 1
    2c7a:	a1 09       	sbc	r26, r1
    2c7c:	b1 09       	sbc	r27, r1
    2c7e:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <encoder0_ticks>
    2c82:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <encoder0_ticks+0x1>
    2c86:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <encoder0_ticks+0x2>
    2c8a:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <encoder0_ticks+0x3>
    2c8e:	13 c0       	rjmp	.+38     	; 0x2cb6 <__vector_7+0xbe>
		} else { //B low
			encoder0_ticks++;
    2c90:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <encoder0_ticks>
    2c94:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2c98:	a0 91 1b 02 	lds	r26, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2c9c:	b0 91 1c 02 	lds	r27, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2ca0:	01 96       	adiw	r24, 0x01	; 1
    2ca2:	a1 1d       	adc	r26, r1
    2ca4:	b1 1d       	adc	r27, r1
    2ca6:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <encoder0_ticks>
    2caa:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <encoder0_ticks+0x1>
    2cae:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <encoder0_ticks+0x2>
    2cb2:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <encoder0_ticks+0x3>
		}
	}
}
    2cb6:	bf 91       	pop	r27
    2cb8:	af 91       	pop	r26
    2cba:	9f 91       	pop	r25
    2cbc:	8f 91       	pop	r24
    2cbe:	0f 90       	pop	r0
    2cc0:	0f be       	out	0x3f, r0	; 63
    2cc2:	0f 90       	pop	r0
    2cc4:	1f 90       	pop	r1
    2cc6:	18 95       	reti

00002cc8 <__vector_8>:

ISR(INT7_vect){ //PE7, B
    2cc8:	1f 92       	push	r1
    2cca:	0f 92       	push	r0
    2ccc:	0f b6       	in	r0, 0x3f	; 63
    2cce:	0f 92       	push	r0
    2cd0:	11 24       	eor	r1, r1
    2cd2:	8f 93       	push	r24
    2cd4:	9f 93       	push	r25
    2cd6:	af 93       	push	r26
    2cd8:	bf 93       	push	r27
	uint8_t state = PINE;
    2cda:	8c b1       	in	r24, 0x0c	; 12
	if(state & (1<<PE7)){ //B rising
    2cdc:	88 23       	and	r24, r24
    2cde:	54 f5       	brge	.+84     	; 0x2d34 <__vector_8+0x6c>
		if(state & (1<<PE6)){ //A high
    2ce0:	86 ff       	sbrs	r24, 6
    2ce2:	14 c0       	rjmp	.+40     	; 0x2d0c <__vector_8+0x44>
			encoder0_ticks--;
    2ce4:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <encoder0_ticks>
    2ce8:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2cec:	a0 91 1b 02 	lds	r26, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2cf0:	b0 91 1c 02 	lds	r27, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2cf4:	01 97       	sbiw	r24, 0x01	; 1
    2cf6:	a1 09       	sbc	r26, r1
    2cf8:	b1 09       	sbc	r27, r1
    2cfa:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <encoder0_ticks>
    2cfe:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <encoder0_ticks+0x1>
    2d02:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <encoder0_ticks+0x2>
    2d06:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <encoder0_ticks+0x3>
    2d0a:	3d c0       	rjmp	.+122    	; 0x2d86 <__vector_8+0xbe>
		} else { //A low
			encoder0_ticks++;
    2d0c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <encoder0_ticks>
    2d10:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2d14:	a0 91 1b 02 	lds	r26, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2d18:	b0 91 1c 02 	lds	r27, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2d1c:	01 96       	adiw	r24, 0x01	; 1
    2d1e:	a1 1d       	adc	r26, r1
    2d20:	b1 1d       	adc	r27, r1
    2d22:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <encoder0_ticks>
    2d26:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <encoder0_ticks+0x1>
    2d2a:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <encoder0_ticks+0x2>
    2d2e:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <encoder0_ticks+0x3>
    2d32:	29 c0       	rjmp	.+82     	; 0x2d86 <__vector_8+0xbe>
		}
	} else { //B falling
		if(state & (1<<PE6)){ //A high
    2d34:	86 ff       	sbrs	r24, 6
    2d36:	14 c0       	rjmp	.+40     	; 0x2d60 <__vector_8+0x98>
			encoder0_ticks++;
    2d38:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <encoder0_ticks>
    2d3c:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2d40:	a0 91 1b 02 	lds	r26, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2d44:	b0 91 1c 02 	lds	r27, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2d48:	01 96       	adiw	r24, 0x01	; 1
    2d4a:	a1 1d       	adc	r26, r1
    2d4c:	b1 1d       	adc	r27, r1
    2d4e:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <encoder0_ticks>
    2d52:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <encoder0_ticks+0x1>
    2d56:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <encoder0_ticks+0x2>
    2d5a:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <encoder0_ticks+0x3>
    2d5e:	13 c0       	rjmp	.+38     	; 0x2d86 <__vector_8+0xbe>
		} else { //A low
			encoder0_ticks--;
    2d60:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <encoder0_ticks>
    2d64:	90 91 1a 02 	lds	r25, 0x021A	; 0x80021a <encoder0_ticks+0x1>
    2d68:	a0 91 1b 02 	lds	r26, 0x021B	; 0x80021b <encoder0_ticks+0x2>
    2d6c:	b0 91 1c 02 	lds	r27, 0x021C	; 0x80021c <encoder0_ticks+0x3>
    2d70:	01 97       	sbiw	r24, 0x01	; 1
    2d72:	a1 09       	sbc	r26, r1
    2d74:	b1 09       	sbc	r27, r1
    2d76:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <encoder0_ticks>
    2d7a:	90 93 1a 02 	sts	0x021A, r25	; 0x80021a <encoder0_ticks+0x1>
    2d7e:	a0 93 1b 02 	sts	0x021B, r26	; 0x80021b <encoder0_ticks+0x2>
    2d82:	b0 93 1c 02 	sts	0x021C, r27	; 0x80021c <encoder0_ticks+0x3>
		}
	}
}
    2d86:	bf 91       	pop	r27
    2d88:	af 91       	pop	r26
    2d8a:	9f 91       	pop	r25
    2d8c:	8f 91       	pop	r24
    2d8e:	0f 90       	pop	r0
    2d90:	0f be       	out	0x3f, r0	; 63
    2d92:	0f 90       	pop	r0
    2d94:	1f 90       	pop	r1
    2d96:	18 95       	reti

00002d98 <__vector_3>:

ISR(INT2_vect){ //PD2, A
    2d98:	1f 92       	push	r1
    2d9a:	0f 92       	push	r0
    2d9c:	0f b6       	in	r0, 0x3f	; 63
    2d9e:	0f 92       	push	r0
    2da0:	11 24       	eor	r1, r1
    2da2:	8f 93       	push	r24
    2da4:	9f 93       	push	r25
    2da6:	af 93       	push	r26
    2da8:	bf 93       	push	r27
	uint8_t state = PIND;
    2daa:	89 b1       	in	r24, 0x09	; 9
	if(state & (1<<PD2)){ //A rising
    2dac:	82 ff       	sbrs	r24, 2
    2dae:	2a c0       	rjmp	.+84     	; 0x2e04 <__vector_3+0x6c>
		if(state & (1<<PD3)){ //B high
    2db0:	83 ff       	sbrs	r24, 3
    2db2:	14 c0       	rjmp	.+40     	; 0x2ddc <__vector_3+0x44>
			encoder1_ticks++;
    2db4:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <encoder1_ticks>
    2db8:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2dbc:	a0 91 1f 02 	lds	r26, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2dc0:	b0 91 20 02 	lds	r27, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2dc4:	01 96       	adiw	r24, 0x01	; 1
    2dc6:	a1 1d       	adc	r26, r1
    2dc8:	b1 1d       	adc	r27, r1
    2dca:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <encoder1_ticks>
    2dce:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <encoder1_ticks+0x1>
    2dd2:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <encoder1_ticks+0x2>
    2dd6:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <encoder1_ticks+0x3>
    2dda:	3d c0       	rjmp	.+122    	; 0x2e56 <__vector_3+0xbe>
			} else { //B low
			encoder1_ticks--;
    2ddc:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <encoder1_ticks>
    2de0:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2de4:	a0 91 1f 02 	lds	r26, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2de8:	b0 91 20 02 	lds	r27, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2dec:	01 97       	sbiw	r24, 0x01	; 1
    2dee:	a1 09       	sbc	r26, r1
    2df0:	b1 09       	sbc	r27, r1
    2df2:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <encoder1_ticks>
    2df6:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <encoder1_ticks+0x1>
    2dfa:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <encoder1_ticks+0x2>
    2dfe:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <encoder1_ticks+0x3>
    2e02:	29 c0       	rjmp	.+82     	; 0x2e56 <__vector_3+0xbe>
		}
		} else { //A falling
		if(state & (1<<PD3)){ //B high
    2e04:	83 ff       	sbrs	r24, 3
    2e06:	14 c0       	rjmp	.+40     	; 0x2e30 <__vector_3+0x98>
			encoder1_ticks--;
    2e08:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <encoder1_ticks>
    2e0c:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2e10:	a0 91 1f 02 	lds	r26, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2e14:	b0 91 20 02 	lds	r27, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2e18:	01 97       	sbiw	r24, 0x01	; 1
    2e1a:	a1 09       	sbc	r26, r1
    2e1c:	b1 09       	sbc	r27, r1
    2e1e:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <encoder1_ticks>
    2e22:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <encoder1_ticks+0x1>
    2e26:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <encoder1_ticks+0x2>
    2e2a:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <encoder1_ticks+0x3>
    2e2e:	13 c0       	rjmp	.+38     	; 0x2e56 <__vector_3+0xbe>
			} else { //B low
			encoder1_ticks++;
    2e30:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <encoder1_ticks>
    2e34:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2e38:	a0 91 1f 02 	lds	r26, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2e3c:	b0 91 20 02 	lds	r27, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2e40:	01 96       	adiw	r24, 0x01	; 1
    2e42:	a1 1d       	adc	r26, r1
    2e44:	b1 1d       	adc	r27, r1
    2e46:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <encoder1_ticks>
    2e4a:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <encoder1_ticks+0x1>
    2e4e:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <encoder1_ticks+0x2>
    2e52:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <encoder1_ticks+0x3>
		}
	}
}
    2e56:	bf 91       	pop	r27
    2e58:	af 91       	pop	r26
    2e5a:	9f 91       	pop	r25
    2e5c:	8f 91       	pop	r24
    2e5e:	0f 90       	pop	r0
    2e60:	0f be       	out	0x3f, r0	; 63
    2e62:	0f 90       	pop	r0
    2e64:	1f 90       	pop	r1
    2e66:	18 95       	reti

00002e68 <__vector_4>:

ISR(INT3_vect){ //PD3, B
    2e68:	1f 92       	push	r1
    2e6a:	0f 92       	push	r0
    2e6c:	0f b6       	in	r0, 0x3f	; 63
    2e6e:	0f 92       	push	r0
    2e70:	11 24       	eor	r1, r1
    2e72:	8f 93       	push	r24
    2e74:	9f 93       	push	r25
    2e76:	af 93       	push	r26
    2e78:	bf 93       	push	r27
	uint8_t state = PIND;
    2e7a:	89 b1       	in	r24, 0x09	; 9
	if(state & (1<<PD3)){ //B rising
    2e7c:	83 ff       	sbrs	r24, 3
    2e7e:	2a c0       	rjmp	.+84     	; 0x2ed4 <__vector_4+0x6c>
		if(state & (1<<PD2)){ //A high
    2e80:	82 ff       	sbrs	r24, 2
    2e82:	14 c0       	rjmp	.+40     	; 0x2eac <__vector_4+0x44>
			encoder1_ticks--;
    2e84:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <encoder1_ticks>
    2e88:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2e8c:	a0 91 1f 02 	lds	r26, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2e90:	b0 91 20 02 	lds	r27, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2e94:	01 97       	sbiw	r24, 0x01	; 1
    2e96:	a1 09       	sbc	r26, r1
    2e98:	b1 09       	sbc	r27, r1
    2e9a:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <encoder1_ticks>
    2e9e:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <encoder1_ticks+0x1>
    2ea2:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <encoder1_ticks+0x2>
    2ea6:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <encoder1_ticks+0x3>
    2eaa:	3d c0       	rjmp	.+122    	; 0x2f26 <__vector_4+0xbe>
			} else { //A low
			encoder1_ticks++;
    2eac:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <encoder1_ticks>
    2eb0:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2eb4:	a0 91 1f 02 	lds	r26, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2eb8:	b0 91 20 02 	lds	r27, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2ebc:	01 96       	adiw	r24, 0x01	; 1
    2ebe:	a1 1d       	adc	r26, r1
    2ec0:	b1 1d       	adc	r27, r1
    2ec2:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <encoder1_ticks>
    2ec6:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <encoder1_ticks+0x1>
    2eca:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <encoder1_ticks+0x2>
    2ece:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <encoder1_ticks+0x3>
    2ed2:	29 c0       	rjmp	.+82     	; 0x2f26 <__vector_4+0xbe>
		}
		} else { //B falling
		if(state & (1<<PD2)){ //A high
    2ed4:	82 ff       	sbrs	r24, 2
    2ed6:	14 c0       	rjmp	.+40     	; 0x2f00 <__vector_4+0x98>
			encoder1_ticks++;
    2ed8:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <encoder1_ticks>
    2edc:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2ee0:	a0 91 1f 02 	lds	r26, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2ee4:	b0 91 20 02 	lds	r27, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2ee8:	01 96       	adiw	r24, 0x01	; 1
    2eea:	a1 1d       	adc	r26, r1
    2eec:	b1 1d       	adc	r27, r1
    2eee:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <encoder1_ticks>
    2ef2:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <encoder1_ticks+0x1>
    2ef6:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <encoder1_ticks+0x2>
    2efa:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <encoder1_ticks+0x3>
    2efe:	13 c0       	rjmp	.+38     	; 0x2f26 <__vector_4+0xbe>
			} else { //A low
			encoder1_ticks--;
    2f00:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <encoder1_ticks>
    2f04:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <encoder1_ticks+0x1>
    2f08:	a0 91 1f 02 	lds	r26, 0x021F	; 0x80021f <encoder1_ticks+0x2>
    2f0c:	b0 91 20 02 	lds	r27, 0x0220	; 0x800220 <encoder1_ticks+0x3>
    2f10:	01 97       	sbiw	r24, 0x01	; 1
    2f12:	a1 09       	sbc	r26, r1
    2f14:	b1 09       	sbc	r27, r1
    2f16:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <encoder1_ticks>
    2f1a:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <encoder1_ticks+0x1>
    2f1e:	a0 93 1f 02 	sts	0x021F, r26	; 0x80021f <encoder1_ticks+0x2>
    2f22:	b0 93 20 02 	sts	0x0220, r27	; 0x800220 <encoder1_ticks+0x3>
		}
	}
    2f26:	bf 91       	pop	r27
    2f28:	af 91       	pop	r26
    2f2a:	9f 91       	pop	r25
    2f2c:	8f 91       	pop	r24
    2f2e:	0f 90       	pop	r0
    2f30:	0f be       	out	0x3f, r0	; 63
    2f32:	0f 90       	pop	r0
    2f34:	1f 90       	pop	r1
    2f36:	18 95       	reti

00002f38 <handle_telemetry_packet>:
#include "CANCommon.h"
#include "CANMotorUnit.h"
#include "CANSerialNumbers.h"
#include "Port.h"

void handle_telemetry_packet(CANPacket *packet){
    2f38:	af 92       	push	r10
    2f3a:	bf 92       	push	r11
    2f3c:	cf 92       	push	r12
    2f3e:	df 92       	push	r13
    2f40:	ef 92       	push	r14
    2f42:	ff 92       	push	r15
    2f44:	0f 93       	push	r16
    2f46:	1f 93       	push	r17
    2f48:	cf 93       	push	r28
    2f4a:	df 93       	push	r29
    2f4c:	cd b7       	in	r28, 0x3d	; 61
    2f4e:	de b7       	in	r29, 0x3e	; 62
    2f50:	2b 97       	sbiw	r28, 0x0b	; 11
    2f52:	0f b6       	in	r0, 0x3f	; 63
    2f54:	f8 94       	cli
    2f56:	de bf       	out	0x3e, r29	; 62
    2f58:	0f be       	out	0x3f, r0	; 63
    2f5a:	cd bf       	out	0x3d, r28	; 61
    2f5c:	6c 01       	movw	r12, r24
	int32_t sensor_val = 0;
	CANPacket new_packet;
	uint8_t type;
	uint8_t target_group = GetSenderDeviceGroupCode(packet);
    2f5e:	13 d1       	rcall	.+550    	; 0x3186 <GetSenderDeviceGroupCode>
    2f60:	b8 2e       	mov	r11, r24
	uint8_t target_serial = GetSenderDeviceSerialNumber(packet);
    2f62:	c6 01       	movw	r24, r12
    2f64:	0d d1       	rcall	.+538    	; 0x3180 <GetSenderDeviceSerialNumber>
    2f66:	a8 2e       	mov	r10, r24
	switch(type = DecodeTelemetryType(packet)){
    2f68:	c6 01       	movw	r24, r12
    2f6a:	ea d0       	rcall	.+468    	; 0x3140 <DecodeTelemetryType>
    2f6c:	d8 2e       	mov	r13, r24
    2f6e:	83 e1       	ldi	r24, 0x13	; 19
    2f70:	d8 16       	cp	r13, r24
    2f72:	91 f0       	breq	.+36     	; 0x2f98 <handle_telemetry_packet+0x60>
    2f74:	8d 15       	cp	r24, r13
    2f76:	38 f0       	brcs	.+14     	; 0x2f86 <handle_telemetry_packet+0x4e>
    2f78:	8f e0       	ldi	r24, 0x0F	; 15
    2f7a:	d8 16       	cp	r13, r24
    2f7c:	e9 f0       	breq	.+58     	; 0x2fb8 <handle_telemetry_packet+0x80>
    2f7e:	80 e1       	ldi	r24, 0x10	; 16
    2f80:	d8 16       	cp	r13, r24
    2f82:	f9 f0       	breq	.+62     	; 0x2fc2 <handle_telemetry_packet+0x8a>
    2f84:	23 c0       	rjmp	.+70     	; 0x2fcc <handle_telemetry_packet+0x94>
    2f86:	85 e1       	ldi	r24, 0x15	; 21
    2f88:	d8 16       	cp	r13, r24
    2f8a:	a1 f1       	breq	.+104    	; 0x2ff4 <handle_telemetry_packet+0xbc>
    2f8c:	d8 16       	cp	r13, r24
    2f8e:	48 f0       	brcs	.+18     	; 0x2fa2 <handle_telemetry_packet+0x6a>
    2f90:	86 e1       	ldi	r24, 0x16	; 22
    2f92:	d8 16       	cp	r13, r24
    2f94:	61 f0       	breq	.+24     	; 0x2fae <handle_telemetry_packet+0x76>
    2f96:	1a c0       	rjmp	.+52     	; 0x2fcc <handle_telemetry_packet+0x94>
		case CAN_SCIENCE_SENSOR_GAS:
			sensor_val = read_gas_sensor();
    2f98:	79 dc       	rcall	.-1806   	; 0x288c <read_gas_sensor>
    2f9a:	7c 01       	movw	r14, r24
    2f9c:	00 e0       	ldi	r16, 0x00	; 0
    2f9e:	10 e0       	ldi	r17, 0x00	; 0
    2fa0:	2c c0       	rjmp	.+88     	; 0x2ffa <handle_telemetry_packet+0xc2>
			break;
    2fa2:	0e 94 ad 22 	call	0x455a	; 0x455a <read_uv_sensor>
		case CAN_SCIENCE_SENSOR_UV:
			sensor_val = read_uv_sensor();
    2fa6:	7c 01       	movw	r14, r24
    2fa8:	00 e0       	ldi	r16, 0x00	; 0
    2faa:	10 e0       	ldi	r17, 0x00	; 0
			break;
    2fac:	26 c0       	rjmp	.+76     	; 0x2ffa <handle_telemetry_packet+0xc2>
		case CAN_SCIENCE_SENSOR_MOISTURE:
			sensor_val = mars_moisture();
    2fae:	71 dc       	rcall	.-1822   	; 0x2892 <mars_moisture>
    2fb0:	7c 01       	movw	r14, r24
    2fb2:	00 e0       	ldi	r16, 0x00	; 0
    2fb4:	10 e0       	ldi	r17, 0x00	; 0
			break;
    2fb6:	21 c0       	rjmp	.+66     	; 0x2ffa <handle_telemetry_packet+0xc2>
		case CAN_SCIENCE_SENSOR_AIR_QUALITY:
			//sensor_val = read_aq_sensor();
			break;
		case PACKET_TELEMETRY_MOTOR1_ENC:
			sensor_val = get_encoder_ticks(0);
    2fb8:	80 e0       	ldi	r24, 0x00	; 0
    2fba:	b7 dd       	rcall	.-1170   	; 0x2b2a <get_encoder_ticks>
    2fbc:	7b 01       	movw	r14, r22
    2fbe:	8c 01       	movw	r16, r24
			break;
    2fc0:	1c c0       	rjmp	.+56     	; 0x2ffa <handle_telemetry_packet+0xc2>
		case PACKET_TELEMETRY_MOTOR2_ENC:
			sensor_val = get_encoder_ticks(1);
    2fc2:	81 e0       	ldi	r24, 0x01	; 1
    2fc4:	b2 dd       	rcall	.-1180   	; 0x2b2a <get_encoder_ticks>
    2fc6:	7b 01       	movw	r14, r22
    2fc8:	8c 01       	movw	r16, r24
			break;
    2fca:	17 c0       	rjmp	.+46     	; 0x2ffa <handle_telemetry_packet+0xc2>
		default:
			set_LED(LED_ERR, 3);
    2fcc:	63 e0       	ldi	r22, 0x03	; 3
    2fce:	82 e0       	ldi	r24, 0x02	; 2
    2fd0:	cb d1       	rcall	.+918    	; 0x3368 <set_LED>
    2fd2:	0e 94 46 20 	call	0x408c	; 0x408c <get_mS>
			update_LEDS(get_mS()/40);
    2fd6:	28 e2       	ldi	r18, 0x28	; 40
    2fd8:	30 e0       	ldi	r19, 0x00	; 0
    2fda:	40 e0       	ldi	r20, 0x00	; 0
    2fdc:	50 e0       	ldi	r21, 0x00	; 0
    2fde:	0e 94 cd 22 	call	0x459a	; 0x459a <__udivmodsi4>
    2fe2:	c9 01       	movw	r24, r18
    2fe4:	e0 d1       	rcall	.+960    	; 0x33a6 <update_LEDS>
			set_LED(LED_ERR, 0);
    2fe6:	60 e0       	ldi	r22, 0x00	; 0
    2fe8:	82 e0       	ldi	r24, 0x02	; 2
    2fea:	be d1       	rcall	.+892    	; 0x3368 <set_LED>
    2fec:	e1 2c       	mov	r14, r1
#include "CANMotorUnit.h"
#include "CANSerialNumbers.h"
#include "Port.h"

void handle_telemetry_packet(CANPacket *packet){
	int32_t sensor_val = 0;
    2fee:	f1 2c       	mov	r15, r1
    2ff0:	87 01       	movw	r16, r14
    2ff2:	03 c0       	rjmp	.+6      	; 0x2ffa <handle_telemetry_packet+0xc2>
    2ff4:	e1 2c       	mov	r14, r1
    2ff6:	f1 2c       	mov	r15, r1
		default:
			set_LED(LED_ERR, 3);
			update_LEDS(get_mS()/40);
			set_LED(LED_ERR, 0);
	}
	AssembleTelemetryReportPacket(&new_packet, target_group, target_serial, type, sensor_val);
    2ff8:	87 01       	movw	r16, r14
    2ffa:	2d 2d       	mov	r18, r13
    2ffc:	4a 2d       	mov	r20, r10
    2ffe:	6b 2d       	mov	r22, r11
    3000:	ce 01       	movw	r24, r28
    3002:	01 96       	adiw	r24, 0x01	; 1
	if(SendCANPacket(&new_packet)){
    3004:	70 d0       	rcall	.+224    	; 0x30e6 <AssembleTelemetryReportPacket>
    3006:	ce 01       	movw	r24, r28
    3008:	01 96       	adiw	r24, 0x01	; 1
    300a:	10 d6       	rcall	.+3104   	; 0x3c2c <SendCANPacket>
    300c:	89 2b       	or	r24, r25
    300e:	81 f0       	breq	.+32     	; 0x3030 <handle_telemetry_packet+0xf8>
		set_LED(LED_ERR, 3);
    3010:	63 e0       	ldi	r22, 0x03	; 3
    3012:	82 e0       	ldi	r24, 0x02	; 2
    3014:	a9 d1       	rcall	.+850    	; 0x3368 <set_LED>
		update_LEDS(get_mS()/40);
    3016:	0e 94 46 20 	call	0x408c	; 0x408c <get_mS>
    301a:	28 e2       	ldi	r18, 0x28	; 40
    301c:	30 e0       	ldi	r19, 0x00	; 0
    301e:	40 e0       	ldi	r20, 0x00	; 0
    3020:	50 e0       	ldi	r21, 0x00	; 0
    3022:	0e 94 cd 22 	call	0x459a	; 0x459a <__udivmodsi4>
    3026:	c9 01       	movw	r24, r18
    3028:	be d1       	rcall	.+892    	; 0x33a6 <update_LEDS>
    302a:	60 e0       	ldi	r22, 0x00	; 0
		set_LED(LED_ERR, 0);
    302c:	82 e0       	ldi	r24, 0x02	; 2
    302e:	9c d1       	rcall	.+824    	; 0x3368 <set_LED>
    3030:	2b 96       	adiw	r28, 0x0b	; 11
    3032:	0f b6       	in	r0, 0x3f	; 63
	}
}
    3034:	f8 94       	cli
    3036:	de bf       	out	0x3e, r29	; 62
    3038:	0f be       	out	0x3f, r0	; 63
    303a:	cd bf       	out	0x3d, r28	; 61
    303c:	df 91       	pop	r29
    303e:	cf 91       	pop	r28
    3040:	1f 91       	pop	r17
    3042:	0f 91       	pop	r16
    3044:	ff 90       	pop	r15
    3046:	ef 90       	pop	r14
    3048:	df 90       	pop	r13
    304a:	cf 90       	pop	r12
    304c:	bf 90       	pop	r11
    304e:	af 90       	pop	r10
    3050:	08 95       	ret

00003052 <handle_CAN_packet>:
    3052:	ff 92       	push	r15
    3054:	0f 93       	push	r16

void handle_CAN_packet(CANPacket *packet){
    3056:	1f 93       	push	r17
    3058:	cf 93       	push	r28
    305a:	df 93       	push	r29
    305c:	ec 01       	movw	r28, r24
	switch(GetPacketID(packet)){
    305e:	96 d0       	rcall	.+300    	; 0x318c <GetPacketID>
    3060:	8d 30       	cpi	r24, 0x0D	; 13
    3062:	91 05       	cpc	r25, r1
    3064:	a1 f0       	breq	.+40     	; 0x308e <handle_CAN_packet+0x3c>
    3066:	1c f4       	brge	.+6      	; 0x306e <handle_CAN_packet+0x1c>
    3068:	03 97       	sbiw	r24, 0x03	; 3
    306a:	41 f0       	breq	.+16     	; 0x307c <handle_CAN_packet+0x2a>
    306c:	2a c0       	rjmp	.+84     	; 0x30c2 <handle_CAN_packet+0x70>
    306e:	85 3f       	cpi	r24, 0xF5	; 245
    3070:	91 05       	cpc	r25, r1
    3072:	21 f1       	breq	.+72     	; 0x30bc <handle_CAN_packet+0x6a>
    3074:	87 3f       	cpi	r24, 0xF7	; 247
    3076:	91 05       	cpc	r25, r1
    3078:	a9 f0       	breq	.+42     	; 0x30a4 <handle_CAN_packet+0x52>
    307a:	23 c0       	rjmp	.+70     	; 0x30c2 <handle_CAN_packet+0x70>
		case ID_MOTOR_UNIT_PWM_DIR_SET: ;
			uint8_t motor = GetScienceMotorIDFromPacket(packet);
    307c:	ce 01       	movw	r24, r28
    307e:	f2 d0       	rcall	.+484    	; 0x3264 <GetScienceMotorIDFromPacket>
    3080:	18 2f       	mov	r17, r24
			int16_t pwm = GetScienceMotorPWMFromPacket(packet);
    3082:	ce 01       	movw	r24, r28
    3084:	e4 d0       	rcall	.+456    	; 0x324e <GetScienceMotorPWMFromPacket>
			set_motor_power(motor, pwm);
    3086:	bc 01       	movw	r22, r24
    3088:	81 2f       	mov	r24, r17
    308a:	7d d3       	rcall	.+1786   	; 0x3786 <set_motor_power>
			break;
    308c:	26 c0       	rjmp	.+76     	; 0x30da <handle_CAN_packet+0x88>
		case ID_SCIENCE_SERVO_SET: ;
			uint8_t servo = GetScienceServoIDFromPacket(packet);
    308e:	ce 01       	movw	r24, r28
    3090:	ec d0       	rcall	.+472    	; 0x326a <GetScienceServoIDFromPacket>
    3092:	18 2f       	mov	r17, r24
			uint8_t angle = GetScienceServoAngleFromPacket(packet);
    3094:	ce 01       	movw	r24, r28
    3096:	e3 d0       	rcall	.+454    	; 0x325e <GetScienceServoAngleFromPacket>
			set_servo_position(servo, angle);
    3098:	68 2f       	mov	r22, r24
    309a:	70 e0       	ldi	r23, 0x00	; 0
    309c:	81 2f       	mov	r24, r17
    309e:	90 e0       	ldi	r25, 0x00	; 0
    30a0:	58 d7       	rcall	.+3760   	; 0x3f52 <set_servo_position>
			break;
    30a2:	1b c0       	rjmp	.+54     	; 0x30da <handle_CAN_packet+0x88>
		case ID_LED_COLOR: ;
			uint8_t r = packet->data[1];
    30a4:	1c 81       	ldd	r17, Y+4	; 0x04
			uint8_t g = packet->data[2];
    30a6:	0d 81       	ldd	r16, Y+5	; 0x05
			uint8_t b = packet->data[3];
    30a8:	fe 80       	ldd	r15, Y+6	; 0x06
			uint8_t l = packet->data[4];
			set_motor_leds(0);
    30aa:	cf 81       	ldd	r28, Y+7	; 0x07
    30ac:	80 e0       	ldi	r24, 0x00	; 0
			set_RGB_LED(l, r, g, b);
    30ae:	64 d3       	rcall	.+1736   	; 0x3778 <set_motor_leds>
    30b0:	2f 2d       	mov	r18, r15
    30b2:	40 2f       	mov	r20, r16
    30b4:	61 2f       	mov	r22, r17
			break;
    30b6:	8c 2f       	mov	r24, r28
		case ID_TELEMETRY_PULL:
			handle_telemetry_packet(packet);
    30b8:	4f d2       	rcall	.+1182   	; 0x3558 <set_RGB_LED>
    30ba:	0f c0       	rjmp	.+30     	; 0x30da <handle_CAN_packet+0x88>
    30bc:	ce 01       	movw	r24, r28
			break;
    30be:	3c df       	rcall	.-392    	; 0x2f38 <handle_telemetry_packet>
		default:
			set_LED(LED_ERR, 3);
    30c0:	0c c0       	rjmp	.+24     	; 0x30da <handle_CAN_packet+0x88>
    30c2:	63 e0       	ldi	r22, 0x03	; 3
    30c4:	82 e0       	ldi	r24, 0x02	; 2
			update_LEDS(get_mS()/40);
    30c6:	50 d1       	rcall	.+672    	; 0x3368 <set_LED>
    30c8:	e1 d7       	rcall	.+4034   	; 0x408c <get_mS>
    30ca:	28 e2       	ldi	r18, 0x28	; 40
    30cc:	30 e0       	ldi	r19, 0x00	; 0
    30ce:	40 e0       	ldi	r20, 0x00	; 0
    30d0:	50 e0       	ldi	r21, 0x00	; 0
    30d2:	0e 94 cd 22 	call	0x459a	; 0x459a <__udivmodsi4>
    30d6:	c9 01       	movw	r24, r18
    30d8:	66 d1       	rcall	.+716    	; 0x33a6 <update_LEDS>
    30da:	df 91       	pop	r29
	}
}
    30dc:	cf 91       	pop	r28
    30de:	1f 91       	pop	r17
    30e0:	0f 91       	pop	r16
    30e2:	ff 90       	pop	r15
    30e4:	08 95       	ret

000030e6 <AssembleTelemetryReportPacket>:
    30e6:	bf 92       	push	r11
}

uint32_t DecodeTelemetryDataUnsigned(CANPacket *packet)
{
    return (uint32_t) DecodeTelemetryDataSigned(packet);
}
    30e8:	cf 92       	push	r12
    30ea:	df 92       	push	r13
    30ec:	ef 92       	push	r14
    30ee:	ff 92       	push	r15
    30f0:	0f 93       	push	r16
    30f2:	1f 93       	push	r17
    30f4:	cf 93       	push	r28
    30f6:	df 93       	push	r29
    30f8:	ec 01       	movw	r28, r24
    30fa:	b2 2e       	mov	r11, r18
    30fc:	67 01       	movw	r12, r14
    30fe:	78 01       	movw	r14, r16
    3100:	81 e0       	ldi	r24, 0x01	; 1
    3102:	21 d0       	rcall	.+66     	; 0x3146 <ConstructCANID>
    3104:	99 83       	std	Y+1, r25	; 0x01
    3106:	88 83       	st	Y, r24
    3108:	88 e0       	ldi	r24, 0x08	; 8
    310a:	8a 83       	std	Y+2, r24	; 0x02
    310c:	8e 01       	movw	r16, r28
    310e:	0d 5f       	subi	r16, 0xFD	; 253
    3110:	1f 4f       	sbci	r17, 0xFF	; 255
    3112:	66 ef       	ldi	r22, 0xF6	; 246
    3114:	c8 01       	movw	r24, r16
    3116:	27 d0       	rcall	.+78     	; 0x3166 <WriteSenderSerialAndPacketID>
    3118:	c8 0f       	add	r28, r24
    311a:	d9 1f       	adc	r29, r25
    311c:	bb 82       	std	Y+3, r11	; 0x03
    311e:	9c 01       	movw	r18, r24
    3120:	2f 5f       	subi	r18, 0xFF	; 255
    3122:	3f 4f       	sbci	r19, 0xFF	; 255
    3124:	b7 01       	movw	r22, r14
    3126:	a6 01       	movw	r20, r12
    3128:	c8 01       	movw	r24, r16
    312a:	34 d0       	rcall	.+104    	; 0x3194 <PackIntIntoDataMSBFirst>
    312c:	df 91       	pop	r29
    312e:	cf 91       	pop	r28
    3130:	1f 91       	pop	r17
    3132:	0f 91       	pop	r16
    3134:	ff 90       	pop	r15
    3136:	ef 90       	pop	r14
    3138:	df 90       	pop	r13
    313a:	cf 90       	pop	r12
    313c:	bf 90       	pop	r11
    313e:	08 95       	ret

00003140 <DecodeTelemetryType>:

uint8_t DecodeTelemetryType(CANPacket *packet)
{
    return packet->data[3];
}
    3140:	fc 01       	movw	r30, r24
    3142:	86 81       	ldd	r24, Z+6	; 0x06
    3144:	08 95       	ret

00003146 <ConstructCANID>:
}

void PackShortIntoDataMSBFirst(uint8_t *data, int16_t dataToPack, int startIndex)
{
	data[startIndex + 0] = (dataToPack & 0xFF00) >> 8;
	data[startIndex + 1] = (dataToPack & 0x00FF);
    3146:	6f 70       	andi	r22, 0x0F	; 15
    3148:	90 e4       	ldi	r25, 0x40	; 64
    314a:	69 9f       	mul	r22, r25
    314c:	b0 01       	movw	r22, r0
    314e:	11 24       	eor	r1, r1
    3150:	4f 73       	andi	r20, 0x3F	; 63
    3152:	64 2b       	or	r22, r20
    3154:	81 70       	andi	r24, 0x01	; 1
    3156:	38 2f       	mov	r19, r24
    3158:	33 0f       	add	r19, r19
    315a:	33 0f       	add	r19, r19
    315c:	20 e0       	ldi	r18, 0x00	; 0
    315e:	cb 01       	movw	r24, r22
    3160:	82 2b       	or	r24, r18
    3162:	93 2b       	or	r25, r19
    3164:	08 95       	ret

00003166 <WriteSenderSerialAndPacketID>:
    3166:	cf 93       	push	r28
    3168:	df 93       	push	r29
    316a:	ec 01       	movw	r28, r24
    316c:	68 83       	st	Y, r22
    316e:	3c d6       	rcall	.+3192   	; 0x3de8 <getLocalDeviceGroup>
    3170:	89 83       	std	Y+1, r24	; 0x01
    3172:	37 d6       	rcall	.+3182   	; 0x3de2 <getLocalDeviceSerial>
    3174:	8a 83       	std	Y+2, r24	; 0x02
    3176:	83 e0       	ldi	r24, 0x03	; 3
    3178:	90 e0       	ldi	r25, 0x00	; 0
    317a:	df 91       	pop	r29
    317c:	cf 91       	pop	r28
    317e:	08 95       	ret

00003180 <GetSenderDeviceSerialNumber>:
    3180:	fc 01       	movw	r30, r24
    3182:	85 81       	ldd	r24, Z+5	; 0x05
    3184:	08 95       	ret

00003186 <GetSenderDeviceGroupCode>:
    3186:	fc 01       	movw	r30, r24
    3188:	84 81       	ldd	r24, Z+4	; 0x04
    318a:	08 95       	ret

0000318c <GetPacketID>:
    318c:	fc 01       	movw	r30, r24
    318e:	83 81       	ldd	r24, Z+3	; 0x03
    3190:	90 e0       	ldi	r25, 0x00	; 0
    3192:	08 95       	ret

00003194 <PackIntIntoDataMSBFirst>:
    3194:	fc 01       	movw	r30, r24
    3196:	e2 0f       	add	r30, r18
    3198:	f3 1f       	adc	r31, r19
    319a:	70 83       	st	Z, r23
    319c:	61 83       	std	Z+1, r22	; 0x01
    319e:	52 83       	std	Z+2, r21	; 0x02
    31a0:	43 83       	std	Z+3, r20	; 0x03
    31a2:	08 95       	ret

000031a4 <DecodeBytesToIntMSBFirst>:
}

int32_t DecodeBytesToIntMSBFirst(uint8_t *data, int startIndex, int endIndex)
{
    31a4:	cf 92       	push	r12
    31a6:	df 92       	push	r13
    31a8:	ef 92       	push	r14
    31aa:	ff 92       	push	r15
    31ac:	cf 93       	push	r28
    31ae:	df 93       	push	r29
    int length = 4;
    int32_t decodedData = 0; 

    if (endIndex > 0 && startIndex >= 0) {
    31b0:	14 16       	cp	r1, r20
    31b2:	15 06       	cpc	r1, r21
    31b4:	9c f4       	brge	.+38     	; 0x31dc <DecodeBytesToIntMSBFirst+0x38>
    31b6:	77 23       	and	r23, r23
    31b8:	a4 f0       	brlt	.+40     	; 0x31e2 <DecodeBytesToIntMSBFirst+0x3e>
        length = endIndex - startIndex + 1;
    31ba:	ea 01       	movw	r28, r20
    31bc:	c6 1b       	sub	r28, r22
    31be:	d7 0b       	sbc	r29, r23
    31c0:	21 96       	adiw	r28, 0x01	; 1
    31c2:	c5 30       	cpi	r28, 0x05	; 5
    31c4:	d1 05       	cpc	r29, r1
    31c6:	14 f0       	brlt	.+4      	; 0x31cc <DecodeBytesToIntMSBFirst+0x28>
    31c8:	c4 e0       	ldi	r28, 0x04	; 4
    31ca:	d0 e0       	ldi	r29, 0x00	; 0
    31cc:	dd 23       	and	r29, r29
    31ce:	14 f4       	brge	.+4      	; 0x31d4 <DecodeBytesToIntMSBFirst+0x30>
    31d0:	c0 e0       	ldi	r28, 0x00	; 0
    31d2:	d0 e0       	ldi	r29, 0x00	; 0
        if (length > 4) { length = 4; }
        if (length < 1) { length = 0; }
    }

    for (int i = 0; i < length; i++) 
    31d4:	1c 16       	cp	r1, r28
    31d6:	1d 06       	cpc	r1, r29
    31d8:	34 f0       	brlt	.+12     	; 0x31e6 <DecodeBytesToIntMSBFirst+0x42>
    31da:	2d c0       	rjmp	.+90     	; 0x3236 <DecodeBytesToIntMSBFirst+0x92>
    31dc:	c4 e0       	ldi	r28, 0x04	; 4
    31de:	d0 e0       	ldi	r29, 0x00	; 0
    31e0:	02 c0       	rjmp	.+4      	; 0x31e6 <DecodeBytesToIntMSBFirst+0x42>
    31e2:	c4 e0       	ldi	r28, 0x04	; 4
    31e4:	d0 e0       	ldi	r29, 0x00	; 0
    31e6:	dc 01       	movw	r26, r24
    31e8:	a6 0f       	add	r26, r22
    31ea:	b7 1f       	adc	r27, r23
    31ec:	9e 01       	movw	r18, r28
    31ee:	21 50       	subi	r18, 0x01	; 1
    31f0:	31 09       	sbc	r19, r1
    31f2:	22 0f       	add	r18, r18
    31f4:	33 1f       	adc	r19, r19
    31f6:	22 0f       	add	r18, r18
    31f8:	33 1f       	adc	r19, r19
    31fa:	22 0f       	add	r18, r18
    31fc:	33 1f       	adc	r19, r19
    31fe:	e0 e0       	ldi	r30, 0x00	; 0
    3200:	f0 e0       	ldi	r31, 0x00	; 0
    3202:	c1 2c       	mov	r12, r1
    3204:	d1 2c       	mov	r13, r1
    3206:	76 01       	movw	r14, r12
    {
        decodedData |= data[startIndex + i] << (8 * (length-1-i));
    3208:	4d 91       	ld	r20, X+
    320a:	50 e0       	ldi	r21, 0x00	; 0
    320c:	02 2e       	mov	r0, r18
    320e:	02 c0       	rjmp	.+4      	; 0x3214 <DecodeBytesToIntMSBFirst+0x70>
    3210:	44 0f       	add	r20, r20
    3212:	55 1f       	adc	r21, r21
    3214:	0a 94       	dec	r0
    3216:	e2 f7       	brpl	.-8      	; 0x3210 <DecodeBytesToIntMSBFirst+0x6c>
    3218:	05 2e       	mov	r0, r21
    321a:	00 0c       	add	r0, r0
    321c:	66 0b       	sbc	r22, r22
    321e:	77 0b       	sbc	r23, r23
    3220:	c4 2a       	or	r12, r20
    3222:	d5 2a       	or	r13, r21
    3224:	e6 2a       	or	r14, r22
    3226:	f7 2a       	or	r15, r23
        length = endIndex - startIndex + 1;
        if (length > 4) { length = 4; }
        if (length < 1) { length = 0; }
    }

    for (int i = 0; i < length; i++) 
    3228:	31 96       	adiw	r30, 0x01	; 1
    322a:	28 50       	subi	r18, 0x08	; 8
    322c:	31 09       	sbc	r19, r1
    322e:	ec 17       	cp	r30, r28
    3230:	fd 07       	cpc	r31, r29
    3232:	54 f3       	brlt	.-44     	; 0x3208 <DecodeBytesToIntMSBFirst+0x64>
    3234:	03 c0       	rjmp	.+6      	; 0x323c <DecodeBytesToIntMSBFirst+0x98>
}

int32_t DecodeBytesToIntMSBFirst(uint8_t *data, int startIndex, int endIndex)
{
    int length = 4;
    int32_t decodedData = 0; 
    3236:	c1 2c       	mov	r12, r1
    3238:	d1 2c       	mov	r13, r1
    323a:	76 01       	movw	r14, r12
    for (int i = 0; i < length; i++) 
    {
        decodedData |= data[startIndex + i] << (8 * (length-1-i));
    }
    return decodedData;
}
    323c:	c7 01       	movw	r24, r14
    323e:	b6 01       	movw	r22, r12
    3240:	df 91       	pop	r29
    3242:	cf 91       	pop	r28
    3244:	ff 90       	pop	r15
    3246:	ef 90       	pop	r14
    3248:	df 90       	pop	r13
    324a:	cf 90       	pop	r12
    324c:	08 95       	ret

0000324e <GetScienceMotorPWMFromPacket>:
	packetToAssemble->data[1] = servo;
	packetToAssemble->data[2] = degrees;
}

int16_t GetScienceMotorPWMFromPacket(CANPacket *packet){
	return DecodeBytesToIntMSBFirst(packet->data, 1, 2);
    324e:	42 e0       	ldi	r20, 0x02	; 2
    3250:	50 e0       	ldi	r21, 0x00	; 0
    3252:	61 e0       	ldi	r22, 0x01	; 1
    3254:	70 e0       	ldi	r23, 0x00	; 0
    3256:	03 96       	adiw	r24, 0x03	; 3
    3258:	a5 df       	rcall	.-182    	; 0x31a4 <DecodeBytesToIntMSBFirst>
}
    325a:	cb 01       	movw	r24, r22
    325c:	08 95       	ret

0000325e <GetScienceServoAngleFromPacket>:

uint8_t GetScienceServoAngleFromPacket(CANPacket *packet){
	return packet->data[2];
}
    325e:	fc 01       	movw	r30, r24
    3260:	85 81       	ldd	r24, Z+5	; 0x05
    3262:	08 95       	ret

00003264 <GetScienceMotorIDFromPacket>:

uint8_t GetScienceMotorIDFromPacket(CANPacket *packet){
	return packet->data[3];
}
    3264:	fc 01       	movw	r30, r24
    3266:	86 81       	ldd	r24, Z+6	; 0x06
    3268:	08 95       	ret

0000326a <GetScienceServoIDFromPacket>:

uint8_t GetScienceServoIDFromPacket(CANPacket *packet){
	return packet->data[1];
}
    326a:	fc 01       	movw	r30, r24
    326c:	84 81       	ldd	r24, Z+4	; 0x04
    326e:	08 95       	ret

00003270 <I2C_init>:
/*Initialize I2C
  The bitrate of the I2C bus in KHz
*/
void I2C_init(uint16_t bitrate){
	//PORTD |= 3; //Enable pullup
	TWSR = 0; //No Prescaling
    3270:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWBR = ((16000L / bitrate) - 16) / 2;
    3274:	9c 01       	movw	r18, r24
    3276:	40 e0       	ldi	r20, 0x00	; 0
    3278:	50 e0       	ldi	r21, 0x00	; 0
    327a:	60 e8       	ldi	r22, 0x80	; 128
    327c:	7e e3       	ldi	r23, 0x3E	; 62
    327e:	80 e0       	ldi	r24, 0x00	; 0
    3280:	90 e0       	ldi	r25, 0x00	; 0
    3282:	0e 94 ef 22 	call	0x45de	; 0x45de <__divmodsi4>
    3286:	ba 01       	movw	r22, r20
    3288:	a9 01       	movw	r20, r18
    328a:	40 51       	subi	r20, 0x10	; 16
    328c:	51 09       	sbc	r21, r1
    328e:	61 09       	sbc	r22, r1
    3290:	71 09       	sbc	r23, r1
    3292:	db 01       	movw	r26, r22
    3294:	ca 01       	movw	r24, r20
    3296:	1a f4       	brpl	.+6      	; 0x329e <I2C_init+0x2e>
    3298:	01 96       	adiw	r24, 0x01	; 1
    329a:	a1 1d       	adc	r26, r1
    329c:	b1 1d       	adc	r27, r1
    329e:	b5 95       	asr	r27
    32a0:	a7 95       	ror	r26
    32a2:	97 95       	ror	r25
    32a4:	87 95       	ror	r24
    32a6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	TWCR = 1 << TWEN; //Enable I2C
    32aa:	84 e0       	ldi	r24, 0x04	; 4
    32ac:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    32b0:	08 95       	ret

000032b2 <I2C_start>:
}

/*Start an I2C transaction*/
void I2C_start(){
	TWCR = ((1<<TWINT) | (1<<TWSTA) | (1<<TWEN));
    32b2:	84 ea       	ldi	r24, 0xA4	; 164
    32b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1<<TWINT)));
    32b8:	ec eb       	ldi	r30, 0xBC	; 188
    32ba:	f0 e0       	ldi	r31, 0x00	; 0
    32bc:	80 81       	ld	r24, Z
    32be:	88 23       	and	r24, r24
    32c0:	ec f7       	brge	.-6      	; 0x32bc <I2C_start+0xa>
}
    32c2:	08 95       	ret

000032c4 <I2C_stop>:

/*Stop an I2C transaction*/
void I2C_stop(){
    TWCR = ((1<< TWINT) | (1<<TWEN) | (1<<TWSTO));
    32c4:	84 e9       	ldi	r24, 0x94	; 148
    32c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    32ca:	08 95       	ret

000032cc <I2C_write>:
	//_delay_us(10);
}

/*Write a byte to a I2C device*/
void I2C_write(uint8_t byte){
	TWDR = byte;
    32cc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = ((1<< TWINT) | (1<<TWEN));
    32d0:	84 e8       	ldi	r24, 0x84	; 132
    32d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 <<TWINT))); //Wait for write to complete
    32d6:	ec eb       	ldi	r30, 0xBC	; 188
    32d8:	f0 e0       	ldi	r31, 0x00	; 0
    32da:	80 81       	ld	r24, Z
    32dc:	88 23       	and	r24, r24
    32de:	ec f7       	brge	.-6      	; 0x32da <I2C_write+0xe>
}
    32e0:	08 95       	ret

000032e2 <I2C_read>:

/*Read a byte from an I2C device
	Setting ack to one enables sending an acknowledge pulse*/
uint8_t I2C_read(uint8_t ack){
    32e2:	cf 92       	push	r12
    32e4:	df 92       	push	r13
    32e6:	ef 92       	push	r14
    32e8:	ff 92       	push	r15
    32ea:	cf 93       	push	r28
    32ec:	df 93       	push	r29
    32ee:	c8 2f       	mov	r28, r24
	uint32_t ms = get_mS();
    32f0:	cd d6       	rcall	.+3482   	; 0x408c <get_mS>
    32f2:	6b 01       	movw	r12, r22
    32f4:	7c 01       	movw	r14, r24
	TWCR = ((1<< TWINT) | (1<<TWEN) | ((!!ack)<<TWEA));
    32f6:	c1 11       	cpse	r28, r1
    32f8:	02 c0       	rjmp	.+4      	; 0x32fe <I2C_read+0x1c>
    32fa:	84 e8       	ldi	r24, 0x84	; 132
    32fc:	01 c0       	rjmp	.+2      	; 0x3300 <I2C_read+0x1e>
    32fe:	84 ec       	ldi	r24, 0xC4	; 196
    3300:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 <<TWINT))){ //Wait for something to read
    3304:	cc eb       	ldi	r28, 0xBC	; 188
    3306:	d0 e0       	ldi	r29, 0x00	; 0
		if(get_mS() - ms > 250){
    3308:	23 c0       	rjmp	.+70     	; 0x3350 <I2C_read+0x6e>
    330a:	c0 d6       	rcall	.+3456   	; 0x408c <get_mS>
    330c:	dc 01       	movw	r26, r24
    330e:	cb 01       	movw	r24, r22
    3310:	8c 19       	sub	r24, r12
    3312:	9d 09       	sbc	r25, r13
    3314:	ae 09       	sbc	r26, r14
    3316:	bf 09       	sbc	r27, r15
    3318:	8b 3f       	cpi	r24, 0xFB	; 251
    331a:	91 05       	cpc	r25, r1
    331c:	a1 05       	cpc	r26, r1
    331e:	b1 05       	cpc	r27, r1
    3320:	b8 f0       	brcs	.+46     	; 0x3350 <I2C_read+0x6e>
			set_LED(LED_ERR, 3);
    3322:	63 e0       	ldi	r22, 0x03	; 3
    3324:	82 e0       	ldi	r24, 0x02	; 2
			update_LEDS(get_mS()/40);
    3326:	20 d0       	rcall	.+64     	; 0x3368 <set_LED>
    3328:	b1 d6       	rcall	.+3426   	; 0x408c <get_mS>
    332a:	28 e2       	ldi	r18, 0x28	; 40
    332c:	30 e0       	ldi	r19, 0x00	; 0
    332e:	40 e0       	ldi	r20, 0x00	; 0
    3330:	50 e0       	ldi	r21, 0x00	; 0
    3332:	0e 94 cd 22 	call	0x459a	; 0x459a <__udivmodsi4>
    3336:	c9 01       	movw	r24, r18
    3338:	36 d0       	rcall	.+108    	; 0x33a6 <update_LEDS>
			tprintf("I2C read timeout\n");
    333a:	8d ef       	ldi	r24, 0xFD	; 253
    333c:	91 e0       	ldi	r25, 0x01	; 1
    333e:	9f 93       	push	r25
    3340:	8f 93       	push	r24
    3342:	dc d7       	rcall	.+4024   	; 0x42fc <tprintf>
			set_LED(LED_ERR, 0);
    3344:	60 e0       	ldi	r22, 0x00	; 0
    3346:	82 e0       	ldi	r24, 0x02	; 2
    3348:	0f d0       	rcall	.+30     	; 0x3368 <set_LED>
    334a:	0f 90       	pop	r0
			break;
    334c:	0f 90       	pop	r0
    334e:	03 c0       	rjmp	.+6      	; 0x3356 <I2C_read+0x74>
    3350:	88 81       	ld	r24, Y
/*Read a byte from an I2C device
	Setting ack to one enables sending an acknowledge pulse*/
uint8_t I2C_read(uint8_t ack){
	uint32_t ms = get_mS();
	TWCR = ((1<< TWINT) | (1<<TWEN) | ((!!ack)<<TWEA));
	while(!(TWCR & (1 <<TWINT))){ //Wait for something to read
    3352:	88 23       	and	r24, r24
    3354:	d4 f6       	brge	.-76     	; 0x330a <I2C_read+0x28>
    3356:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
			tprintf("I2C read timeout\n");
			set_LED(LED_ERR, 0);
			break;
		}
	}
	return TWDR;
    335a:	df 91       	pop	r29
    335c:	cf 91       	pop	r28
    335e:	ff 90       	pop	r15
    3360:	ef 90       	pop	r14
    3362:	df 90       	pop	r13
    3364:	cf 90       	pop	r12
    3366:	08 95       	ret

00003368 <set_LED>:
	1 -> Slow flashing
	2 -> Quick flashing
	3 -> Steady on
*/
void set_LED(uint8_t L, uint8_t state){
	if(L > 2 || state > 3) return;
    3368:	83 30       	cpi	r24, 0x03	; 3
    336a:	e0 f4       	brcc	.+56     	; 0x33a4 <set_LED+0x3c>
    336c:	64 30       	cpi	r22, 0x04	; 4
    336e:	d0 f4       	brcc	.+52     	; 0x33a4 <set_LED+0x3c>
	DDRB |= (1<<7 | 1<<6);
    3370:	94 b1       	in	r25, 0x04	; 4
    3372:	90 6c       	ori	r25, 0xC0	; 192
    3374:	94 b9       	out	0x04, r25	; 4
	DDRG |= 1<<3;
    3376:	9b 9a       	sbi	0x13, 3	; 19
	L <<= 1;
	LED_states = (LED_states & ~(3 << L)) | (state << L);
    3378:	88 0f       	add	r24, r24
    337a:	23 e0       	ldi	r18, 0x03	; 3
    337c:	30 e0       	ldi	r19, 0x00	; 0
    337e:	08 2e       	mov	r0, r24
    3380:	02 c0       	rjmp	.+4      	; 0x3386 <set_LED+0x1e>
    3382:	22 0f       	add	r18, r18
    3384:	33 1f       	adc	r19, r19
    3386:	0a 94       	dec	r0
    3388:	e2 f7       	brpl	.-8      	; 0x3382 <set_LED+0x1a>
    338a:	20 95       	com	r18
    338c:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <LED_states>
    3390:	29 23       	and	r18, r25
    3392:	70 e0       	ldi	r23, 0x00	; 0
    3394:	02 c0       	rjmp	.+4      	; 0x339a <set_LED+0x32>
    3396:	66 0f       	add	r22, r22
    3398:	77 1f       	adc	r23, r23
    339a:	8a 95       	dec	r24
    339c:	e2 f7       	brpl	.-8      	; 0x3396 <set_LED+0x2e>
    339e:	62 2b       	or	r22, r18
    33a0:	60 93 21 02 	sts	0x0221, r22	; 0x800221 <LED_states>
    33a4:	08 95       	ret

000033a6 <update_LEDS>:

/*Call this from a timer interrupt to update the debug LEDs
Parameters:
uint16_t count: The timer count
*/
void inline update_LEDS(uint16_t count){
    33a6:	cf 93       	push	r28
    33a8:	df 93       	push	r29
	int i;
	uint8_t v;
	if(!LED_states){
    33aa:	20 91 21 02 	lds	r18, 0x0221	; 0x800221 <LED_states>
    33ae:	21 11       	cpse	r18, r1
    33b0:	0a c0       	rjmp	.+20     	; 0x33c6 <update_LEDS+0x20>
		PORTG &= ~(1 << 3);
    33b2:	a3 98       	cbi	0x14, 3	; 20
		PORTB &= ~(1 << 7 | 1 << 6);
    33b4:	85 b1       	in	r24, 0x05	; 5
    33b6:	8f 73       	andi	r24, 0x3F	; 63
    33b8:	85 b9       	out	0x05, r24	; 5
		return;
    33ba:	67 c0       	rjmp	.+206    	; 0x348a <update_LEDS+0xe4>
    33bc:	4f 5f       	subi	r20, 0xFF	; 255
    33be:	5f 4f       	sbci	r21, 0xFF	; 255
    33c0:	6f 5f       	subi	r22, 0xFF	; 255
    33c2:	7f 4f       	sbci	r23, 0xFF	; 255
    33c4:	0b c0       	rjmp	.+22     	; 0x33dc <update_LEDS+0x36>
    33c6:	61 e0       	ldi	r22, 0x01	; 1
    33c8:	70 e0       	ldi	r23, 0x00	; 0
    33ca:	40 e0       	ldi	r20, 0x00	; 0
    33cc:	50 e0       	ldi	r21, 0x00	; 0
				} else { //i == 2
					PORTG &= ~(1<<3);
				}
				break;
			case 1:
				if(count % 4 != 0){
    33ce:	dc 01       	movw	r26, r24
    33d0:	a3 70       	andi	r26, 0x03	; 3
    33d2:	bb 27       	eor	r27, r27
				if(i == 0){
					PORTB ^= 1<<6;
					} else if(i == 1){
					PORTB ^= 1<<7;
					} else { //i == 2
					PORTG ^= 1<<3;
    33d4:	c8 e0       	ldi	r28, 0x08	; 8
			case 1:
				if(count % 4 != 0){
					return;
				}
				if(i == 0){
					PORTB ^= 1<<6;
    33d6:	d0 e4       	ldi	r29, 0x40	; 64
					} else { //i == 2
					PORTG ^= 1<<3;
				}
				break;
			case 2:
				if(count % 2 != 0){
    33d8:	81 70       	andi	r24, 0x01	; 1
    33da:	99 27       	eor	r25, r25
		PORTB &= ~(1 << 7 | 1 << 6);
		return;
	}
	for(i = 0;i < 3;i++){
		v = (LED_states >> (2*i)) & 3;
		switch(v){
    33dc:	20 91 21 02 	lds	r18, 0x0221	; 0x800221 <LED_states>
    33e0:	30 e0       	ldi	r19, 0x00	; 0
    33e2:	fa 01       	movw	r30, r20
    33e4:	ee 0f       	add	r30, r30
    33e6:	ff 1f       	adc	r31, r31
    33e8:	02 c0       	rjmp	.+4      	; 0x33ee <update_LEDS+0x48>
    33ea:	35 95       	asr	r19
    33ec:	27 95       	ror	r18
    33ee:	ea 95       	dec	r30
    33f0:	e2 f7       	brpl	.-8      	; 0x33ea <update_LEDS+0x44>
    33f2:	23 70       	andi	r18, 0x03	; 3
    33f4:	21 30       	cpi	r18, 0x01	; 1
    33f6:	91 f0       	breq	.+36     	; 0x341c <update_LEDS+0x76>
    33f8:	28 f0       	brcs	.+10     	; 0x3404 <update_LEDS+0x5e>
    33fa:	22 30       	cpi	r18, 0x02	; 2
    33fc:	19 f1       	breq	.+70     	; 0x3444 <update_LEDS+0x9e>
    33fe:	23 30       	cpi	r18, 0x03	; 3
    3400:	a9 f1       	breq	.+106    	; 0x346c <update_LEDS+0xc6>
    3402:	3f c0       	rjmp	.+126    	; 0x3482 <update_LEDS+0xdc>
			case 0:
				if(i == 0){
    3404:	41 15       	cp	r20, r1
    3406:	51 05       	cpc	r21, r1
    3408:	11 f4       	brne	.+4      	; 0x340e <update_LEDS+0x68>
					PORTB &= ~(1<<6);
    340a:	2e 98       	cbi	0x05, 6	; 5
    340c:	d7 cf       	rjmp	.-82     	; 0x33bc <update_LEDS+0x16>
				} else if(i == 1){
    340e:	41 30       	cpi	r20, 0x01	; 1
    3410:	51 05       	cpc	r21, r1
    3412:	11 f4       	brne	.+4      	; 0x3418 <update_LEDS+0x72>
					PORTB &= ~(1<<7);
    3414:	2f 98       	cbi	0x05, 7	; 5
    3416:	d2 cf       	rjmp	.-92     	; 0x33bc <update_LEDS+0x16>
				} else { //i == 2
					PORTG &= ~(1<<3);
    3418:	a3 98       	cbi	0x14, 3	; 20
    341a:	33 c0       	rjmp	.+102    	; 0x3482 <update_LEDS+0xdc>
				}
				break;
			case 1:
				if(count % 4 != 0){
    341c:	10 97       	sbiw	r26, 0x00	; 0
    341e:	a9 f5       	brne	.+106    	; 0x348a <update_LEDS+0xe4>
					return;
				}
				if(i == 0){
    3420:	41 15       	cp	r20, r1
    3422:	51 05       	cpc	r21, r1
    3424:	21 f4       	brne	.+8      	; 0x342e <update_LEDS+0x88>
					PORTB ^= 1<<6;
    3426:	25 b1       	in	r18, 0x05	; 5
    3428:	2d 27       	eor	r18, r29
    342a:	25 b9       	out	0x05, r18	; 5
    342c:	c7 cf       	rjmp	.-114    	; 0x33bc <update_LEDS+0x16>
					} else if(i == 1){
    342e:	41 30       	cpi	r20, 0x01	; 1
    3430:	51 05       	cpc	r21, r1
    3432:	21 f4       	brne	.+8      	; 0x343c <update_LEDS+0x96>
					PORTB ^= 1<<7;
    3434:	25 b1       	in	r18, 0x05	; 5
    3436:	20 58       	subi	r18, 0x80	; 128
    3438:	25 b9       	out	0x05, r18	; 5
    343a:	c0 cf       	rjmp	.-128    	; 0x33bc <update_LEDS+0x16>
					} else { //i == 2
					PORTG ^= 1<<3;
    343c:	24 b3       	in	r18, 0x14	; 20
    343e:	2c 27       	eor	r18, r28
    3440:	24 bb       	out	0x14, r18	; 20
    3442:	1f c0       	rjmp	.+62     	; 0x3482 <update_LEDS+0xdc>
				}
				break;
			case 2:
				if(count % 2 != 0){
    3444:	00 97       	sbiw	r24, 0x00	; 0
    3446:	09 f5       	brne	.+66     	; 0x348a <update_LEDS+0xe4>
					return;
				}
				if(i == 0){
    3448:	41 15       	cp	r20, r1
    344a:	51 05       	cpc	r21, r1
    344c:	21 f4       	brne	.+8      	; 0x3456 <update_LEDS+0xb0>
					PORTB ^= 1<<6;
    344e:	25 b1       	in	r18, 0x05	; 5
    3450:	2d 27       	eor	r18, r29
    3452:	25 b9       	out	0x05, r18	; 5
    3454:	b3 cf       	rjmp	.-154    	; 0x33bc <update_LEDS+0x16>
				} else if(i == 1){
    3456:	41 30       	cpi	r20, 0x01	; 1
    3458:	51 05       	cpc	r21, r1
    345a:	21 f4       	brne	.+8      	; 0x3464 <update_LEDS+0xbe>
					PORTB ^= 1<<7;
    345c:	25 b1       	in	r18, 0x05	; 5
    345e:	20 58       	subi	r18, 0x80	; 128
    3460:	25 b9       	out	0x05, r18	; 5
    3462:	ac cf       	rjmp	.-168    	; 0x33bc <update_LEDS+0x16>
				} else { //i == 2
					PORTG ^= 1<<3;
    3464:	24 b3       	in	r18, 0x14	; 20
    3466:	2c 27       	eor	r18, r28
    3468:	24 bb       	out	0x14, r18	; 20
    346a:	0b c0       	rjmp	.+22     	; 0x3482 <update_LEDS+0xdc>
				}
				break;
			case 3:
				if(i == 0){
    346c:	41 15       	cp	r20, r1
    346e:	51 05       	cpc	r21, r1
    3470:	11 f4       	brne	.+4      	; 0x3476 <update_LEDS+0xd0>
					PORTB |= 1<<6;
    3472:	2e 9a       	sbi	0x05, 6	; 5
    3474:	a3 cf       	rjmp	.-186    	; 0x33bc <update_LEDS+0x16>
				} else if(i == 1){
    3476:	41 30       	cpi	r20, 0x01	; 1
    3478:	51 05       	cpc	r21, r1
    347a:	11 f4       	brne	.+4      	; 0x3480 <update_LEDS+0xda>
					PORTB |= 1<<7;
    347c:	2f 9a       	sbi	0x05, 7	; 5
    347e:	9e cf       	rjmp	.-196    	; 0x33bc <update_LEDS+0x16>
				} else { //i == 2
					PORTG |= 1<<3;
    3480:	a3 9a       	sbi	0x14, 3	; 20
	if(!LED_states){
		PORTG &= ~(1 << 3);
		PORTB &= ~(1 << 7 | 1 << 6);
		return;
	}
	for(i = 0;i < 3;i++){
    3482:	63 30       	cpi	r22, 0x03	; 3
    3484:	71 05       	cpc	r23, r1
    3486:	0c f4       	brge	.+2      	; 0x348a <update_LEDS+0xe4>
    3488:	99 cf       	rjmp	.-206    	; 0x33bc <update_LEDS+0x16>
				}
				break;
				
		}
	}
}
    348a:	df 91       	pop	r29
    348c:	cf 91       	pop	r28
    348e:	08 95       	ret

00003490 <set_RGB>:
 Where <led> is the led number from 0-2
 R[led] = the red value (0-255) for LED <led>
 G[led] = the green value (0-255) for LED <led>
 B[led] = the blue value (0-255) for LED <led>
*/
void set_RGB(uint8_t *R, uint8_t *G, uint8_t *B){
    3490:	cf 93       	push	r28
    3492:	df 93       	push	r29
	cli();
    3494:	f8 94       	cli
    3496:	fc 01       	movw	r30, r24
    3498:	c6 2f       	mov	r28, r22
    349a:	d7 2f       	mov	r29, r23
    349c:	a4 2f       	mov	r26, r20
    349e:	b5 2f       	mov	r27, r21
    34a0:	bc 01       	movw	r22, r24
    34a2:	6d 5f       	subi	r22, 0xFD	; 253
    34a4:	7f 4f       	sbci	r23, 0xFF	; 255
	for(int led = 0;led < 3;led++){
		uint8_t r = R[led];
    34a6:	31 91       	ld	r19, Z+
		uint8_t g = G[led];
    34a8:	49 91       	ld	r20, Y+
		uint8_t b = B[led];
    34aa:	2d 91       	ld	r18, X+
    34ac:	98 e0       	ldi	r25, 0x08	; 8
		uint8_t count = 8;
		while(count--){
			uint8_t res = g & 128;
    34ae:	54 2f       	mov	r21, r20
    34b0:	50 78       	andi	r21, 0x80	; 128
			PORTG |= 1<<4;
    34b2:	a4 9a       	sbi	0x14, 4	; 20
			g <<= 1;
    34b4:	44 0f       	add	r20, r20
			if(res){
    34b6:	55 23       	and	r21, r21
    34b8:	09 f4       	brne	.+2      	; 0x34bc <set_RGB+0x2c>
    34ba:	36 c0       	rjmp	.+108    	; 0x3528 <set_RGB+0x98>
	...
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
    34c8:	00 00       	nop
			}
			PORTG &= ~(1<<4);
    34ca:	a4 98       	cbi	0x14, 4	; 20
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
			}
			asm("nop");
    34cc:	00 00       	nop
    34ce:	91 50       	subi	r25, 0x01	; 1
	for(int led = 0;led < 3;led++){
		uint8_t r = R[led];
		uint8_t g = G[led];
		uint8_t b = B[led];
		uint8_t count = 8;
		while(count--){
    34d0:	71 f7       	brne	.-36     	; 0x34ae <set_RGB+0x1e>
    34d2:	98 e0       	ldi	r25, 0x08	; 8
			}
			asm("nop");
		}
		count = 8;
		while(count--){
			uint8_t res = r & 128;
    34d4:	43 2f       	mov	r20, r19
    34d6:	40 78       	andi	r20, 0x80	; 128
			PORTG |= 1<<4;
    34d8:	a4 9a       	sbi	0x14, 4	; 20
			r <<= 1;
    34da:	33 0f       	add	r19, r19
			if(res){
    34dc:	44 23       	and	r20, r20
    34de:	09 f4       	brne	.+2      	; 0x34e2 <set_RGB+0x52>
    34e0:	2a c0       	rjmp	.+84     	; 0x3536 <set_RGB+0xa6>
	...
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
    34ee:	00 00       	nop
			}
			PORTG &= ~(1<<4);
    34f0:	a4 98       	cbi	0x14, 4	; 20
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
			}
			asm("nop");
    34f2:	00 00       	nop
    34f4:	91 50       	subi	r25, 0x01	; 1
				asm("nop");
			}
			asm("nop");
		}
		count = 8;
		while(count--){
    34f6:	71 f7       	brne	.-36     	; 0x34d4 <set_RGB+0x44>
    34f8:	98 e0       	ldi	r25, 0x08	; 8
			}
			asm("nop");
		}
		count = 8;
		while(count--){
			uint8_t res = b & 128;
    34fa:	32 2f       	mov	r19, r18
    34fc:	30 78       	andi	r19, 0x80	; 128
			PORTG |= 1<<4;
    34fe:	a4 9a       	sbi	0x14, 4	; 20
			b <<= 1;
    3500:	22 0f       	add	r18, r18
			if(res){
    3502:	33 23       	and	r19, r19
    3504:	f9 f0       	breq	.+62     	; 0x3544 <set_RGB+0xb4>
	...
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
    3512:	00 00       	nop
			}
			PORTG &= ~(1<<4);
    3514:	a4 98       	cbi	0x14, 4	; 20
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
			}
			asm("nop");
    3516:	00 00       	nop
    3518:	91 50       	subi	r25, 0x01	; 1
				asm("nop");
			}
			asm("nop");
		}
		count = 8;
		while(count--){
    351a:	79 f7       	brne	.-34     	; 0x34fa <set_RGB+0x6a>
 G[led] = the green value (0-255) for LED <led>
 B[led] = the blue value (0-255) for LED <led>
*/
void set_RGB(uint8_t *R, uint8_t *G, uint8_t *B){
	cli();
	for(int led = 0;led < 3;led++){
    351c:	e6 17       	cp	r30, r22
    351e:	f7 07       	cpc	r31, r23
    3520:	09 f0       	breq	.+2      	; 0x3524 <set_RGB+0x94>
    3522:	c1 cf       	rjmp	.-126    	; 0x34a6 <set_RGB+0x16>
				asm("nop");
			}
			asm("nop");
		}
	}
	sei();
    3524:	78 94       	sei
}
    3526:	15 c0       	rjmp	.+42     	; 0x3552 <set_RGB+0xc2>
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
			}
			PORTG &= ~(1<<4);
    3528:	a4 98       	cbi	0x14, 4	; 20
	...
			if(!res){
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
    3532:	00 00       	nop
    3534:	cb cf       	rjmp	.-106    	; 0x34cc <set_RGB+0x3c>
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
			}
			PORTG &= ~(1<<4);
    3536:	a4 98       	cbi	0x14, 4	; 20
	...
			if(!res){
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
    3540:	00 00       	nop
    3542:	d7 cf       	rjmp	.-82     	; 0x34f2 <set_RGB+0x62>
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
			}
			PORTG &= ~(1<<4);
    3544:	a4 98       	cbi	0x14, 4	; 20
	...
			if(!res){
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
				asm("nop");
    354e:	00 00       	nop
    3550:	e2 cf       	rjmp	.-60     	; 0x3516 <set_RGB+0x86>
			}
			asm("nop");
		}
	}
	sei();
}
    3552:	df 91       	pop	r29
    3554:	cf 91       	pop	r28
    3556:	08 95       	ret

00003558 <set_RGB_LED>:

/*Sets the color of RGB LED <led> to the specified R G B values*/
void set_RGB_LED(uint8_t led, uint8_t R, uint8_t G, uint8_t B){
	RS[led] = R;
    3558:	90 e0       	ldi	r25, 0x00	; 0
    355a:	fc 01       	movw	r30, r24
    355c:	ea 5e       	subi	r30, 0xEA	; 234
    355e:	fd 4f       	sbci	r31, 0xFD	; 253
    3560:	60 83       	st	Z, r22
	GS[led] = G;
    3562:	fc 01       	movw	r30, r24
    3564:	ed 5e       	subi	r30, 0xED	; 237
    3566:	fd 4f       	sbci	r31, 0xFD	; 253
    3568:	40 83       	st	Z, r20
	BS[led] = B;
    356a:	fc 01       	movw	r30, r24
    356c:	e0 5f       	subi	r30, 0xF0	; 240
    356e:	fd 4f       	sbci	r31, 0xFD	; 253
    3570:	20 83       	st	Z, r18
	set_RGB(RS, GS, BS);
    3572:	40 e1       	ldi	r20, 0x10	; 16
    3574:	52 e0       	ldi	r21, 0x02	; 2
    3576:	63 e1       	ldi	r22, 0x13	; 19
    3578:	72 e0       	ldi	r23, 0x02	; 2
    357a:	86 e1       	ldi	r24, 0x16	; 22
    357c:	92 e0       	ldi	r25, 0x02	; 2
    357e:	88 cf       	rjmp	.-240    	; 0x3490 <set_RGB>
    3580:	08 95       	ret

00003582 <main>:
#include "uv.h"
#include "meow.h"

void handle_CAN_packet(CANPacket *packet);

int main(){
    3582:	cf 93       	push	r28
    3584:	df 93       	push	r29
    3586:	cd b7       	in	r28, 0x3d	; 61
    3588:	de b7       	in	r29, 0x3e	; 62
    358a:	61 97       	sbiw	r28, 0x11	; 17
    358c:	0f b6       	in	r0, 0x3f	; 63
    358e:	f8 94       	cli
    3590:	de bf       	out	0x3e, r29	; 62
    3592:	0f be       	out	0x3f, r0	; 63
    3594:	cd bf       	out	0x3d, r28	; 61
	DDRB = 1<<6; // Enable LED pins
    3596:	80 e4       	ldi	r24, 0x40	; 64
    3598:	84 b9       	out	0x04, r24	; 4
	PORTB = 1<<6;
    359a:	85 b9       	out	0x05, r24	; 5
	DDRG |= 1<<4;
    359c:	9c 9a       	sbi	0x13, 4	; 19
	PORTB = 0;
    359e:	15 b8       	out	0x05, r1	; 5
	PORTA = 0xF0; //Enable DIP switch pullups
    35a0:	90 ef       	ldi	r25, 0xF0	; 240
    35a2:	92 b9       	out	0x02, r25	; 2
	uint8_t H[3] = {64, 64, 64};
    35a4:	89 83       	std	Y+1, r24	; 0x01
    35a6:	8a 83       	std	Y+2, r24	; 0x02
    35a8:	8b 83       	std	Y+3, r24	; 0x03
	uint8_t L[3] = {0, 0, 0};
    35aa:	1c 82       	std	Y+4, r1	; 0x04
    35ac:	1d 82       	std	Y+5, r1	; 0x05
    35ae:	1e 82       	std	Y+6, r1	; 0x06
	set_RGB(L, L, L);
    35b0:	ae 01       	movw	r20, r28
    35b2:	4c 5f       	subi	r20, 0xFC	; 252
    35b4:	5f 4f       	sbci	r21, 0xFF	; 255
    35b6:	ba 01       	movw	r22, r20
    35b8:	ca 01       	movw	r24, r20
    35ba:	6a df       	rcall	.-300    	; 0x3490 <set_RGB>
    35bc:	2f e7       	ldi	r18, 0x7F	; 127
    35be:	82 e4       	ldi	r24, 0x42	; 66
    35c0:	90 e1       	ldi	r25, 0x10	; 16
    35c2:	21 50       	subi	r18, 0x01	; 1
    35c4:	80 40       	sbci	r24, 0x00	; 0
    35c6:	90 40       	sbci	r25, 0x00	; 0
    35c8:	e1 f7       	brne	.-8      	; 0x35c2 <main+0x40>
    35ca:	00 c0       	rjmp	.+0      	; 0x35cc <main+0x4a>
    35cc:	00 00       	nop
	_delay_ms(333);
	set_RGB_LED(0, 0, 128, 0);
    35ce:	20 e0       	ldi	r18, 0x00	; 0
    35d0:	40 e8       	ldi	r20, 0x80	; 128
    35d2:	60 e0       	ldi	r22, 0x00	; 0
    35d4:	80 e0       	ldi	r24, 0x00	; 0
	setup_timers();
    35d6:	c0 df       	rcall	.-128    	; 0x3558 <set_RGB_LED>
    35d8:	37 d5       	rcall	.+2670   	; 0x4048 <setup_timers>
    35da:	2f ef       	ldi	r18, 0xFF	; 255
    35dc:	89 e6       	ldi	r24, 0x69	; 105
    35de:	98 e1       	ldi	r25, 0x18	; 24
    35e0:	21 50       	subi	r18, 0x01	; 1
    35e2:	80 40       	sbci	r24, 0x00	; 0
    35e4:	90 40       	sbci	r25, 0x00	; 0
    35e6:	e1 f7       	brne	.-8      	; 0x35e0 <main+0x5e>
    35e8:	00 c0       	rjmp	.+0      	; 0x35ea <main+0x68>
	_delay_ms(500);
	init_ADC();
    35ea:	00 00       	nop
    35ec:	2e d9       	rcall	.-3492   	; 0x284a <init_ADC>
	set_RGB_LED(1, 0, 128, 0);
    35ee:	20 e0       	ldi	r18, 0x00	; 0
    35f0:	40 e8       	ldi	r20, 0x80	; 128
    35f2:	60 e0       	ldi	r22, 0x00	; 0
    35f4:	81 e0       	ldi	r24, 0x01	; 1
	delay_mS(500);
    35f6:	b0 df       	rcall	.-160    	; 0x3558 <set_RGB_LED>
    35f8:	84 ef       	ldi	r24, 0xF4	; 244
    35fa:	91 e0       	ldi	r25, 0x01	; 1
	I2C_init(333);
    35fc:	70 d5       	rcall	.+2784   	; 0x40de <delay_mS>
    35fe:	8d e4       	ldi	r24, 0x4D	; 77
    3600:	91 e0       	ldi	r25, 0x01	; 1
	usart_init(19200);
    3602:	36 de       	rcall	.-916    	; 0x3270 <I2C_init>
    3604:	60 e0       	ldi	r22, 0x00	; 0
    3606:	7b e4       	ldi	r23, 0x4B	; 75
    3608:	80 e0       	ldi	r24, 0x00	; 0
    360a:	90 e0       	ldi	r25, 0x00	; 0
	set_RGB_LED(2, 0, 128, 0);
    360c:	3f d6       	rcall	.+3198   	; 0x428c <usart_init>
    360e:	20 e0       	ldi	r18, 0x00	; 0
    3610:	40 e8       	ldi	r20, 0x80	; 128
    3612:	60 e0       	ldi	r22, 0x00	; 0
    3614:	82 e0       	ldi	r24, 0x02	; 2
    3616:	a0 df       	rcall	.-192    	; 0x3558 <set_RGB_LED>
	delay_mS(500);
    3618:	84 ef       	ldi	r24, 0xF4	; 244
    361a:	91 e0       	ldi	r25, 0x01	; 1
    361c:	60 d5       	rcall	.+2752   	; 0x40de <delay_mS>
	cli();
    361e:	f8 94       	cli
	set_RGB(H, L, L);
    3620:	ae 01       	movw	r20, r28
    3622:	4c 5f       	subi	r20, 0xFC	; 252
    3624:	5f 4f       	sbci	r21, 0xFF	; 255
    3626:	ba 01       	movw	r22, r20
    3628:	ce 01       	movw	r24, r28
    362a:	01 96       	adiw	r24, 0x01	; 1
    362c:	31 df       	rcall	.-414    	; 0x3490 <set_RGB>
    362e:	80 e1       	ldi	r24, 0x10	; 16
	DDRD = 1<<4; //Enable audio amp
    3630:	8a b9       	out	0x0a, r24	; 10
    3632:	8b b9       	out	0x0b, r24	; 11
	PORTD = 1<<4;
    3634:	2f ef       	ldi	r18, 0xFF	; 255
    3636:	81 ee       	ldi	r24, 0xE1	; 225
    3638:	94 e0       	ldi	r25, 0x04	; 4
    363a:	21 50       	subi	r18, 0x01	; 1
    363c:	80 40       	sbci	r24, 0x00	; 0
    363e:	90 40       	sbci	r25, 0x00	; 0
    3640:	e1 f7       	brne	.-8      	; 0x363a <main+0xb8>
    3642:	00 c0       	rjmp	.+0      	; 0x3644 <main+0xc2>
    3644:	00 00       	nop
	_delay_ms(100);
	play_audio(meow, sizeof(meow));
    3646:	65 e7       	ldi	r22, 0x75	; 117
    3648:	77 e2       	ldi	r23, 0x27	; 39
    364a:	84 e9       	ldi	r24, 0x94	; 148
    364c:	90 e0       	ldi	r25, 0x00	; 0
    364e:	56 da       	rcall	.-2900   	; 0x2afc <play_audio>
    3650:	ae 01       	movw	r20, r28
	set_RGB(L, L, L);
    3652:	4c 5f       	subi	r20, 0xFC	; 252
    3654:	5f 4f       	sbci	r21, 0xFF	; 255
    3656:	ba 01       	movw	r22, r20
    3658:	ca 01       	movw	r24, r20
    365a:	1a df       	rcall	.-460    	; 0x3490 <set_RGB>
    365c:	78 94       	sei
    365e:	80 e0       	ldi	r24, 0x00	; 0
	sei();
    3660:	90 e0       	ldi	r25, 0x00	; 0
	uint8_t count = eeprom_read_byte(0);
    3662:	0e 94 c9 23 	call	0x4792	; 0x4792 <eeprom_read_byte>
    3666:	18 2f       	mov	r17, r24
    3668:	61 e0       	ldi	r22, 0x01	; 1
	eeprom_write_byte(0, count + 1);
    366a:	68 0f       	add	r22, r24
    366c:	80 e0       	ldi	r24, 0x00	; 0
    366e:	90 e0       	ldi	r25, 0x00	; 0
    3670:	0e 94 d1 23 	call	0x47a2	; 0x47a2 <eeprom_write_byte>
    3674:	81 2f       	mov	r24, r17
	if(count % 32 == 0){
    3676:	8f 71       	andi	r24, 0x1F	; 31
    3678:	09 f4       	brne	.+2      	; 0x367c <main+0xfa>
    367a:	64 d9       	rcall	.-3384   	; 0x2944 <roll>
		roll();	
    367c:	1b b8       	out	0x0b, r1	; 11
    367e:	9f e0       	ldi	r25, 0x0F	; 15
	}
	PORTD = 0; //Disable audio amp
    3680:	88 e1       	ldi	r24, 0x18	; 24
				: "r0"
		);
	}
	else
	{
		__asm__ __volatile__ (
    3682:	0f b6       	in	r0, 0x3f	; 63
    3684:	f8 94       	cli
    3686:	a8 95       	wdr
    3688:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    368c:	0f be       	out	0x3f, r0	; 63
    368e:	90 93 60 00 	sts	0x0060, r25	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    3692:	80 b1       	in	r24, 0x00	; 0
    3694:	90 e0       	ldi	r25, 0x00	; 0
#define USART_TX_BUF_SZ 16 //UART TX buffer size
#define USART_RX_BUF_SZ 16 //UART RX buffer size

/*Returns the value of the binary representation of the dipswitch*/
uint8_t inline get_dip_switch(){
	return ((~PINA) >> 4) & 0xF;
    3696:	80 95       	com	r24
	wdt_enable(WDTO_2S); //Watchdog interval 2 secs
	InitCAN(DEVICE_GROUP_SCIENCE, get_dip_switch());
    3698:	90 95       	com	r25
    369a:	95 95       	asr	r25
    369c:	87 95       	ror	r24
    369e:	95 95       	asr	r25
    36a0:	87 95       	ror	r24
    36a2:	95 95       	asr	r25
    36a4:	87 95       	ror	r24
    36a6:	95 95       	asr	r25
    36a8:	87 95       	ror	r24
    36aa:	8f 70       	andi	r24, 0x0F	; 15
    36ac:	68 2f       	mov	r22, r24
    36ae:	70 e0       	ldi	r23, 0x00	; 0
    36b0:	87 e0       	ldi	r24, 0x07	; 7
    36b2:	90 e0       	ldi	r25, 0x00	; 0
	init_servos();
    36b4:	b3 d2       	rcall	.+1382   	; 0x3c1c <InitCAN>
    36b6:	48 d4       	rcall	.+2192   	; 0x3f48 <init_servos>
	init_motor();
    36b8:	28 d0       	rcall	.+80     	; 0x370a <init_motor>
	VEML6070_init(); /*UV sensor*/
    36ba:	48 d7       	rcall	.+3728   	; 0x454c <VEML6070_init>
    36bc:	0f 2e       	mov	r0, r31
	CANPacket packet;
	while(1){
		if(PollAndReceiveCANPacket(&packet) == 0){
			set_LED(LED_CAN, 3);
			update_LEDS(get_mS()/40);
    36be:	f8 e2       	ldi	r31, 0x28	; 40
    36c0:	cf 2e       	mov	r12, r31
    36c2:	d1 2c       	mov	r13, r1
    36c4:	e1 2c       	mov	r14, r1
    36c6:	f1 2c       	mov	r15, r1
	init_servos();
	init_motor();
	VEML6070_init(); /*UV sensor*/
	CANPacket packet;
	while(1){
		if(PollAndReceiveCANPacket(&packet) == 0){
    36c8:	f0 2d       	mov	r31, r0
    36ca:	ce 01       	movw	r24, r28
    36cc:	07 96       	adiw	r24, 0x07	; 7
    36ce:	f6 d2       	rcall	.+1516   	; 0x3cbc <PollAndReceiveCANPacket>
			set_LED(LED_CAN, 3);
    36d0:	89 2b       	or	r24, r25
    36d2:	79 f4       	brne	.+30     	; 0x36f2 <main+0x170>
    36d4:	63 e0       	ldi	r22, 0x03	; 3
    36d6:	80 e0       	ldi	r24, 0x00	; 0
			update_LEDS(get_mS()/40);
    36d8:	47 de       	rcall	.-882    	; 0x3368 <set_LED>
    36da:	d8 d4       	rcall	.+2480   	; 0x408c <get_mS>
    36dc:	a7 01       	movw	r20, r14
    36de:	96 01       	movw	r18, r12
    36e0:	5c d7       	rcall	.+3768   	; 0x459a <__udivmodsi4>
    36e2:	c9 01       	movw	r24, r18
    36e4:	60 de       	rcall	.-832    	; 0x33a6 <update_LEDS>
    36e6:	ce 01       	movw	r24, r28
    36e8:	07 96       	adiw	r24, 0x07	; 7
			handle_CAN_packet(&packet);
    36ea:	b3 dc       	rcall	.-1690   	; 0x3052 <handle_CAN_packet>
    36ec:	60 e0       	ldi	r22, 0x00	; 0
    36ee:	80 e0       	ldi	r24, 0x00	; 0
    36f0:	3b de       	rcall	.-906    	; 0x3368 <set_LED>
			set_LED(LED_CAN, 0);
    36f2:	72 d0       	rcall	.+228    	; 0x37d8 <motor_control_tick>
    36f4:	2f e7       	ldi	r18, 0x7F	; 127
    36f6:	88 e3       	ldi	r24, 0x38	; 56
    36f8:	91 e0       	ldi	r25, 0x01	; 1
		}
		motor_control_tick();
    36fa:	21 50       	subi	r18, 0x01	; 1
    36fc:	80 40       	sbci	r24, 0x00	; 0
    36fe:	90 40       	sbci	r25, 0x00	; 0
    3700:	e1 f7       	brne	.-8      	; 0x36fa <main+0x178>
    3702:	00 c0       	rjmp	.+0      	; 0x3704 <main+0x182>
    3704:	00 00       	nop
    3706:	a8 95       	wdr
    3708:	e0 cf       	rjmp	.-64     	; 0x36ca <main+0x148>

0000370a <init_motor>:
int16_t motor_powers[3];
int32_t last_update[3];
uint8_t motor_leds = 1;

/*Initializes the motor controller and sets some reasonable defaults*/
void init_motor(){
    370a:	cf 93       	push	r28
    370c:	df 93       	push	r29
	DDRE |= (1 << 3) | (1 << 4) | (1 << 5); //set motor pwm pins to outputs
    370e:	8d b1       	in	r24, 0x0d	; 13
    3710:	88 63       	ori	r24, 0x38	; 56
    3712:	8d b9       	out	0x0d, r24	; 13
	DDRB |= (1 << 3) | (1 << 4) | (1 << 5); //set motor direction pins to outputs
    3714:	84 b1       	in	r24, 0x04	; 4
    3716:	88 63       	ori	r24, 0x38	; 56
    3718:	84 b9       	out	0x04, r24	; 4
	for(int m = 0;m < 3;m++){ //Set the inital motor powers to 0
		motor_powers[m] = 0;
    371a:	c2 e2       	ldi	r28, 0x22	; 34
    371c:	d2 e0       	ldi	r29, 0x02	; 2
    371e:	19 82       	std	Y+1, r1	; 0x01
    3720:	18 82       	st	Y, r1
		write_PWM(m + 3, 0);
    3722:	60 e0       	ldi	r22, 0x00	; 0
    3724:	70 e0       	ldi	r23, 0x00	; 0
    3726:	83 e0       	ldi	r24, 0x03	; 3
    3728:	62 d3       	rcall	.+1732   	; 0x3dee <write_PWM>
/*Initializes the motor controller and sets some reasonable defaults*/
void init_motor(){
	DDRE |= (1 << 3) | (1 << 4) | (1 << 5); //set motor pwm pins to outputs
	DDRB |= (1 << 3) | (1 << 4) | (1 << 5); //set motor direction pins to outputs
	for(int m = 0;m < 3;m++){ //Set the inital motor powers to 0
		motor_powers[m] = 0;
    372a:	1b 82       	std	Y+3, r1	; 0x03
    372c:	1a 82       	std	Y+2, r1	; 0x02
		write_PWM(m + 3, 0);
    372e:	60 e0       	ldi	r22, 0x00	; 0
    3730:	70 e0       	ldi	r23, 0x00	; 0
    3732:	84 e0       	ldi	r24, 0x04	; 4
    3734:	5c d3       	rcall	.+1720   	; 0x3dee <write_PWM>
/*Initializes the motor controller and sets some reasonable defaults*/
void init_motor(){
	DDRE |= (1 << 3) | (1 << 4) | (1 << 5); //set motor pwm pins to outputs
	DDRB |= (1 << 3) | (1 << 4) | (1 << 5); //set motor direction pins to outputs
	for(int m = 0;m < 3;m++){ //Set the inital motor powers to 0
		motor_powers[m] = 0;
    3736:	1d 82       	std	Y+5, r1	; 0x05
    3738:	1c 82       	std	Y+4, r1	; 0x04
		write_PWM(m + 3, 0);
    373a:	60 e0       	ldi	r22, 0x00	; 0
    373c:	70 e0       	ldi	r23, 0x00	; 0
    373e:	85 e0       	ldi	r24, 0x05	; 5
    3740:	56 d3       	rcall	.+1708   	; 0x3dee <write_PWM>
	}
	PORTC = 1<<5 | 1<<6; //enable limit switch pullups
    3742:	80 e6       	ldi	r24, 0x60	; 96
    3744:	88 b9       	out	0x08, r24	; 8
	init_encoders();
    3746:	05 da       	rcall	.-3062   	; 0x2b52 <init_encoders>
    3748:	df 91       	pop	r29
}
    374a:	cf 91       	pop	r28
    374c:	08 95       	ret

0000374e <set_motor_direction>:
    374e:	83 30       	cpi	r24, 0x03	; 3

void set_motor_direction(uint8_t motor, uint8_t dir){
	if(motor > 2){
    3750:	90 f4       	brcc	.+36     	; 0x3776 <set_motor_direction+0x28>
		return;
	}
	motor += 3;
	uint8_t bit = 1 << motor;
    3752:	8d 5f       	subi	r24, 0xFD	; 253
    3754:	21 e0       	ldi	r18, 0x01	; 1
    3756:	30 e0       	ldi	r19, 0x00	; 0
    3758:	02 c0       	rjmp	.+4      	; 0x375e <set_motor_direction+0x10>
    375a:	22 0f       	add	r18, r18
    375c:	33 1f       	adc	r19, r19
    375e:	8a 95       	dec	r24
    3760:	e2 f7       	brpl	.-8      	; 0x375a <set_motor_direction+0xc>
	if(!dir){
    3762:	61 11       	cpse	r22, r1
    3764:	05 c0       	rjmp	.+10     	; 0x3770 <set_motor_direction+0x22>
		PORTB &= ~bit;
    3766:	85 b1       	in	r24, 0x05	; 5
    3768:	20 95       	com	r18
    376a:	28 23       	and	r18, r24
    376c:	25 b9       	out	0x05, r18	; 5
    376e:	08 95       	ret
	} else {
		PORTB |= bit;
    3770:	85 b1       	in	r24, 0x05	; 5
    3772:	28 2b       	or	r18, r24
    3774:	25 b9       	out	0x05, r18	; 5
    3776:	08 95       	ret

00003778 <set_motor_leds>:
	}
}

/*Enables or disables whether to use the RGB LEDS to indicate motor states*/
void set_motor_leds(uint8_t en){
	motor_leds = !!en;
    3778:	91 e0       	ldi	r25, 0x01	; 1
    377a:	81 11       	cpse	r24, r1
    377c:	01 c0       	rjmp	.+2      	; 0x3780 <set_motor_leds+0x8>
    377e:	90 e0       	ldi	r25, 0x00	; 0
    3780:	90 93 fc 01 	sts	0x01FC, r25	; 0x8001fc <motor_leds>
    3784:	08 95       	ret

00003786 <set_motor_power>:
/*Sets the motor power more safely
  Parameters:
  uint8_t motor: selects which motor to set the power of
  int16_t power: the motor power to set -1023 to +1023
  Negative values reverse the motor*/
void set_motor_power(uint8_t motor, int16_t power){
    3786:	cf 93       	push	r28
    3788:	df 93       	push	r29
	if(motor < 0 || motor > 2){
    378a:	83 30       	cpi	r24, 0x03	; 3
    378c:	10 f5       	brcc	.+68     	; 0x37d2 <set_motor_power+0x4c>
    378e:	26 2f       	mov	r18, r22
    3790:	37 2f       	mov	r19, r23
    3792:	21 30       	cpi	r18, 0x01	; 1
    3794:	9c ef       	ldi	r25, 0xFC	; 252
    3796:	39 07       	cpc	r19, r25
    3798:	14 f4       	brge	.+4      	; 0x379e <set_motor_power+0x18>
    379a:	21 e0       	ldi	r18, 0x01	; 1
    379c:	3c ef       	ldi	r19, 0xFC	; 252
		power = -1023;
	}
	if(power > 1023){
		power = 1023;
	}
	motor_powers[motor] = power;
    379e:	c8 2f       	mov	r28, r24
    37a0:	d0 e0       	ldi	r29, 0x00	; 0
    37a2:	fe 01       	movw	r30, r28
    37a4:	ee 0f       	add	r30, r30
    37a6:	ff 1f       	adc	r31, r31
    37a8:	ee 5d       	subi	r30, 0xDE	; 222
    37aa:	fd 4f       	sbci	r31, 0xFD	; 253
    37ac:	21 15       	cp	r18, r1
    37ae:	84 e0       	ldi	r24, 0x04	; 4
    37b0:	38 07       	cpc	r19, r24
    37b2:	14 f0       	brlt	.+4      	; 0x37b8 <set_motor_power+0x32>
    37b4:	2f ef       	ldi	r18, 0xFF	; 255
    37b6:	33 e0       	ldi	r19, 0x03	; 3
    37b8:	31 83       	std	Z+1, r19	; 0x01
    37ba:	20 83       	st	Z, r18
	last_update[motor] = get_mS();
    37bc:	67 d4       	rcall	.+2254   	; 0x408c <get_mS>
    37be:	cc 0f       	add	r28, r28
    37c0:	dd 1f       	adc	r29, r29
    37c2:	cc 0f       	add	r28, r28
    37c4:	dd 1f       	adc	r29, r29
    37c6:	c8 5d       	subi	r28, 0xD8	; 216
    37c8:	dd 4f       	sbci	r29, 0xFD	; 253
    37ca:	68 83       	st	Y, r22
    37cc:	79 83       	std	Y+1, r23	; 0x01
    37ce:	8a 83       	std	Y+2, r24	; 0x02
    37d0:	9b 83       	std	Y+3, r25	; 0x03
}
    37d2:	df 91       	pop	r29
    37d4:	cf 91       	pop	r28
    37d6:	08 95       	ret

000037d8 <motor_control_tick>:

/*Update the motors. Call in a loop*/
void motor_control_tick(){
    37d8:	4f 92       	push	r4
    37da:	5f 92       	push	r5
    37dc:	6f 92       	push	r6
    37de:	7f 92       	push	r7
    37e0:	af 92       	push	r10
    37e2:	bf 92       	push	r11
    37e4:	cf 92       	push	r12
    37e6:	df 92       	push	r13
    37e8:	ef 92       	push	r14
    37ea:	ff 92       	push	r15
    37ec:	1f 93       	push	r17
    37ee:	cf 93       	push	r28
    37f0:	df 93       	push	r29
    37f2:	00 d0       	rcall	.+0      	; 0x37f4 <motor_control_tick+0x1c>
    37f4:	cd b7       	in	r28, 0x3d	; 61
    37f6:	de b7       	in	r29, 0x3e	; 62
	volatile uint8_t ls1 = PINC & (1<<6);
    37f8:	86 b1       	in	r24, 0x06	; 6
    37fa:	80 74       	andi	r24, 0x40	; 64
    37fc:	89 83       	std	Y+1, r24	; 0x01
	volatile uint8_t ls2 = PINC & (1<<5);
    37fe:	86 b1       	in	r24, 0x06	; 6
    3800:	80 72       	andi	r24, 0x20	; 32
    3802:	8a 83       	std	Y+2, r24	; 0x02
    3804:	0f 2e       	mov	r0, r31
    3806:	f8 e2       	ldi	r31, 0x28	; 40
    3808:	af 2e       	mov	r10, r31
    380a:	f2 e0       	ldi	r31, 0x02	; 2
    380c:	bf 2e       	mov	r11, r31
    380e:	f0 2d       	mov	r31, r0
    3810:	0f 2e       	mov	r0, r31
    3812:	f2 e2       	ldi	r31, 0x22	; 34
    3814:	cf 2e       	mov	r12, r31
    3816:	f2 e0       	ldi	r31, 0x02	; 2
    3818:	df 2e       	mov	r13, r31
    381a:	f0 2d       	mov	r31, r0
	//volatile uint8_t p = PINC;
	for(uint8_t motor = 0;motor < 3;motor++){
    381c:	10 e0       	ldi	r17, 0x00	; 0
		if(get_mS() - last_update[motor] > MOTOR_SET_TIMEOUT){
    381e:	36 d4       	rcall	.+2156   	; 0x408c <get_mS>
    3820:	f5 01       	movw	r30, r10
    3822:	41 90       	ld	r4, Z+
    3824:	51 90       	ld	r5, Z+
    3826:	61 90       	ld	r6, Z+
    3828:	71 90       	ld	r7, Z+
    382a:	5f 01       	movw	r10, r30
    382c:	dc 01       	movw	r26, r24
    382e:	cb 01       	movw	r24, r22
    3830:	84 19       	sub	r24, r4
    3832:	95 09       	sbc	r25, r5
    3834:	a6 09       	sbc	r26, r6
    3836:	b7 09       	sbc	r27, r7
    3838:	81 3d       	cpi	r24, 0xD1	; 209
    383a:	97 40       	sbci	r25, 0x07	; 7
    383c:	a1 05       	cpc	r26, r1
    383e:	b1 05       	cpc	r27, r1
    3840:	30 f0       	brcs	.+12     	; 0x384e <motor_control_tick+0x76>
			/*If more than set time has elapsed without an update to this motor, turn it off*/
			motor_powers[motor] = 0;
    3842:	f6 01       	movw	r30, r12
    3844:	11 82       	std	Z+1, r1	; 0x01
    3846:	10 82       	st	Z, r1
		}
		int16_t power = motor_powers[motor];
    3848:	e1 2c       	mov	r14, r1
    384a:	f1 2c       	mov	r15, r1
    384c:	47 c0       	rjmp	.+142    	; 0x38dc <motor_control_tick+0x104>
    384e:	f6 01       	movw	r30, r12
    3850:	e0 80       	ld	r14, Z
    3852:	f1 80       	ldd	r15, Z+1	; 0x01
		if(power < 0){
    3854:	ff 20       	and	r15, r15
    3856:	0c f0       	brlt	.+2      	; 0x385a <motor_control_tick+0x82>
    3858:	41 c0       	rjmp	.+130    	; 0x38dc <motor_control_tick+0x104>
			/*stop the motors if the limit switches are triggered*/
			if(motor == 0 && ls1 == 0){
    385a:	11 11       	cpse	r17, r1
    385c:	1a c0       	rjmp	.+52     	; 0x3892 <motor_control_tick+0xba>
    385e:	89 81       	ldd	r24, Y+1	; 0x01
    3860:	81 11       	cpse	r24, r1
				reset_encoder(0);
    3862:	35 c0       	rjmp	.+106    	; 0x38ce <motor_control_tick+0xf6>
    3864:	a3 d9       	rcall	.-3258   	; 0x2bac <reset_encoder>
				power = 0;
				if(motor_leds){
    3866:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <motor_leds>
    386a:	88 23       	and	r24, r24
    386c:	09 f4       	brne	.+2      	; 0x3870 <motor_control_tick+0x98>
    386e:	5a c0       	rjmp	.+180    	; 0x3924 <motor_control_tick+0x14c>
					set_LED(LED_DBG, 3);
    3870:	63 e0       	ldi	r22, 0x03	; 3
    3872:	81 e0       	ldi	r24, 0x01	; 1
					update_LEDS(get_mS()/40);
    3874:	79 dd       	rcall	.-1294   	; 0x3368 <set_LED>
    3876:	0a d4       	rcall	.+2068   	; 0x408c <get_mS>
    3878:	28 e2       	ldi	r18, 0x28	; 40
    387a:	30 e0       	ldi	r19, 0x00	; 0
    387c:	40 e0       	ldi	r20, 0x00	; 0
    387e:	50 e0       	ldi	r21, 0x00	; 0
    3880:	8c d6       	rcall	.+3352   	; 0x459a <__udivmodsi4>
    3882:	c9 01       	movw	r24, r18
					set_LED(LED_DBG, 0);
    3884:	90 dd       	rcall	.-1248   	; 0x33a6 <update_LEDS>
    3886:	60 e0       	ldi	r22, 0x00	; 0
    3888:	81 e0       	ldi	r24, 0x01	; 1
    388a:	6e dd       	rcall	.-1316   	; 0x3368 <set_LED>
		int16_t power = motor_powers[motor];
		if(power < 0){
			/*stop the motors if the limit switches are triggered*/
			if(motor == 0 && ls1 == 0){
				reset_encoder(0);
				power = 0;
    388c:	e1 2c       	mov	r14, r1
    388e:	f1 2c       	mov	r15, r1
					set_LED(LED_DBG, 3);
					update_LEDS(get_mS()/40);
					set_LED(LED_DBG, 0);
				}
			}
			if(motor == 1 && ls2 == 0){
    3890:	1e c0       	rjmp	.+60     	; 0x38ce <motor_control_tick+0xf6>
    3892:	11 30       	cpi	r17, 0x01	; 1
    3894:	e1 f4       	brne	.+56     	; 0x38ce <motor_control_tick+0xf6>
    3896:	8a 81       	ldd	r24, Y+2	; 0x02
    3898:	81 11       	cpse	r24, r1
				reset_encoder(1);
    389a:	19 c0       	rjmp	.+50     	; 0x38ce <motor_control_tick+0xf6>
    389c:	81 e0       	ldi	r24, 0x01	; 1
				power = 0;
				if(motor_leds){
    389e:	86 d9       	rcall	.-3316   	; 0x2bac <reset_encoder>
    38a0:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <motor_leds>
    38a4:	88 23       	and	r24, r24
					set_LED(LED_DBG, 3);
    38a6:	89 f0       	breq	.+34     	; 0x38ca <motor_control_tick+0xf2>
    38a8:	63 e0       	ldi	r22, 0x03	; 3
					update_LEDS(get_mS()/40);
    38aa:	81 e0       	ldi	r24, 0x01	; 1
    38ac:	5d dd       	rcall	.-1350   	; 0x3368 <set_LED>
    38ae:	ee d3       	rcall	.+2012   	; 0x408c <get_mS>
    38b0:	28 e2       	ldi	r18, 0x28	; 40
    38b2:	30 e0       	ldi	r19, 0x00	; 0
    38b4:	40 e0       	ldi	r20, 0x00	; 0
    38b6:	50 e0       	ldi	r21, 0x00	; 0
    38b8:	70 d6       	rcall	.+3296   	; 0x459a <__udivmodsi4>
    38ba:	c9 01       	movw	r24, r18
					set_LED(LED_DBG, 0);
    38bc:	74 dd       	rcall	.-1304   	; 0x33a6 <update_LEDS>
    38be:	60 e0       	ldi	r22, 0x00	; 0
    38c0:	81 e0       	ldi	r24, 0x01	; 1
    38c2:	52 dd       	rcall	.-1372   	; 0x3368 <set_LED>
					set_LED(LED_DBG, 0);
				}
			}
			if(motor == 1 && ls2 == 0){
				reset_encoder(1);
				power = 0;
    38c4:	e1 2c       	mov	r14, r1
    38c6:	f1 2c       	mov	r15, r1
    38c8:	02 c0       	rjmp	.+4      	; 0x38ce <motor_control_tick+0xf6>
    38ca:	e1 2c       	mov	r14, r1
					set_LED(LED_DBG, 3);
					update_LEDS(get_mS()/40);
					set_LED(LED_DBG, 0);
				}
			}
			set_motor_direction(motor, 1);
    38cc:	f1 2c       	mov	r15, r1
    38ce:	61 e0       	ldi	r22, 0x01	; 1
    38d0:	81 2f       	mov	r24, r17
    38d2:	3d df       	rcall	.-390    	; 0x374e <set_motor_direction>
			power = -power;
    38d4:	f1 94       	neg	r15
    38d6:	e1 94       	neg	r14
    38d8:	f1 08       	sbc	r15, r1
    38da:	03 c0       	rjmp	.+6      	; 0x38e2 <motor_control_tick+0x10a>
		} else {
			set_motor_direction(motor, 0);
    38dc:	60 e0       	ldi	r22, 0x00	; 0
    38de:	81 2f       	mov	r24, r17
    38e0:	36 df       	rcall	.-404    	; 0x374e <set_motor_direction>
    38e2:	80 91 fc 01 	lds	r24, 0x01FC	; 0x8001fc <motor_leds>
		}
		if(motor_leds){
    38e6:	88 23       	and	r24, r24
    38e8:	89 f0       	breq	.+34     	; 0x390c <motor_control_tick+0x134>
    38ea:	a7 01       	movw	r20, r14
			set_RGB_LED(motor, 0, power / 16, 0);
    38ec:	ff 20       	and	r15, r15
    38ee:	14 f4       	brge	.+4      	; 0x38f4 <motor_control_tick+0x11c>
    38f0:	41 5f       	subi	r20, 0xF1	; 241
    38f2:	5f 4f       	sbci	r21, 0xFF	; 255
    38f4:	55 95       	asr	r21
    38f6:	47 95       	ror	r20
    38f8:	55 95       	asr	r21
    38fa:	47 95       	ror	r20
    38fc:	55 95       	asr	r21
    38fe:	47 95       	ror	r20
    3900:	55 95       	asr	r21
    3902:	47 95       	ror	r20
    3904:	20 e0       	ldi	r18, 0x00	; 0
    3906:	60 e0       	ldi	r22, 0x00	; 0
    3908:	81 2f       	mov	r24, r17
    390a:	26 de       	rcall	.-948    	; 0x3558 <set_RGB_LED>
		}
		write_PWM(motor + 3, power);
    390c:	b7 01       	movw	r22, r14
    390e:	83 e0       	ldi	r24, 0x03	; 3
    3910:	81 0f       	add	r24, r17
    3912:	6d d2       	rcall	.+1242   	; 0x3dee <write_PWM>
    3914:	1f 5f       	subi	r17, 0xFF	; 255
/*Update the motors. Call in a loop*/
void motor_control_tick(){
	volatile uint8_t ls1 = PINC & (1<<6);
	volatile uint8_t ls2 = PINC & (1<<5);
	//volatile uint8_t p = PINC;
	for(uint8_t motor = 0;motor < 3;motor++){
    3916:	f2 e0       	ldi	r31, 0x02	; 2
    3918:	cf 0e       	add	r12, r31
    391a:	d1 1c       	adc	r13, r1
    391c:	13 30       	cpi	r17, 0x03	; 3
    391e:	09 f0       	breq	.+2      	; 0x3922 <motor_control_tick+0x14a>
    3920:	7e cf       	rjmp	.-260    	; 0x381e <motor_control_tick+0x46>
    3922:	03 c0       	rjmp	.+6      	; 0x392a <motor_control_tick+0x152>
    3924:	e1 2c       	mov	r14, r1
		int16_t power = motor_powers[motor];
		if(power < 0){
			/*stop the motors if the limit switches are triggered*/
			if(motor == 0 && ls1 == 0){
				reset_encoder(0);
				power = 0;
    3926:	f1 2c       	mov	r15, r1
    3928:	d2 cf       	rjmp	.-92     	; 0x38ce <motor_control_tick+0xf6>
    392a:	0f 90       	pop	r0
		if(motor_leds){
			set_RGB_LED(motor, 0, power / 16, 0);
		}
		write_PWM(motor + 3, power);
	}
    392c:	0f 90       	pop	r0
    392e:	df 91       	pop	r29
    3930:	cf 91       	pop	r28
    3932:	1f 91       	pop	r17
    3934:	ff 90       	pop	r15
    3936:	ef 90       	pop	r14
    3938:	df 90       	pop	r13
    393a:	cf 90       	pop	r12
    393c:	bf 90       	pop	r11
    393e:	af 90       	pop	r10
    3940:	7f 90       	pop	r7
    3942:	6f 90       	pop	r6
    3944:	5f 90       	pop	r5
    3946:	4f 90       	pop	r4
    3948:	08 95       	ret

0000394a <disable_mob_interrupt>:
	CANPAGE = ((mob & 0x0F) << 4);
}

/*Disables the interrupt for the specified MOb*/
void disable_mob_interrupt(uint8_t mob){
	if(mob < 8){
    394a:	88 30       	cpi	r24, 0x08	; 8
    394c:	80 f4       	brcc	.+32     	; 0x396e <disable_mob_interrupt+0x24>
		CANIE2 &= ~(1 << mob);
    394e:	ee ed       	ldi	r30, 0xDE	; 222
    3950:	f0 e0       	ldi	r31, 0x00	; 0
    3952:	40 81       	ld	r20, Z
    3954:	21 e0       	ldi	r18, 0x01	; 1
    3956:	30 e0       	ldi	r19, 0x00	; 0
    3958:	b9 01       	movw	r22, r18
    395a:	02 c0       	rjmp	.+4      	; 0x3960 <disable_mob_interrupt+0x16>
    395c:	66 0f       	add	r22, r22
    395e:	77 1f       	adc	r23, r23
    3960:	8a 95       	dec	r24
    3962:	e2 f7       	brpl	.-8      	; 0x395c <disable_mob_interrupt+0x12>
    3964:	cb 01       	movw	r24, r22
    3966:	80 95       	com	r24
    3968:	84 23       	and	r24, r20
    396a:	80 83       	st	Z, r24
    396c:	08 95       	ret
		} else {
		CANIE1 &= ~(1 << (mob - 8));
    396e:	ef ed       	ldi	r30, 0xDF	; 223
    3970:	f0 e0       	ldi	r31, 0x00	; 0
    3972:	40 81       	ld	r20, Z
    3974:	88 50       	subi	r24, 0x08	; 8
    3976:	21 e0       	ldi	r18, 0x01	; 1
    3978:	30 e0       	ldi	r19, 0x00	; 0
    397a:	b9 01       	movw	r22, r18
    397c:	02 c0       	rjmp	.+4      	; 0x3982 <disable_mob_interrupt+0x38>
    397e:	66 0f       	add	r22, r22
    3980:	77 1f       	adc	r23, r23
    3982:	8a 95       	dec	r24
    3984:	e2 f7       	brpl	.-8      	; 0x397e <disable_mob_interrupt+0x34>
    3986:	cb 01       	movw	r24, r22
    3988:	80 95       	com	r24
    398a:	84 23       	and	r24, r20
    398c:	80 83       	st	Z, r24
    398e:	08 95       	ret

00003990 <enable_mob_interrupt>:
	}
}

/*Enable the interrupt for the specified MOb*/
void enable_mob_interrupt(uint8_t mob){
	if(mob < 8){
    3990:	88 30       	cpi	r24, 0x08	; 8
    3992:	78 f4       	brcc	.+30     	; 0x39b2 <enable_mob_interrupt+0x22>
		CANIE2 |= (1 << mob);
    3994:	ee ed       	ldi	r30, 0xDE	; 222
    3996:	f0 e0       	ldi	r31, 0x00	; 0
    3998:	40 81       	ld	r20, Z
    399a:	21 e0       	ldi	r18, 0x01	; 1
    399c:	30 e0       	ldi	r19, 0x00	; 0
    399e:	b9 01       	movw	r22, r18
    39a0:	02 c0       	rjmp	.+4      	; 0x39a6 <enable_mob_interrupt+0x16>
    39a2:	66 0f       	add	r22, r22
    39a4:	77 1f       	adc	r23, r23
    39a6:	8a 95       	dec	r24
    39a8:	e2 f7       	brpl	.-8      	; 0x39a2 <enable_mob_interrupt+0x12>
    39aa:	cb 01       	movw	r24, r22
    39ac:	84 2b       	or	r24, r20
    39ae:	80 83       	st	Z, r24
    39b0:	08 95       	ret
		} else {
		CANIE1 |= (1 << (mob - 8));
    39b2:	ef ed       	ldi	r30, 0xDF	; 223
    39b4:	f0 e0       	ldi	r31, 0x00	; 0
    39b6:	40 81       	ld	r20, Z
    39b8:	88 50       	subi	r24, 0x08	; 8
    39ba:	21 e0       	ldi	r18, 0x01	; 1
    39bc:	30 e0       	ldi	r19, 0x00	; 0
    39be:	b9 01       	movw	r22, r18
    39c0:	02 c0       	rjmp	.+4      	; 0x39c6 <enable_mob_interrupt+0x36>
    39c2:	66 0f       	add	r22, r22
    39c4:	77 1f       	adc	r23, r23
    39c6:	8a 95       	dec	r24
    39c8:	e2 f7       	brpl	.-8      	; 0x39c2 <enable_mob_interrupt+0x32>
    39ca:	cb 01       	movw	r24, r22
    39cc:	84 2b       	or	r24, r20
    39ce:	80 83       	st	Z, r24
    39d0:	08 95       	ret

000039d2 <__vector_18>:
	}
}

/*CAN controller interrupt handler*/
ISR(CANIT_vect){
    39d2:	1f 92       	push	r1
    39d4:	0f 92       	push	r0
    39d6:	0f b6       	in	r0, 0x3f	; 63
    39d8:	0f 92       	push	r0
    39da:	11 24       	eor	r1, r1
    39dc:	0b b6       	in	r0, 0x3b	; 59
    39de:	0f 92       	push	r0
    39e0:	2f 93       	push	r18
    39e2:	3f 93       	push	r19
    39e4:	4f 93       	push	r20
    39e6:	5f 93       	push	r21
    39e8:	6f 93       	push	r22
    39ea:	7f 93       	push	r23
    39ec:	8f 93       	push	r24
    39ee:	9f 93       	push	r25
    39f0:	af 93       	push	r26
    39f2:	bf 93       	push	r27
    39f4:	cf 93       	push	r28
    39f6:	ef 93       	push	r30
    39f8:	ff 93       	push	r31
	uint8_t canpage = CANPAGE; //Save CAN page
    39fa:	c0 91 ed 00 	lds	r28, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	if((CANHPMOB & 0xF0) != 0xF0){ //Message io?
    39fe:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    3a02:	80 7f       	andi	r24, 0xF0	; 240
    3a04:	80 3f       	cpi	r24, 0xF0	; 240
    3a06:	a1 f1       	breq	.+104    	; 0x3a70 <__vector_18+0x9e>
		int mob = (CANHPMOB >> 4);
    3a08:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    3a0c:	82 95       	swap	r24
    3a0e:	8f 70       	andi	r24, 0x0F	; 15

uint8_t devGrp, devSer;

/*Selects the MOB to operate on*/
void inline select_mob(uint8_t mob){
	CANPAGE = ((mob & 0x0F) << 4);
    3a10:	90 e1       	ldi	r25, 0x10	; 16
    3a12:	89 9f       	mul	r24, r25
    3a14:	90 01       	movw	r18, r0
    3a16:	11 24       	eor	r1, r1
    3a18:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
ISR(CANIT_vect){
	uint8_t canpage = CANPAGE; //Save CAN page
	if((CANHPMOB & 0xF0) != 0xF0){ //Message io?
		int mob = (CANHPMOB >> 4);
		select_mob(mob);
		if(CANSTMOB & (1 << TXOK)){ //TX
    3a1c:	90 91 ee 00 	lds	r25, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    3a20:	96 ff       	sbrs	r25, 6
    3a22:	08 c0       	rjmp	.+16     	; 0x3a34 <__vector_18+0x62>
			/*Reset the MOb*/
			CANSTMOB &= 0;
    3a24:	ee ee       	ldi	r30, 0xEE	; 238
    3a26:	f0 e0       	ldi	r31, 0x00	; 0
    3a28:	90 81       	ld	r25, Z
    3a2a:	10 82       	st	Z, r1
			CANCDMOB = 0;
    3a2c:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
			enable_mob_interrupt(mob);
    3a30:	af df       	rcall	.-162    	; 0x3990 <enable_mob_interrupt>
    3a32:	22 c0       	rjmp	.+68     	; 0x3a78 <__vector_18+0xa6>
		} else { //RX
			msgs_av++; //Increase count of messages
    3a34:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <msgs_av>
    3a38:	9f 5f       	subi	r25, 0xFF	; 255
    3a3a:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <msgs_av>
			rxed_mobs[!!(mob & 8)] |= (1 << (mob & 7)); // Mark which MOb has a message
    3a3e:	e8 2f       	mov	r30, r24
    3a40:	e6 95       	lsr	r30
    3a42:	e6 95       	lsr	r30
    3a44:	e6 95       	lsr	r30
    3a46:	f0 e0       	ldi	r31, 0x00	; 0
    3a48:	eb 5c       	subi	r30, 0xCB	; 203
    3a4a:	fd 4f       	sbci	r31, 0xFD	; 253
    3a4c:	90 81       	ld	r25, Z
    3a4e:	48 2f       	mov	r20, r24
    3a50:	47 70       	andi	r20, 0x07	; 7
    3a52:	21 e0       	ldi	r18, 0x01	; 1
    3a54:	30 e0       	ldi	r19, 0x00	; 0
    3a56:	02 c0       	rjmp	.+4      	; 0x3a5c <__vector_18+0x8a>
    3a58:	22 0f       	add	r18, r18
    3a5a:	33 1f       	adc	r19, r19
    3a5c:	4a 95       	dec	r20
    3a5e:	e2 f7       	brpl	.-8      	; 0x3a58 <__vector_18+0x86>
    3a60:	29 2b       	or	r18, r25
    3a62:	20 83       	st	Z, r18
			CANSTMOB &= 0; //Reset the MOb
    3a64:	ee ee       	ldi	r30, 0xEE	; 238
    3a66:	f0 e0       	ldi	r31, 0x00	; 0
    3a68:	90 81       	ld	r25, Z
			disable_mob_interrupt(mob);
    3a6a:	10 82       	st	Z, r1
    3a6c:	6e df       	rcall	.-292    	; 0x394a <disable_mob_interrupt>
    3a6e:	04 c0       	rjmp	.+8      	; 0x3a78 <__vector_18+0xa6>
		}
	} else {
		CANGIT |= 0; //Error interrupt - Handle these?
    3a70:	ea ed       	ldi	r30, 0xDA	; 218
    3a72:	f0 e0       	ldi	r31, 0x00	; 0
    3a74:	80 81       	ld	r24, Z
    3a76:	80 83       	st	Z, r24
	}
	CANPAGE = canpage; //restore CAN page
    3a78:	c0 93 ed 00 	sts	0x00ED, r28	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
}
    3a7c:	ff 91       	pop	r31
    3a7e:	ef 91       	pop	r30
    3a80:	cf 91       	pop	r28
    3a82:	bf 91       	pop	r27
    3a84:	af 91       	pop	r26
    3a86:	9f 91       	pop	r25
    3a88:	8f 91       	pop	r24
    3a8a:	7f 91       	pop	r23
    3a8c:	6f 91       	pop	r22
    3a8e:	5f 91       	pop	r21
    3a90:	4f 91       	pop	r20
    3a92:	3f 91       	pop	r19
    3a94:	2f 91       	pop	r18
    3a96:	0f 90       	pop	r0
    3a98:	0b be       	out	0x3b, r0	; 59
    3a9a:	0f 90       	pop	r0
    3a9c:	0f be       	out	0x3f, r0	; 63
    3a9e:	0f 90       	pop	r0
    3aa0:	1f 90       	pop	r1
    3aa2:	18 95       	reti

00003aa4 <set_mob_rx_filter>:

uint8_t devGrp, devSer;

/*Selects the MOB to operate on*/
void inline select_mob(uint8_t mob){
	CANPAGE = ((mob & 0x0F) << 4);
    3aa4:	9c 01       	movw	r18, r24
    3aa6:	33 27       	eor	r19, r19
    3aa8:	22 95       	swap	r18
    3aaa:	32 95       	swap	r19
    3aac:	30 7f       	andi	r19, 0xF0	; 240
    3aae:	32 27       	eor	r19, r18
    3ab0:	20 7f       	andi	r18, 0xF0	; 240
    3ab2:	32 27       	eor	r19, r18
    3ab4:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
/*Reset the receive filter for the given MOb*/
void set_mob_rx_filter(int mob){
	select_mob(mob);
	uint16_t RX_mask = 0x3FF; // mask out priority bit, compare on everything else
	uint16_t RX_tag = 0x3F; //0th MOb is for broadcast packets, group = 0, serial = 0x3F
	if(mob > 0 && mob <= 2){ //1st und 2nd MOb is for device group broadcasts, match device group and 0x3F serial
    3ab8:	9c 01       	movw	r18, r24
    3aba:	21 50       	subi	r18, 0x01	; 1
    3abc:	31 09       	sbc	r19, r1
    3abe:	22 30       	cpi	r18, 0x02	; 2
    3ac0:	31 05       	cpc	r19, r1
    3ac2:	40 f4       	brcc	.+16     	; 0x3ad4 <set_mob_rx_filter+0x30>
		RX_tag = (devGrp << 6) | 0x3F;
    3ac4:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <devGrp>
    3ac8:	20 e4       	ldi	r18, 0x40	; 64
    3aca:	82 9f       	mul	r24, r18
    3acc:	c0 01       	movw	r24, r0
    3ace:	11 24       	eor	r1, r1
    3ad0:	8f 63       	ori	r24, 0x3F	; 63
    3ad2:	0f c0       	rjmp	.+30     	; 0x3af2 <set_mob_rx_filter+0x4e>
	} else if(mob > 2 && mob <= 4){ //2nd and 3rd MOb is for the device specific message. Match the whole ID
    3ad4:	03 97       	sbiw	r24, 0x03	; 3
    3ad6:	02 97       	sbiw	r24, 0x02	; 2
    3ad8:	50 f4       	brcc	.+20     	; 0x3aee <set_mob_rx_filter+0x4a>
		RX_tag = (devGrp << 6) | devSer;
    3ada:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <devGrp>
    3ade:	20 e4       	ldi	r18, 0x40	; 64
    3ae0:	82 9f       	mul	r24, r18
    3ae2:	c0 01       	movw	r24, r0
    3ae4:	11 24       	eor	r1, r1
    3ae6:	20 91 34 02 	lds	r18, 0x0234	; 0x800234 <devSer>
    3aea:	82 2b       	or	r24, r18
    3aec:	02 c0       	rjmp	.+4      	; 0x3af2 <set_mob_rx_filter+0x4e>

/*Reset the receive filter for the given MOb*/
void set_mob_rx_filter(int mob){
	select_mob(mob);
	uint16_t RX_mask = 0x3FF; // mask out priority bit, compare on everything else
	uint16_t RX_tag = 0x3F; //0th MOb is for broadcast packets, group = 0, serial = 0x3F
    3aee:	8f e3       	ldi	r24, 0x3F	; 63
    3af0:	90 e0       	ldi	r25, 0x00	; 0
		RX_tag = (devGrp << 6) | 0x3F;
	} else if(mob > 2 && mob <= 4){ //2nd and 3rd MOb is for the device specific message. Match the whole ID
		RX_tag = (devGrp << 6) | devSer;
	}

	CANIDM4 = 0;
    3af2:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7e00f4>
	CANIDM3 = 0;
    3af6:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7e00f5>
	CANIDT4 = 0;
    3afa:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
	CANIDT3 = 0;
    3afe:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
	CANIDT2 = ((RX_tag & 7) << 5);
    3b02:	28 2f       	mov	r18, r24
    3b04:	22 95       	swap	r18
    3b06:	22 0f       	add	r18, r18
    3b08:	20 7e       	andi	r18, 0xE0	; 224
    3b0a:	20 93 f2 00 	sts	0x00F2, r18	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
	CANIDT1 = ((RX_tag & 0x7F8) >> 3);
    3b0e:	88 7f       	andi	r24, 0xF8	; 248
    3b10:	97 70       	andi	r25, 0x07	; 7
    3b12:	96 95       	lsr	r25
    3b14:	87 95       	ror	r24
    3b16:	96 95       	lsr	r25
    3b18:	87 95       	ror	r24
    3b1a:	96 95       	lsr	r25
    3b1c:	87 95       	ror	r24
    3b1e:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
	CANIDM2 = ((RX_mask & 7) << 5);
    3b22:	80 ee       	ldi	r24, 0xE0	; 224
    3b24:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7e00f6>
	CANIDM1 = ((RX_mask & 0x7F8) >> 3);
    3b28:	8f e7       	ldi	r24, 0x7F	; 127
    3b2a:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7e00f7>
    3b2e:	08 95       	ret

00003b30 <init_CAN>:
Parameters:
uint32_t rate: the baud rate selection
uint8_t txmobs: how many MOBs to dedicate to transmission
uint8_t mode: The mode to operate the CAN controller in
*/
void init_CAN(uint32_t rate, uint16_t deviceGroup, uint16_t deviceSerial){
    3b30:	df 92       	push	r13
    3b32:	ef 92       	push	r14
    3b34:	ff 92       	push	r15
    3b36:	0f 93       	push	r16
    3b38:	1f 93       	push	r17
    3b3a:	cf 93       	push	r28
    3b3c:	df 93       	push	r29
	CANGCON |= (1<<SWRES); //reset the CAN controller
    3b3e:	e8 ed       	ldi	r30, 0xD8	; 216
    3b40:	f0 e0       	ldi	r31, 0x00	; 0
    3b42:	90 81       	ld	r25, Z
    3b44:	91 60       	ori	r25, 0x01	; 1
    3b46:	90 83       	st	Z, r25
	devGrp = deviceGroup; //Save the device group and serial
    3b48:	40 93 38 02 	sts	0x0238, r20	; 0x800238 <devGrp>
	devSer = deviceSerial;
    3b4c:	20 93 34 02 	sts	0x0234, r18	; 0x800234 <devSer>
    3b50:	2f ef       	ldi	r18, 0xFF	; 255
    3b52:	31 ee       	ldi	r19, 0xE1	; 225
    3b54:	94 e0       	ldi	r25, 0x04	; 4
    3b56:	21 50       	subi	r18, 0x01	; 1
    3b58:	30 40       	sbci	r19, 0x00	; 0
    3b5a:	90 40       	sbci	r25, 0x00	; 0
    3b5c:	e1 f7       	brne	.-8      	; 0x3b56 <init_CAN+0x26>
    3b5e:	00 c0       	rjmp	.+0      	; 0x3b60 <init_CAN+0x30>
    3b60:	00 00       	nop
	_delay_ms(100); //The CAN controller is a slow bitch to reset. Twiddle our thumbs while it resets
	/*Set up the rate*/
	CANBT1 = (uint32_t)(rate & 0xFF0000L) >> 16;
    3b62:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
	CANBT2 = (uint32_t)(rate & 0x00FF00L) >> 8;
    3b66:	70 93 e3 00 	sts	0x00E3, r23	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
	CANBT3 = (uint32_t)(rate & 0x0000FFL);
    3b6a:	60 93 e4 00 	sts	0x00E4, r22	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	CANGIE = (1 << CANIT) | (1 << ENRX) | (1 << ENTX); //Enable CAN interrupts
    3b6e:	80 eb       	ldi	r24, 0xB0	; 176
    3b70:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
	CANTCON = 255; //Set the can timer to run at 1/2048th of F_CPU
    3b74:	8f ef       	ldi	r24, 0xFF	; 255
    3b76:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	rxed_mobs[0] = rxed_mobs[1] = 0;
    3b7a:	e5 e3       	ldi	r30, 0x35	; 53
    3b7c:	f2 e0       	ldi	r31, 0x02	; 2
    3b7e:	11 82       	std	Z+1, r1	; 0x01
    3b80:	10 82       	st	Z, r1
    3b82:	c0 e0       	ldi	r28, 0x00	; 0
    3b84:	d0 e0       	ldi	r29, 0x00	; 0
			CANSTMOB &= 0;
			set_mob_rx_filter(i);
			CANCDMOB = (1 << CONMOB1); //Mark RX mobs
			enable_mob_interrupt(i); // enable the receive interrupt
		} else {
			CANCDMOB = 0; //Mark as TX MOb
    3b86:	0f ee       	ldi	r16, 0xEF	; 239
    3b88:	10 e0       	ldi	r17, 0x00	; 0
	uint8_t i;
	/*Initialize MOBs*/
	for(i = 0;i < 15;i++){
		if(i <= 4){ /*MObs <= 4 are RX mobs*/
			/*Set up the match registers*/
			CANSTMOB &= 0;
    3b8a:	0f 2e       	mov	r0, r31
    3b8c:	fe ee       	ldi	r31, 0xEE	; 238
    3b8e:	ef 2e       	mov	r14, r31
    3b90:	f1 2c       	mov	r15, r1
    3b92:	f0 2d       	mov	r31, r0
			set_mob_rx_filter(i);
			CANCDMOB = (1 << CONMOB1); //Mark RX mobs
    3b94:	68 94       	set
    3b96:	dd 24       	eor	r13, r13
    3b98:	d7 f8       	bld	r13, 7
	CANTCON = 255; //Set the can timer to run at 1/2048th of F_CPU
	rxed_mobs[0] = rxed_mobs[1] = 0;
	uint8_t i;
	/*Initialize MOBs*/
	for(i = 0;i < 15;i++){
		if(i <= 4){ /*MObs <= 4 are RX mobs*/
    3b9a:	c5 30       	cpi	r28, 0x05	; 5
    3b9c:	50 f4       	brcc	.+20     	; 0x3bb2 <init_CAN+0x82>
			/*Set up the match registers*/
			CANSTMOB &= 0;
    3b9e:	f7 01       	movw	r30, r14
    3ba0:	80 81       	ld	r24, Z
    3ba2:	10 82       	st	Z, r1
			set_mob_rx_filter(i);
    3ba4:	ce 01       	movw	r24, r28
    3ba6:	7e df       	rcall	.-260    	; 0x3aa4 <set_mob_rx_filter>
			CANCDMOB = (1 << CONMOB1); //Mark RX mobs
    3ba8:	f8 01       	movw	r30, r16
    3baa:	d0 82       	st	Z, r13
			enable_mob_interrupt(i); // enable the receive interrupt
    3bac:	8c 2f       	mov	r24, r28
    3bae:	f0 de       	rcall	.-544    	; 0x3990 <enable_mob_interrupt>
    3bb0:	02 c0       	rjmp	.+4      	; 0x3bb6 <init_CAN+0x86>
		} else {
			CANCDMOB = 0; //Mark as TX MOb
    3bb2:	f8 01       	movw	r30, r16
    3bb4:	10 82       	st	Z, r1
    3bb6:	21 96       	adiw	r28, 0x01	; 1
	CANGIE = (1 << CANIT) | (1 << ENRX) | (1 << ENTX); //Enable CAN interrupts
	CANTCON = 255; //Set the can timer to run at 1/2048th of F_CPU
	rxed_mobs[0] = rxed_mobs[1] = 0;
	uint8_t i;
	/*Initialize MOBs*/
	for(i = 0;i < 15;i++){
    3bb8:	cf 30       	cpi	r28, 0x0F	; 15
    3bba:	d1 05       	cpc	r29, r1
    3bbc:	71 f7       	brne	.-36     	; 0x3b9a <init_CAN+0x6a>
			enable_mob_interrupt(i); // enable the receive interrupt
		} else {
			CANCDMOB = 0; //Mark as TX MOb
		}
	}
	msgs_av = 0;
    3bbe:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <msgs_av>
	//Enable the CAN controller
	CANGCON = (1 << ENASTB);
    3bc2:	82 e0       	ldi	r24, 0x02	; 2
    3bc4:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
}
    3bc8:	df 91       	pop	r29
    3bca:	cf 91       	pop	r28
    3bcc:	1f 91       	pop	r17
    3bce:	0f 91       	pop	r16
    3bd0:	ff 90       	pop	r15
    3bd2:	ef 90       	pop	r14
    3bd4:	df 90       	pop	r13
    3bd6:	08 95       	ret

00003bd8 <find_free_mob>:

uint8_t devGrp, devSer;

/*Selects the MOB to operate on*/
void inline select_mob(uint8_t mob){
	CANPAGE = ((mob & 0x0F) << 4);
    3bd8:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
int8_t find_free_mob(){
	uint8_t i;
	uint8_t status;
	for(i = 0;i < 15;i++){
		select_mob(i);
		status = CANCDMOB;
    3bdc:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
		if(!(status & ((1 << CONMOB1) | (1 << CONMOB0)))){
    3be0:	80 7c       	andi	r24, 0xC0	; 192
    3be2:	99 f0       	breq	.+38     	; 0x3c0a <find_free_mob+0x32>
    3be4:	21 e0       	ldi	r18, 0x01	; 1
    3be6:	30 e0       	ldi	r19, 0x00	; 0

uint8_t devGrp, devSer;

/*Selects the MOB to operate on*/
void inline select_mob(uint8_t mob){
	CANPAGE = ((mob & 0x0F) << 4);
    3be8:	ad ee       	ldi	r26, 0xED	; 237
    3bea:	b0 e0       	ldi	r27, 0x00	; 0
int8_t find_free_mob(){
	uint8_t i;
	uint8_t status;
	for(i = 0;i < 15;i++){
		select_mob(i);
		status = CANCDMOB;
    3bec:	ef ee       	ldi	r30, 0xEF	; 239
    3bee:	f0 e0       	ldi	r31, 0x00	; 0
    3bf0:	82 2f       	mov	r24, r18

uint8_t devGrp, devSer;

/*Selects the MOB to operate on*/
void inline select_mob(uint8_t mob){
	CANPAGE = ((mob & 0x0F) << 4);
    3bf2:	a9 01       	movw	r20, r18
    3bf4:	42 95       	swap	r20
    3bf6:	52 95       	swap	r21
    3bf8:	50 7f       	andi	r21, 0xF0	; 240
    3bfa:	54 27       	eor	r21, r20
    3bfc:	40 7f       	andi	r20, 0xF0	; 240
    3bfe:	54 27       	eor	r21, r20
    3c00:	4c 93       	st	X, r20
int8_t find_free_mob(){
	uint8_t i;
	uint8_t status;
	for(i = 0;i < 15;i++){
		select_mob(i);
		status = CANCDMOB;
    3c02:	90 81       	ld	r25, Z
		if(!(status & ((1 << CONMOB1) | (1 << CONMOB0)))){
    3c04:	90 7c       	andi	r25, 0xC0	; 192
    3c06:	19 f4       	brne	.+6      	; 0x3c0e <find_free_mob+0x36>
    3c08:	08 95       	ret

/*Finds a free MOb or returns -1 if they're all used*/
int8_t find_free_mob(){
	uint8_t i;
	uint8_t status;
	for(i = 0;i < 15;i++){
    3c0a:	80 e0       	ldi	r24, 0x00	; 0
		select_mob(i);
		status = CANCDMOB;
		if(!(status & ((1 << CONMOB1) | (1 << CONMOB0)))){
			return i;
    3c0c:	08 95       	ret
    3c0e:	2f 5f       	subi	r18, 0xFF	; 255
    3c10:	3f 4f       	sbci	r19, 0xFF	; 255

/*Finds a free MOb or returns -1 if they're all used*/
int8_t find_free_mob(){
	uint8_t i;
	uint8_t status;
	for(i = 0;i < 15;i++){
    3c12:	2f 30       	cpi	r18, 0x0F	; 15
    3c14:	31 05       	cpc	r19, r1
    3c16:	61 f7       	brne	.-40     	; 0x3bf0 <find_free_mob+0x18>
		status = CANCDMOB;
		if(!(status & ((1 << CONMOB1) | (1 << CONMOB0)))){
			return i;
		}
	}
	return -1;
    3c18:	8f ef       	ldi	r24, 0xFF	; 255
}
    3c1a:	08 95       	ret

00003c1c <InitCAN>:


void InitCAN(int deviceGroup, int deviceAddress)
{
    3c1c:	9b 01       	movw	r18, r22
    init_CAN(CAN_125_BAUD, deviceGroup, deviceAddress);
    3c1e:	ac 01       	movw	r20, r24
    3c20:	63 e1       	ldi	r22, 0x13	; 19
    3c22:	74 e0       	ldi	r23, 0x04	; 4
    3c24:	8e e1       	ldi	r24, 0x1E	; 30
    3c26:	90 e0       	ldi	r25, 0x00	; 0
    3c28:	83 cf       	rjmp	.-250    	; 0x3b30 <init_CAN>
    3c2a:	08 95       	ret

00003c2c <SendCANPacket>:
}

int SendCANPacket(CANPacket *packetToSend)
{
    3c2c:	cf 93       	push	r28
    3c2e:	df 93       	push	r29
    3c30:	ec 01       	movw	r28, r24
    uint8_t i;
	int8_t mob = find_free_mob();
    3c32:	d2 df       	rcall	.-92     	; 0x3bd8 <find_free_mob>
	if(mob == -1){
    3c34:	8f 3f       	cpi	r24, 0xFF	; 255
    3c36:	e9 f1       	breq	.+122    	; 0x3cb2 <SendCANPacket+0x86>

uint8_t devGrp, devSer;

/*Selects the MOB to operate on*/
void inline select_mob(uint8_t mob){
	CANPAGE = ((mob & 0x0F) << 4);
    3c38:	90 e1       	ldi	r25, 0x10	; 16
    3c3a:	89 9f       	mul	r24, r25
    3c3c:	90 01       	movw	r18, r0
    3c3e:	11 24       	eor	r1, r1
    3c40:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	int8_t mob = find_free_mob();
	if(mob == -1){
		return 0x02; //No MObs available
	}
	select_mob(mob);
	CANSTMOB &= 0;
    3c44:	ee ee       	ldi	r30, 0xEE	; 238
    3c46:	f0 e0       	ldi	r31, 0x00	; 0
    3c48:	90 81       	ld	r25, Z
    3c4a:	10 82       	st	Z, r1
	CANCDMOB = packetToSend->dlc & 0x0F;
    3c4c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c4e:	9f 70       	andi	r25, 0x0F	; 15
    3c50:	90 93 ef 00 	sts	0x00EF, r25	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	for(i = 0;i < packetToSend->dlc && i < 8;i++){ //Copy the data into the MOb
    3c54:	9a 81       	ldd	r25, Y+2	; 0x02
    3c56:	99 23       	and	r25, r25
    3c58:	69 f0       	breq	.+26     	; 0x3c74 <SendCANPacket+0x48>
    3c5a:	fe 01       	movw	r30, r28
    3c5c:	33 96       	adiw	r30, 0x03	; 3
    3c5e:	90 e0       	ldi	r25, 0x00	; 0
		CANMSG = packetToSend->data[i];
    3c60:	aa ef       	ldi	r26, 0xFA	; 250
    3c62:	b0 e0       	ldi	r27, 0x00	; 0
    3c64:	21 91       	ld	r18, Z+
    3c66:	2c 93       	st	X, r18
		return 0x02; //No MObs available
	}
	select_mob(mob);
	CANSTMOB &= 0;
	CANCDMOB = packetToSend->dlc & 0x0F;
	for(i = 0;i < packetToSend->dlc && i < 8;i++){ //Copy the data into the MOb
    3c68:	9f 5f       	subi	r25, 0xFF	; 255
    3c6a:	2a 81       	ldd	r18, Y+2	; 0x02
    3c6c:	92 17       	cp	r25, r18
    3c6e:	10 f4       	brcc	.+4      	; 0x3c74 <SendCANPacket+0x48>
    3c70:	98 30       	cpi	r25, 0x08	; 8
    3c72:	c1 f7       	brne	.-16     	; 0x3c64 <SendCANPacket+0x38>
		CANMSG = packetToSend->data[i];
	}
	CANIDT4 = 0; //CAN v2.0 - we don't care
    3c74:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
	CANIDT3 = 0;
    3c78:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
	CANIDT2 = ((packetToSend->id & 7) << 5);
    3c7c:	98 81       	ld	r25, Y
    3c7e:	92 95       	swap	r25
    3c80:	99 0f       	add	r25, r25
    3c82:	90 7e       	andi	r25, 0xE0	; 224
    3c84:	90 93 f2 00 	sts	0x00F2, r25	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
	CANIDT1 = ((packetToSend->id & 0x7F8) >> 3);
    3c88:	28 81       	ld	r18, Y
    3c8a:	39 81       	ldd	r19, Y+1	; 0x01
    3c8c:	28 7f       	andi	r18, 0xF8	; 248
    3c8e:	37 70       	andi	r19, 0x07	; 7
    3c90:	36 95       	lsr	r19
    3c92:	27 95       	ror	r18
    3c94:	36 95       	lsr	r19
    3c96:	27 95       	ror	r18
    3c98:	36 95       	lsr	r19
    3c9a:	27 95       	ror	r18
    3c9c:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
	CANCDMOB |= (1<<CONMOB0);
    3ca0:	ef ee       	ldi	r30, 0xEF	; 239
    3ca2:	f0 e0       	ldi	r31, 0x00	; 0
    3ca4:	90 81       	ld	r25, Z
    3ca6:	90 64       	ori	r25, 0x40	; 64
	enable_mob_interrupt(mob); //Enable MOb interrupt
    3ca8:	90 83       	st	Z, r25
    3caa:	72 de       	rcall	.-796    	; 0x3990 <enable_mob_interrupt>
	return 0;
    3cac:	80 e0       	ldi	r24, 0x00	; 0
    3cae:	90 e0       	ldi	r25, 0x00	; 0
    3cb0:	02 c0       	rjmp	.+4      	; 0x3cb6 <SendCANPacket+0x8a>
int SendCANPacket(CANPacket *packetToSend)
{
    uint8_t i;
	int8_t mob = find_free_mob();
	if(mob == -1){
		return 0x02; //No MObs available
    3cb2:	82 e0       	ldi	r24, 0x02	; 2
    3cb4:	90 e0       	ldi	r25, 0x00	; 0
	CANIDT2 = ((packetToSend->id & 7) << 5);
	CANIDT1 = ((packetToSend->id & 0x7F8) >> 3);
	CANCDMOB |= (1<<CONMOB0);
	enable_mob_interrupt(mob); //Enable MOb interrupt
	return 0;
}
    3cb6:	df 91       	pop	r29
    3cb8:	cf 91       	pop	r28
    3cba:	08 95       	ret

00003cbc <PollAndReceiveCANPacket>:

int PollAndReceiveCANPacket(CANPacket *receivedPacket)
{
    3cbc:	1f 93       	push	r17
    3cbe:	cf 93       	push	r28
    3cc0:	df 93       	push	r29
	if(receivedPacket == NULL){
    3cc2:	00 97       	sbiw	r24, 0x00	; 0
    3cc4:	09 f4       	brne	.+2      	; 0x3cc8 <PollAndReceiveCANPacket+0xc>
    3cc6:	81 c0       	rjmp	.+258    	; 0x3dca <PollAndReceiveCANPacket+0x10e>
	CANGCON = (1 << ENASTB);
}

/*Returns the number of CAN messages waiting*/
uint8_t inline CAN_msg_available(){
	return msgs_av;
    3cc8:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <msgs_av>
	if(receivedPacket == NULL){
		return 0x02;
	}

	uint8_t i, mob;
	if(!CAN_msg_available()){
    3ccc:	22 23       	and	r18, r18
    3cce:	09 f4       	brne	.+2      	; 0x3cd2 <PollAndReceiveCANPacket+0x16>
    3cd0:	7f c0       	rjmp	.+254    	; 0x3dd0 <PollAndReceiveCANPacket+0x114>

uint8_t devGrp, devSer;

/*Selects the MOB to operate on*/
void inline select_mob(uint8_t mob){
	CANPAGE = ((mob & 0x0F) << 4);
    3cd2:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	}
	/*Find a MOb with a message*/
	for(i = 0;i < 16;i++){
		if(i == 15) return 0x01;
		select_mob(i);
		if(rxed_mobs[!!(i & 8)] & (1 << (i & 7))){
    3cd6:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <rxed_mobs>
    3cda:	20 fd       	sbrc	r18, 0
    3cdc:	25 c0       	rjmp	.+74     	; 0x3d28 <PollAndReceiveCANPacket+0x6c>
    3cde:	21 e0       	ldi	r18, 0x01	; 1
    3ce0:	30 e0       	ldi	r19, 0x00	; 0

uint8_t devGrp, devSer;

/*Selects the MOB to operate on*/
void inline select_mob(uint8_t mob){
	CANPAGE = ((mob & 0x0F) << 4);
    3ce2:	ad ee       	ldi	r26, 0xED	; 237
    3ce4:	b0 e0       	ldi	r27, 0x00	; 0
    3ce6:	12 2f       	mov	r17, r18
    3ce8:	a9 01       	movw	r20, r18
    3cea:	42 95       	swap	r20
    3cec:	52 95       	swap	r21
    3cee:	50 7f       	andi	r21, 0xF0	; 240
    3cf0:	54 27       	eor	r21, r20
    3cf2:	40 7f       	andi	r20, 0xF0	; 240
    3cf4:	54 27       	eor	r21, r20
    3cf6:	4c 93       	st	X, r20
	}
	/*Find a MOb with a message*/
	for(i = 0;i < 16;i++){
		if(i == 15) return 0x01;
		select_mob(i);
		if(rxed_mobs[!!(i & 8)] & (1 << (i & 7))){
    3cf8:	23 fb       	bst	r18, 3
    3cfa:	66 27       	eor	r22, r22
    3cfc:	60 f9       	bld	r22, 0
    3cfe:	70 e0       	ldi	r23, 0x00	; 0
    3d00:	fb 01       	movw	r30, r22
    3d02:	eb 5c       	subi	r30, 0xCB	; 203
    3d04:	fd 4f       	sbci	r31, 0xFD	; 253
    3d06:	40 81       	ld	r20, Z
    3d08:	50 e0       	ldi	r21, 0x00	; 0
    3d0a:	e2 2f       	mov	r30, r18
    3d0c:	e7 70       	andi	r30, 0x07	; 7
    3d0e:	02 c0       	rjmp	.+4      	; 0x3d14 <PollAndReceiveCANPacket+0x58>
    3d10:	55 95       	asr	r21
    3d12:	47 95       	ror	r20
    3d14:	ea 95       	dec	r30
    3d16:	e2 f7       	brpl	.-8      	; 0x3d10 <PollAndReceiveCANPacket+0x54>
    3d18:	40 fd       	sbrc	r20, 0
    3d1a:	07 c0       	rjmp	.+14     	; 0x3d2a <PollAndReceiveCANPacket+0x6e>
    3d1c:	2f 5f       	subi	r18, 0xFF	; 255
    3d1e:	3f 4f       	sbci	r19, 0xFF	; 255
	if(!CAN_msg_available()){
		return 0x01;
	}
	/*Find a MOb with a message*/
	for(i = 0;i < 16;i++){
		if(i == 15) return 0x01;
    3d20:	2f 30       	cpi	r18, 0x0F	; 15
    3d22:	31 05       	cpc	r19, r1
    3d24:	01 f7       	brne	.-64     	; 0x3ce6 <PollAndReceiveCANPacket+0x2a>
    3d26:	57 c0       	rjmp	.+174    	; 0x3dd6 <PollAndReceiveCANPacket+0x11a>
		select_mob(i);
		if(rxed_mobs[!!(i & 8)] & (1 << (i & 7))){
    3d28:	10 e0       	ldi	r17, 0x00	; 0
			break;
		}
	}
	mob = i;
	receivedPacket->dlc = CANCDMOB & 0x0F; //Length in the lower 8 bits
    3d2a:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
    3d2e:	2f 70       	andi	r18, 0x0F	; 15
    3d30:	fc 01       	movw	r30, r24
    3d32:	22 83       	std	Z+2, r18	; 0x02
	receivedPacket->id = (CANIDT2 >> 5) | ((uint16_t)CANIDT1 << 3);
    3d34:	30 91 f2 00 	lds	r19, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    3d38:	40 91 f3 00 	lds	r20, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    3d3c:	32 95       	swap	r19
    3d3e:	36 95       	lsr	r19
    3d40:	37 70       	andi	r19, 0x07	; 7
    3d42:	50 e0       	ldi	r21, 0x00	; 0
    3d44:	44 0f       	add	r20, r20
    3d46:	55 1f       	adc	r21, r21
    3d48:	44 0f       	add	r20, r20
    3d4a:	55 1f       	adc	r21, r21
    3d4c:	44 0f       	add	r20, r20
    3d4e:	55 1f       	adc	r21, r21
    3d50:	43 2b       	or	r20, r19
    3d52:	51 83       	std	Z+1, r21	; 0x01
    3d54:	40 83       	st	Z, r20
	for(i = 0;i < receivedPacket->dlc && i < 8;i++){
    3d56:	22 23       	and	r18, r18
    3d58:	91 f0       	breq	.+36     	; 0x3d7e <PollAndReceiveCANPacket+0xc2>
    3d5a:	33 96       	adiw	r30, 0x03	; 3
    3d5c:	21 50       	subi	r18, 0x01	; 1
    3d5e:	30 e0       	ldi	r19, 0x00	; 0
    3d60:	2c 5f       	subi	r18, 0xFC	; 252
    3d62:	3f 4f       	sbci	r19, 0xFF	; 255
    3d64:	28 0f       	add	r18, r24
    3d66:	39 1f       	adc	r19, r25
    3d68:	0b 96       	adiw	r24, 0x0b	; 11
		receivedPacket->data[i] = CANMSG; //Get the data from the MOb and copy it into the buffer
    3d6a:	aa ef       	ldi	r26, 0xFA	; 250
    3d6c:	b0 e0       	ldi	r27, 0x00	; 0
    3d6e:	4c 91       	ld	r20, X
    3d70:	41 93       	st	Z+, r20
		}
	}
	mob = i;
	receivedPacket->dlc = CANCDMOB & 0x0F; //Length in the lower 8 bits
	receivedPacket->id = (CANIDT2 >> 5) | ((uint16_t)CANIDT1 << 3);
	for(i = 0;i < receivedPacket->dlc && i < 8;i++){
    3d72:	e2 17       	cp	r30, r18
    3d74:	f3 07       	cpc	r31, r19
    3d76:	19 f0       	breq	.+6      	; 0x3d7e <PollAndReceiveCANPacket+0xc2>
    3d78:	8e 17       	cp	r24, r30
    3d7a:	9f 07       	cpc	r25, r31
    3d7c:	c1 f7       	brne	.-16     	; 0x3d6e <PollAndReceiveCANPacket+0xb2>
		receivedPacket->data[i] = CANMSG; //Get the data from the MOb and copy it into the buffer
	}
	//Atomically decrement the number of messages available
	cli();
    3d7e:	f8 94       	cli
	msgs_av--;
    3d80:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <msgs_av>
    3d84:	81 50       	subi	r24, 0x01	; 1
    3d86:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <msgs_av>
	sei();
    3d8a:	78 94       	sei
	/*Reset the MOb*/
	set_mob_rx_filter(mob);
    3d8c:	81 2f       	mov	r24, r17
    3d8e:	90 e0       	ldi	r25, 0x00	; 0
    3d90:	89 de       	rcall	.-750    	; 0x3aa4 <set_mob_rx_filter>
	enable_mob_interrupt(mob);
    3d92:	81 2f       	mov	r24, r17
    3d94:	fd dd       	rcall	.-1030   	; 0x3990 <enable_mob_interrupt>
	rxed_mobs[!!(mob & 8)] &= ~(1 << (mob & 7)); //Mark that the message has been taken
    3d96:	13 fb       	bst	r17, 3
    3d98:	ff 27       	eor	r31, r31
    3d9a:	f0 f9       	bld	r31, 0
    3d9c:	cf 2f       	mov	r28, r31
    3d9e:	80 e0       	ldi	r24, 0x00	; 0
    3da0:	d8 2f       	mov	r29, r24
    3da2:	cb 5c       	subi	r28, 0xCB	; 203
    3da4:	dd 4f       	sbci	r29, 0xFD	; 253
    3da6:	28 81       	ld	r18, Y
    3da8:	17 70       	andi	r17, 0x07	; 7
    3daa:	81 e0       	ldi	r24, 0x01	; 1
    3dac:	90 e0       	ldi	r25, 0x00	; 0
    3dae:	02 c0       	rjmp	.+4      	; 0x3db4 <PollAndReceiveCANPacket+0xf8>
    3db0:	88 0f       	add	r24, r24
    3db2:	99 1f       	adc	r25, r25
    3db4:	1a 95       	dec	r17
    3db6:	e2 f7       	brpl	.-8      	; 0x3db0 <PollAndReceiveCANPacket+0xf4>
    3db8:	80 95       	com	r24
    3dba:	82 23       	and	r24, r18
    3dbc:	88 83       	st	Y, r24
	CANCDMOB = (1<<CONMOB1); //Re-enable recieve
    3dbe:	80 e8       	ldi	r24, 0x80	; 128
    3dc0:	80 93 ef 00 	sts	0x00EF, r24	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7e00ef>
	return 0;
    3dc4:	80 e0       	ldi	r24, 0x00	; 0
    3dc6:	90 e0       	ldi	r25, 0x00	; 0
    3dc8:	08 c0       	rjmp	.+16     	; 0x3dda <PollAndReceiveCANPacket+0x11e>
}

int PollAndReceiveCANPacket(CANPacket *receivedPacket)
{
	if(receivedPacket == NULL){
		return 0x02;
    3dca:	82 e0       	ldi	r24, 0x02	; 2
    3dcc:	90 e0       	ldi	r25, 0x00	; 0
    3dce:	05 c0       	rjmp	.+10     	; 0x3dda <PollAndReceiveCANPacket+0x11e>
	}

	uint8_t i, mob;
	if(!CAN_msg_available()){
		return 0x01;
    3dd0:	81 e0       	ldi	r24, 0x01	; 1
    3dd2:	90 e0       	ldi	r25, 0x00	; 0
    3dd4:	02 c0       	rjmp	.+4      	; 0x3dda <PollAndReceiveCANPacket+0x11e>
	}
	/*Find a MOb with a message*/
	for(i = 0;i < 16;i++){
		if(i == 15) return 0x01;
    3dd6:	81 e0       	ldi	r24, 0x01	; 1
    3dd8:	90 e0       	ldi	r25, 0x00	; 0
	enable_mob_interrupt(mob);
	rxed_mobs[!!(mob & 8)] &= ~(1 << (mob & 7)); //Mark that the message has been taken
	CANCDMOB = (1<<CONMOB1); //Re-enable recieve
	return 0;
    
}
    3dda:	df 91       	pop	r29
    3ddc:	cf 91       	pop	r28
    3dde:	1f 91       	pop	r17
    3de0:	08 95       	ret

00003de2 <getLocalDeviceSerial>:

uint8_t getLocalDeviceSerial()
{
    /*Return the DIP switch value*/
    return devSer;
}
    3de2:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <devSer>
    3de6:	08 95       	ret

00003de8 <getLocalDeviceGroup>:
uint8_t getLocalDeviceGroup()
{
    //Definitely board specific.
    return devGrp; // example value (also used for testing)
}
    3de8:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <devGrp>
    3dec:	08 95       	ret

00003dee <write_PWM>:
  uint8_t pin: The pin to set the PWM on (PE3, PE4, PE5)
  uint16_t pwm: 10-bit PWM value
*/
//void write_PWM(uint8_t port, uint8_t pin, uint16_t pwm){
void write_PWM(uint8_t pin, uint16_t pwm){
	pwm &= 1023;
    3dee:	73 70       	andi	r23, 0x03	; 3
	switch(pin){
    3df0:	84 30       	cpi	r24, 0x04	; 4
    3df2:	71 f0       	breq	.+28     	; 0x3e10 <write_PWM+0x22>
    3df4:	85 30       	cpi	r24, 0x05	; 5
    3df6:	b1 f0       	breq	.+44     	; 0x3e24 <write_PWM+0x36>
    3df8:	83 30       	cpi	r24, 0x03	; 3
    3dfa:	e9 f4       	brne	.+58     	; 0x3e36 <write_PWM+0x48>
		case PE3:
			TCCR3A |= (1 << COM3A1);
    3dfc:	e0 e9       	ldi	r30, 0x90	; 144
    3dfe:	f0 e0       	ldi	r31, 0x00	; 0
    3e00:	80 81       	ld	r24, Z
    3e02:	80 68       	ori	r24, 0x80	; 128
    3e04:	80 83       	st	Z, r24
			OCR3A = pwm;
    3e06:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
    3e0a:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
			break;
    3e0e:	08 95       	ret
		case PE4:
			TCCR3A |= (1 << COM3B1);
    3e10:	e0 e9       	ldi	r30, 0x90	; 144
    3e12:	f0 e0       	ldi	r31, 0x00	; 0
    3e14:	80 81       	ld	r24, Z
    3e16:	80 62       	ori	r24, 0x20	; 32
    3e18:	80 83       	st	Z, r24
			OCR3B = pwm;
    3e1a:	70 93 9b 00 	sts	0x009B, r23	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
    3e1e:	60 93 9a 00 	sts	0x009A, r22	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
			break;
    3e22:	08 95       	ret
		case PE5:
			TCCR3A |= (1 << COM3C1);
    3e24:	e0 e9       	ldi	r30, 0x90	; 144
    3e26:	f0 e0       	ldi	r31, 0x00	; 0
    3e28:	80 81       	ld	r24, Z
    3e2a:	88 60       	ori	r24, 0x08	; 8
    3e2c:	80 83       	st	Z, r24
			OCR3C = pwm;
    3e2e:	70 93 9d 00 	sts	0x009D, r23	; 0x80009d <__TEXT_REGION_LENGTH__+0x7e009d>
    3e32:	60 93 9c 00 	sts	0x009C, r22	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
    3e36:	08 95       	ret

00003e38 <PCA9685_write>:
#define PCA9685_PIN    0x06

#define PCA9685_SLEEP_BIT       0x10
#define PCA9685_RESTART_BIT     0x80

void PCA9685_write(uint8_t reg, uint8_t val){
    3e38:	cf 93       	push	r28
    3e3a:	df 93       	push	r29
    3e3c:	d8 2f       	mov	r29, r24
    3e3e:	c6 2f       	mov	r28, r22
	I2C_start();
    3e40:	38 da       	rcall	.-2960   	; 0x32b2 <I2C_start>
	I2C_write(PCA9685_ADDR << 1);
    3e42:	80 e8       	ldi	r24, 0x80	; 128
    3e44:	43 da       	rcall	.-2938   	; 0x32cc <I2C_write>
	I2C_write(reg);
    3e46:	8d 2f       	mov	r24, r29
    3e48:	41 da       	rcall	.-2942   	; 0x32cc <I2C_write>
	I2C_write(val);
    3e4a:	8c 2f       	mov	r24, r28
    3e4c:	3f da       	rcall	.-2946   	; 0x32cc <I2C_write>
    3e4e:	3a da       	rcall	.-2956   	; 0x32c4 <I2C_stop>
	I2C_stop();
    3e50:	df 91       	pop	r29
    3e52:	cf 91       	pop	r28
}
    3e54:	08 95       	ret

00003e56 <PCA9685_init>:
    3e56:	60 e8       	ldi	r22, 0x80	; 128
    3e58:	80 e0       	ldi	r24, 0x00	; 0

void PCA9685_init(){
	PCA9685_write(PCA9685_MODE1_REG, PCA9685_RESTART_BIT);
    3e5a:	ee df       	rcall	.-36     	; 0x3e38 <PCA9685_write>
    3e5c:	8f e3       	ldi	r24, 0x3F	; 63
    3e5e:	9c e9       	ldi	r25, 0x9C	; 156
    3e60:	01 97       	sbiw	r24, 0x01	; 1
    3e62:	f1 f7       	brne	.-4      	; 0x3e60 <PCA9685_init+0xa>
    3e64:	00 c0       	rjmp	.+0      	; 0x3e66 <PCA9685_init+0x10>
    3e66:	00 00       	nop
	_delay_ms(10);
	PCA9685_write(PCA9685_MODE1_REG, PCA9685_SLEEP_BIT);
    3e68:	60 e1       	ldi	r22, 0x10	; 16
    3e6a:	80 e0       	ldi	r24, 0x00	; 0
    3e6c:	e5 df       	rcall	.-54     	; 0x3e38 <PCA9685_write>
    3e6e:	8f e3       	ldi	r24, 0x3F	; 63
    3e70:	9f e1       	ldi	r25, 0x1F	; 31
    3e72:	01 97       	sbiw	r24, 0x01	; 1
    3e74:	f1 f7       	brne	.-4      	; 0x3e72 <PCA9685_init+0x1c>
    3e76:	00 c0       	rjmp	.+0      	; 0x3e78 <PCA9685_init+0x22>
    3e78:	00 00       	nop
	_delay_ms(2);
	PCA9685_write(PCA9685_MODE1_REG, 0x00);
    3e7a:	60 e0       	ldi	r22, 0x00	; 0
    3e7c:	80 e0       	ldi	r24, 0x00	; 0
    3e7e:	dc df       	rcall	.-72     	; 0x3e38 <PCA9685_write>
    3e80:	8f e3       	ldi	r24, 0x3F	; 63
    3e82:	9f e1       	ldi	r25, 0x1F	; 31
    3e84:	01 97       	sbiw	r24, 0x01	; 1
    3e86:	f1 f7       	brne	.-4      	; 0x3e84 <PCA9685_init+0x2e>
    3e88:	00 c0       	rjmp	.+0      	; 0x3e8a <PCA9685_init+0x34>
    3e8a:	00 00       	nop
    3e8c:	08 95       	ret

00003e8e <PCA9685_set_freq>:
	_delay_ms(2);
}

void PCA9685_set_freq(uint16_t freq){
    3e8e:	0f 93       	push	r16
    3e90:	1f 93       	push	r17
    3e92:	cf 93       	push	r28
    3e94:	8c 01       	movw	r16, r24
	uint8_t prescale = ((25000000L / 4096) / freq) - 1;
	I2C_start();
    3e96:	0d da       	rcall	.-3046   	; 0x32b2 <I2C_start>
	I2C_write((PCA9685_ADDR << 1) | 1);
    3e98:	81 e8       	ldi	r24, 0x81	; 129
    3e9a:	18 da       	rcall	.-3024   	; 0x32cc <I2C_write>
	I2C_write(PCA9685_MODE1_REG);
    3e9c:	80 e0       	ldi	r24, 0x00	; 0
    3e9e:	16 da       	rcall	.-3028   	; 0x32cc <I2C_write>
	I2C_start();
    3ea0:	08 da       	rcall	.-3056   	; 0x32b2 <I2C_start>
	uint8_t old_mode = I2C_read(0);
    3ea2:	80 e0       	ldi	r24, 0x00	; 0
    3ea4:	1e da       	rcall	.-3012   	; 0x32e2 <I2C_read>
    3ea6:	c8 2f       	mov	r28, r24
    3ea8:	0d da       	rcall	.-3046   	; 0x32c4 <I2C_stop>
	I2C_stop();
    3eaa:	6c 2f       	mov	r22, r28
	
	PCA9685_write(PCA9685_MODE1_REG, (old_mode & 0x7F) | PCA9685_SLEEP_BIT);
    3eac:	6f 76       	andi	r22, 0x6F	; 111
    3eae:	60 61       	ori	r22, 0x10	; 16
    3eb0:	80 e0       	ldi	r24, 0x00	; 0
    3eb2:	c2 df       	rcall	.-124    	; 0x3e38 <PCA9685_write>
    3eb4:	8f e3       	ldi	r24, 0x3F	; 63
    3eb6:	9f e1       	ldi	r25, 0x1F	; 31
    3eb8:	01 97       	sbiw	r24, 0x01	; 1
    3eba:	f1 f7       	brne	.-4      	; 0x3eb8 <PCA9685_set_freq+0x2a>
    3ebc:	00 c0       	rjmp	.+0      	; 0x3ebe <PCA9685_set_freq+0x30>
    3ebe:	00 00       	nop
    3ec0:	98 01       	movw	r18, r16
    3ec2:	40 e0       	ldi	r20, 0x00	; 0
	_delay_ms(2);
	PCA9685_write(PCA9685_PRESCALE, prescale);
    3ec4:	50 e0       	ldi	r21, 0x00	; 0
    3ec6:	67 ed       	ldi	r22, 0xD7	; 215
    3ec8:	77 e1       	ldi	r23, 0x17	; 23
    3eca:	80 e0       	ldi	r24, 0x00	; 0
    3ecc:	90 e0       	ldi	r25, 0x00	; 0
    3ece:	87 d3       	rcall	.+1806   	; 0x45de <__divmodsi4>
    3ed0:	6f ef       	ldi	r22, 0xFF	; 255
    3ed2:	62 0f       	add	r22, r18
    3ed4:	8e ef       	ldi	r24, 0xFE	; 254
    3ed6:	b0 df       	rcall	.-160    	; 0x3e38 <PCA9685_write>
    3ed8:	6c 2f       	mov	r22, r28
	PCA9685_write(PCA9685_MODE1_REG, old_mode);
    3eda:	80 e0       	ldi	r24, 0x00	; 0
    3edc:	ad df       	rcall	.-166    	; 0x3e38 <PCA9685_write>
    3ede:	8f e3       	ldi	r24, 0x3F	; 63
    3ee0:	9f e1       	ldi	r25, 0x1F	; 31
    3ee2:	01 97       	sbiw	r24, 0x01	; 1
    3ee4:	f1 f7       	brne	.-4      	; 0x3ee2 <PCA9685_set_freq+0x54>
    3ee6:	00 c0       	rjmp	.+0      	; 0x3ee8 <PCA9685_set_freq+0x5a>
    3ee8:	00 00       	nop
    3eea:	6c 2f       	mov	r22, r28
	_delay_ms(2);
	PCA9685_write(PCA9685_MODE1_REG, old_mode | PCA9685_RESTART_BIT);
    3eec:	60 68       	ori	r22, 0x80	; 128
    3eee:	80 e0       	ldi	r24, 0x00	; 0
    3ef0:	a3 df       	rcall	.-186    	; 0x3e38 <PCA9685_write>
    3ef2:	8f e3       	ldi	r24, 0x3F	; 63
    3ef4:	9f e1       	ldi	r25, 0x1F	; 31
    3ef6:	01 97       	sbiw	r24, 0x01	; 1
    3ef8:	f1 f7       	brne	.-4      	; 0x3ef6 <PCA9685_set_freq+0x68>
    3efa:	00 c0       	rjmp	.+0      	; 0x3efc <PCA9685_set_freq+0x6e>
    3efc:	00 00       	nop
    3efe:	cf 91       	pop	r28
    3f00:	1f 91       	pop	r17
	_delay_ms(2);
}
    3f02:	0f 91       	pop	r16
    3f04:	08 95       	ret

00003f06 <PCA9685_set_pwm>:
    3f06:	0f 93       	push	r16
    3f08:	1f 93       	push	r17

void PCA9685_set_pwm(uint8_t pin, uint16_t pwm){
    3f0a:	cf 93       	push	r28
    3f0c:	df 93       	push	r29
    3f0e:	eb 01       	movw	r28, r22
	PCA9685_write(PCA9685_PIN + 4 * pin , (4095 - pwm) & 0xFF);
    3f10:	08 2f       	mov	r16, r24
    3f12:	00 0f       	add	r16, r16
    3f14:	00 0f       	add	r16, r16
    3f16:	60 95       	com	r22
    3f18:	86 e0       	ldi	r24, 0x06	; 6
    3f1a:	80 0f       	add	r24, r16
    3f1c:	8d df       	rcall	.-230    	; 0x3e38 <PCA9685_write>
	PCA9685_write(PCA9685_PIN + 4 * pin + 1, (4095 - pwm) >> 8);
    3f1e:	8f ef       	ldi	r24, 0xFF	; 255
    3f20:	9f e0       	ldi	r25, 0x0F	; 15
    3f22:	8c 1b       	sub	r24, r28
    3f24:	9d 0b       	sbc	r25, r29
    3f26:	69 2f       	mov	r22, r25
    3f28:	87 e0       	ldi	r24, 0x07	; 7
    3f2a:	80 0f       	add	r24, r16
    3f2c:	85 df       	rcall	.-246    	; 0x3e38 <PCA9685_write>
	PCA9685_write(PCA9685_PIN + 4 * pin + 2 , pwm & 0xFF);
    3f2e:	80 2f       	mov	r24, r16
    3f30:	6c 2f       	mov	r22, r28
    3f32:	88 5f       	subi	r24, 0xF8	; 248
    3f34:	81 df       	rcall	.-254    	; 0x3e38 <PCA9685_write>
	PCA9685_write(PCA9685_PIN + 4 * pin + 3, pwm >> 8);
    3f36:	6d 2f       	mov	r22, r29
    3f38:	89 e0       	ldi	r24, 0x09	; 9
    3f3a:	80 0f       	add	r24, r16
    3f3c:	7d df       	rcall	.-262    	; 0x3e38 <PCA9685_write>
}
    3f3e:	df 91       	pop	r29
    3f40:	cf 91       	pop	r28
    3f42:	1f 91       	pop	r17
    3f44:	0f 91       	pop	r16
    3f46:	08 95       	ret

00003f48 <init_servos>:

void init_servos(){
	PCA9685_init();
    3f48:	86 df       	rcall	.-244    	; 0x3e56 <PCA9685_init>
	PCA9685_set_freq(50);	
    3f4a:	82 e3       	ldi	r24, 0x32	; 50
    3f4c:	90 e0       	ldi	r25, 0x00	; 0
    3f4e:	9f cf       	rjmp	.-194    	; 0x3e8e <PCA9685_set_freq>
    3f50:	08 95       	ret

00003f52 <set_servo_position>:
}

void set_servo_position(int servo, int degrees){
    3f52:	9c 01       	movw	r18, r24
    3f54:	64 3b       	cpi	r22, 0xB4	; 180
    3f56:	71 05       	cpc	r23, r1
    3f58:	14 f0       	brlt	.+4      	; 0x3f5e <set_servo_position+0xc>
    3f5a:	63 eb       	ldi	r22, 0xB3	; 179
    3f5c:	70 e0       	ldi	r23, 0x00	; 0
	if(degrees > 179) degrees = 179;
	if(degrees < 1) degrees = 1;
    3f5e:	16 16       	cp	r1, r22
    3f60:	17 06       	cpc	r1, r23
    3f62:	14 f0       	brlt	.+4      	; 0x3f68 <set_servo_position+0x16>
    3f64:	61 e0       	ldi	r22, 0x01	; 1
    3f66:	70 e0       	ldi	r23, 0x00	; 0
	if(servo < 0 || servo > 2){
    3f68:	23 30       	cpi	r18, 0x03	; 3
    3f6a:	31 05       	cpc	r19, r1
    3f6c:	68 f4       	brcc	.+26     	; 0x3f88 <set_servo_position+0x36>
		return;
	}
	PCA9685_set_pwm(servo, 102 + (degrees * 99) / 172);
    3f6e:	33 e6       	ldi	r19, 0x63	; 99
    3f70:	36 9f       	mul	r19, r22
    3f72:	c0 01       	movw	r24, r0
    3f74:	37 9f       	mul	r19, r23
    3f76:	90 0d       	add	r25, r0
    3f78:	11 24       	eor	r1, r1
    3f7a:	6c ea       	ldi	r22, 0xAC	; 172
    3f7c:	70 e0       	ldi	r23, 0x00	; 0
    3f7e:	fa d2       	rcall	.+1524   	; 0x4574 <__divmodhi4>
    3f80:	6a 59       	subi	r22, 0x9A	; 154
    3f82:	7f 4f       	sbci	r23, 0xFF	; 255
    3f84:	82 2f       	mov	r24, r18
    3f86:	bf cf       	rjmp	.-130    	; 0x3f06 <PCA9685_set_pwm>
    3f88:	08 95       	ret

00003f8a <__vector_15>:

/*Returns the number of microseconds since system initialization*/
uint32_t get_uS(){
	uint16_t timer_ticks = TCNT1;
	return (TOF_Cnt * 40000) + (timer_ticks << 2);
}
    3f8a:	1f 92       	push	r1
    3f8c:	0f 92       	push	r0
    3f8e:	0f b6       	in	r0, 0x3f	; 63
    3f90:	0f 92       	push	r0
    3f92:	11 24       	eor	r1, r1
    3f94:	0b b6       	in	r0, 0x3b	; 59
    3f96:	0f 92       	push	r0
    3f98:	2f 93       	push	r18
    3f9a:	3f 93       	push	r19
    3f9c:	4f 93       	push	r20
    3f9e:	5f 93       	push	r21
    3fa0:	6f 93       	push	r22
    3fa2:	7f 93       	push	r23
    3fa4:	8f 93       	push	r24
    3fa6:	9f 93       	push	r25
    3fa8:	af 93       	push	r26
    3faa:	bf 93       	push	r27
    3fac:	ef 93       	push	r30
    3fae:	ff 93       	push	r31
    3fb0:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <TOF_Cnt>
    3fb4:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <TOF_Cnt+0x1>
    3fb8:	a0 91 3c 02 	lds	r26, 0x023C	; 0x80023c <TOF_Cnt+0x2>
    3fbc:	b0 91 3d 02 	lds	r27, 0x023D	; 0x80023d <TOF_Cnt+0x3>
    3fc0:	01 96       	adiw	r24, 0x01	; 1
    3fc2:	a1 1d       	adc	r26, r1
    3fc4:	b1 1d       	adc	r27, r1
    3fc6:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <TOF_Cnt>
    3fca:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <TOF_Cnt+0x1>
    3fce:	a0 93 3c 02 	sts	0x023C, r26	; 0x80023c <TOF_Cnt+0x2>
    3fd2:	b0 93 3d 02 	sts	0x023D, r27	; 0x80023d <TOF_Cnt+0x3>
    3fd6:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <TOF_Cnt>
    3fda:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <TOF_Cnt+0x1>
    3fde:	a0 91 3c 02 	lds	r26, 0x023C	; 0x80023c <TOF_Cnt+0x2>
    3fe2:	b0 91 3d 02 	lds	r27, 0x023D	; 0x80023d <TOF_Cnt+0x3>
    3fe6:	87 70       	andi	r24, 0x07	; 7
    3fe8:	99 27       	eor	r25, r25
    3fea:	aa 27       	eor	r26, r26
    3fec:	bb 27       	eor	r27, r27
    3fee:	89 2b       	or	r24, r25
    3ff0:	8a 2b       	or	r24, r26
    3ff2:	8b 2b       	or	r24, r27
    3ff4:	49 f4       	brne	.+18     	; 0x4008 <__vector_15+0x7e>
    3ff6:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <TOF_Cnt>
    3ffa:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <TOF_Cnt+0x1>
    3ffe:	a0 91 3c 02 	lds	r26, 0x023C	; 0x80023c <TOF_Cnt+0x2>
    4002:	b0 91 3d 02 	lds	r27, 0x023D	; 0x80023d <TOF_Cnt+0x3>
    4006:	cf d9       	rcall	.-3170   	; 0x33a6 <update_LEDS>
    4008:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <TOF_Cnt>
    400c:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <TOF_Cnt+0x1>
    4010:	a0 91 3c 02 	lds	r26, 0x023C	; 0x80023c <TOF_Cnt+0x2>
    4014:	b0 91 3d 02 	lds	r27, 0x023D	; 0x80023d <TOF_Cnt+0x3>
    4018:	80 fd       	sbrc	r24, 0
    401a:	03 c0       	rjmp	.+6      	; 0x4022 <__vector_15+0x98>
    401c:	81 e0       	ldi	r24, 0x01	; 1
    401e:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <PID_due>
    4022:	ff 91       	pop	r31
    4024:	ef 91       	pop	r30
    4026:	bf 91       	pop	r27
    4028:	af 91       	pop	r26
    402a:	9f 91       	pop	r25
    402c:	8f 91       	pop	r24
    402e:	7f 91       	pop	r23
    4030:	6f 91       	pop	r22
    4032:	5f 91       	pop	r21
    4034:	4f 91       	pop	r20
    4036:	3f 91       	pop	r19
    4038:	2f 91       	pop	r18
    403a:	0f 90       	pop	r0
    403c:	0b be       	out	0x3b, r0	; 59
    403e:	0f 90       	pop	r0
    4040:	0f be       	out	0x3f, r0	; 63
    4042:	0f 90       	pop	r0
    4044:	1f 90       	pop	r1
    4046:	18 95       	reti

00004048 <setup_timers>:
    4048:	83 e4       	ldi	r24, 0x43	; 67
    404a:	84 bd       	out	0x24, r24	; 36
    404c:	8b e1       	ldi	r24, 0x1B	; 27
    404e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    4052:	93 e0       	ldi	r25, 0x03	; 3
    4054:	90 93 80 00 	sts	0x0080, r25	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    4058:	20 e1       	ldi	r18, 0x10	; 16
    405a:	37 e2       	ldi	r19, 0x27	; 39
    405c:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    4060:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    4064:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    4068:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    406c:	81 e0       	ldi	r24, 0x01	; 1
    406e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    4072:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    4076:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <__TEXT_REGION_LENGTH__+0x7e0091>
    407a:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <TOF_Cnt>
    407e:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <TOF_Cnt+0x1>
    4082:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <TOF_Cnt+0x2>
    4086:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <TOF_Cnt+0x3>
    408a:	08 95       	ret

0000408c <get_mS>:
    408c:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <TOF_Cnt>
    4090:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <TOF_Cnt+0x1>
    4094:	a0 91 3c 02 	lds	r26, 0x023C	; 0x80023c <TOF_Cnt+0x2>
    4098:	b0 91 3d 02 	lds	r27, 0x023D	; 0x80023d <TOF_Cnt+0x3>
    409c:	20 91 85 00 	lds	r18, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    40a0:	ac 01       	movw	r20, r24
    40a2:	bd 01       	movw	r22, r26
    40a4:	44 0f       	add	r20, r20
    40a6:	55 1f       	adc	r21, r21
    40a8:	66 1f       	adc	r22, r22
    40aa:	77 1f       	adc	r23, r23
    40ac:	44 0f       	add	r20, r20
    40ae:	55 1f       	adc	r21, r21
    40b0:	66 1f       	adc	r22, r22
    40b2:	77 1f       	adc	r23, r23
    40b4:	db 01       	movw	r26, r22
    40b6:	ca 01       	movw	r24, r20
    40b8:	88 0f       	add	r24, r24
    40ba:	99 1f       	adc	r25, r25
    40bc:	aa 1f       	adc	r26, r26
    40be:	bb 1f       	adc	r27, r27
    40c0:	88 0f       	add	r24, r24
    40c2:	99 1f       	adc	r25, r25
    40c4:	aa 1f       	adc	r26, r26
    40c6:	bb 1f       	adc	r27, r27
    40c8:	84 0f       	add	r24, r20
    40ca:	95 1f       	adc	r25, r21
    40cc:	a6 1f       	adc	r26, r22
    40ce:	b7 1f       	adc	r27, r23
    40d0:	bc 01       	movw	r22, r24
    40d2:	cd 01       	movw	r24, r26
    40d4:	62 0f       	add	r22, r18
    40d6:	71 1d       	adc	r23, r1
    40d8:	81 1d       	adc	r24, r1
    40da:	91 1d       	adc	r25, r1
    40dc:	08 95       	ret

000040de <delay_mS>:

/*delay for the specified number of milliseconds*/
void delay_mS(uint16_t mS){
    40de:	8f 92       	push	r8
    40e0:	9f 92       	push	r9
    40e2:	af 92       	push	r10
    40e4:	bf 92       	push	r11
    40e6:	cf 92       	push	r12
    40e8:	df 92       	push	r13
    40ea:	ef 92       	push	r14
    40ec:	ff 92       	push	r15
    40ee:	6c 01       	movw	r12, r24
	uint32_t start = get_mS();
    40f0:	cd df       	rcall	.-102    	; 0x408c <get_mS>
    40f2:	4b 01       	movw	r8, r22
    40f4:	5c 01       	movw	r10, r24
	while(get_mS() - start < mS);
    40f6:	e1 2c       	mov	r14, r1
    40f8:	f1 2c       	mov	r15, r1
    40fa:	c8 df       	rcall	.-112    	; 0x408c <get_mS>
    40fc:	dc 01       	movw	r26, r24
    40fe:	cb 01       	movw	r24, r22
    4100:	88 19       	sub	r24, r8
    4102:	99 09       	sbc	r25, r9
    4104:	aa 09       	sbc	r26, r10
    4106:	bb 09       	sbc	r27, r11
    4108:	8c 15       	cp	r24, r12
    410a:	9d 05       	cpc	r25, r13
    410c:	ae 05       	cpc	r26, r14
    410e:	bf 05       	cpc	r27, r15
    4110:	a0 f3       	brcs	.-24     	; 0x40fa <delay_mS+0x1c>
    4112:	ff 90       	pop	r15
    4114:	ef 90       	pop	r14
    4116:	df 90       	pop	r13
    4118:	cf 90       	pop	r12
    411a:	bf 90       	pop	r11
    411c:	af 90       	pop	r10
    411e:	9f 90       	pop	r9
    4120:	8f 90       	pop	r8
    4122:	08 95       	ret

00004124 <__vector_21>:
}

/*Returns the number of bytes waiting in the USART receive buffer*/
int usart_available(){
	return rxbp;
}
    4124:	1f 92       	push	r1
    4126:	0f 92       	push	r0
    4128:	0f b6       	in	r0, 0x3f	; 63
    412a:	0f 92       	push	r0
    412c:	11 24       	eor	r1, r1
    412e:	0b b6       	in	r0, 0x3b	; 59
    4130:	0f 92       	push	r0
    4132:	8f 93       	push	r24
    4134:	ef 93       	push	r30
    4136:	ff 93       	push	r31
    4138:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <rxbp>
    413c:	81 31       	cpi	r24, 0x11	; 17
    413e:	20 f0       	brcs	.+8      	; 0x4148 <__vector_21+0x24>
    4140:	80 e1       	ldi	r24, 0x10	; 16
    4142:	80 93 4f 02 	sts	0x024F, r24	; 0x80024f <rxbp>
    4146:	0c c0       	rjmp	.+24     	; 0x4160 <__vector_21+0x3c>
    4148:	e0 91 4f 02 	lds	r30, 0x024F	; 0x80024f <rxbp>
    414c:	81 e0       	ldi	r24, 0x01	; 1
    414e:	8e 0f       	add	r24, r30
    4150:	80 93 4f 02 	sts	0x024F, r24	; 0x80024f <rxbp>
    4154:	f0 e0       	ldi	r31, 0x00	; 0
    4156:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    415a:	e0 5b       	subi	r30, 0xB0	; 176
    415c:	fd 4f       	sbci	r31, 0xFD	; 253
    415e:	80 83       	st	Z, r24
    4160:	ff 91       	pop	r31
    4162:	ef 91       	pop	r30
    4164:	8f 91       	pop	r24
    4166:	0f 90       	pop	r0
    4168:	0b be       	out	0x3b, r0	; 59
    416a:	0f 90       	pop	r0
    416c:	0f be       	out	0x3f, r0	; 63
    416e:	0f 90       	pop	r0
    4170:	1f 90       	pop	r1
    4172:	18 95       	reti

00004174 <__vector_22>:
    4174:	1f 92       	push	r1
    4176:	0f 92       	push	r0
    4178:	0f b6       	in	r0, 0x3f	; 63
    417a:	0f 92       	push	r0
    417c:	11 24       	eor	r1, r1
    417e:	0b b6       	in	r0, 0x3b	; 59
    4180:	0f 92       	push	r0
    4182:	8f 93       	push	r24
    4184:	9f 93       	push	r25
    4186:	ef 93       	push	r30
    4188:	ff 93       	push	r31
    418a:	e0 91 60 02 	lds	r30, 0x0260	; 0x800260 <txbp>
    418e:	81 e0       	ldi	r24, 0x01	; 1
    4190:	8e 0f       	add	r24, r30
    4192:	80 93 60 02 	sts	0x0260, r24	; 0x800260 <txbp>
    4196:	f0 e0       	ldi	r31, 0x00	; 0
    4198:	e2 5c       	subi	r30, 0xC2	; 194
    419a:	fd 4f       	sbci	r31, 0xFD	; 253
    419c:	80 81       	ld	r24, Z
    419e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    41a2:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <txbp>
    41a6:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <txend>
    41aa:	98 17       	cp	r25, r24
    41ac:	20 f4       	brcc	.+8      	; 0x41b6 <__vector_22+0x42>
    41ae:	80 91 60 02 	lds	r24, 0x0260	; 0x800260 <txbp>
    41b2:	81 31       	cpi	r24, 0x11	; 17
    41b4:	48 f0       	brcs	.+18     	; 0x41c8 <__vector_22+0x54>
    41b6:	e1 ec       	ldi	r30, 0xC1	; 193
    41b8:	f0 e0       	ldi	r31, 0x00	; 0
    41ba:	80 81       	ld	r24, Z
    41bc:	8f 7d       	andi	r24, 0xDF	; 223
    41be:	80 83       	st	Z, r24
    41c0:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <txend>
    41c4:	10 92 60 02 	sts	0x0260, r1	; 0x800260 <txbp>
    41c8:	ff 91       	pop	r31
    41ca:	ef 91       	pop	r30
    41cc:	9f 91       	pop	r25
    41ce:	8f 91       	pop	r24
    41d0:	0f 90       	pop	r0
    41d2:	0b be       	out	0x3b, r0	; 59
    41d4:	0f 90       	pop	r0
    41d6:	0f be       	out	0x3f, r0	; 63
    41d8:	0f 90       	pop	r0
    41da:	1f 90       	pop	r1
    41dc:	18 95       	reti

000041de <usart_write>:
    41de:	af 92       	push	r10
    41e0:	bf 92       	push	r11
    41e2:	cf 92       	push	r12
    41e4:	df 92       	push	r13
    41e6:	ef 92       	push	r14
    41e8:	ff 92       	push	r15
    41ea:	1f 93       	push	r17
    41ec:	cf 93       	push	r28
    41ee:	df 93       	push	r29
    41f0:	1f 92       	push	r1
    41f2:	cd b7       	in	r28, 0x3d	; 61
    41f4:	de b7       	in	r29, 0x3e	; 62
    41f6:	5c 01       	movw	r10, r24
    41f8:	16 2f       	mov	r17, r22
    41fa:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <txend>
    41fe:	88 23       	and	r24, r24
    4200:	29 f0       	breq	.+10     	; 0x420c <usart_write+0x2e>
    4202:	e1 ec       	ldi	r30, 0xC1	; 193
    4204:	f0 e0       	ldi	r31, 0x00	; 0
    4206:	80 81       	ld	r24, Z
    4208:	80 62       	ori	r24, 0x20	; 32
    420a:	80 83       	st	Z, r24
    420c:	11 23       	and	r17, r17
    420e:	99 f1       	breq	.+102    	; 0x4276 <usart_write+0x98>
    4210:	68 94       	set
    4212:	cc 24       	eor	r12, r12
    4214:	c4 f8       	bld	r12, 4
    4216:	d1 2c       	mov	r13, r1
    4218:	0f 2e       	mov	r0, r31
    421a:	f1 ec       	ldi	r31, 0xC1	; 193
    421c:	ef 2e       	mov	r14, r31
    421e:	f1 2c       	mov	r15, r1
    4220:	f0 2d       	mov	r31, r0
    4222:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <txend>
    4226:	8f 30       	cpi	r24, 0x0F	; 15
    4228:	e0 f7       	brcc	.-8      	; 0x4222 <usart_write+0x44>
    422a:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <txend>
    422e:	21 2f       	mov	r18, r17
    4230:	30 e0       	ldi	r19, 0x00	; 0
    4232:	40 e0       	ldi	r20, 0x00	; 0
    4234:	50 e0       	ldi	r21, 0x00	; 0
    4236:	b6 01       	movw	r22, r12
    4238:	68 1b       	sub	r22, r24
    423a:	71 09       	sbc	r23, r1
    423c:	07 2e       	mov	r0, r23
    423e:	00 0c       	add	r0, r0
    4240:	88 0b       	sbc	r24, r24
    4242:	99 0b       	sbc	r25, r25
    4244:	58 d1       	rcall	.+688    	; 0x44f6 <min>
    4246:	69 83       	std	Y+1, r22	; 0x01
    4248:	49 81       	ldd	r20, Y+1	; 0x01
    424a:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <txend>
    424e:	90 e0       	ldi	r25, 0x00	; 0
    4250:	50 e0       	ldi	r21, 0x00	; 0
    4252:	b5 01       	movw	r22, r10
    4254:	82 5c       	subi	r24, 0xC2	; 194
    4256:	9d 4f       	sbci	r25, 0xFD	; 253
    4258:	60 d2       	rcall	.+1216   	; 0x471a <memcpy>
    425a:	99 81       	ldd	r25, Y+1	; 0x01
    425c:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <txend>
    4260:	89 0f       	add	r24, r25
    4262:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <txend>
    4266:	89 81       	ldd	r24, Y+1	; 0x01
    4268:	18 1b       	sub	r17, r24
    426a:	f7 01       	movw	r30, r14
    426c:	80 81       	ld	r24, Z
    426e:	80 62       	ori	r24, 0x20	; 32
    4270:	80 83       	st	Z, r24
    4272:	11 11       	cpse	r17, r1
    4274:	d6 cf       	rjmp	.-84     	; 0x4222 <usart_write+0x44>
    4276:	0f 90       	pop	r0
    4278:	df 91       	pop	r29
    427a:	cf 91       	pop	r28
    427c:	1f 91       	pop	r17
    427e:	ff 90       	pop	r15
    4280:	ef 90       	pop	r14
    4282:	df 90       	pop	r13
    4284:	cf 90       	pop	r12
    4286:	bf 90       	pop	r11
    4288:	af 90       	pop	r10
    428a:	08 95       	ret

0000428c <usart_init>:
    428c:	9b 01       	movw	r18, r22
    428e:	ac 01       	movw	r20, r24
    4290:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <rxbp>
    4294:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <txend>
    4298:	10 92 60 02 	sts	0x0260, r1	; 0x800260 <txbp>
    429c:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    42a0:	60 e4       	ldi	r22, 0x40	; 64
    42a2:	72 e4       	ldi	r23, 0x42	; 66
    42a4:	8f e0       	ldi	r24, 0x0F	; 15
    42a6:	90 e0       	ldi	r25, 0x00	; 0
    42a8:	78 d1       	rcall	.+752    	; 0x459a <__udivmodsi4>
    42aa:	21 50       	subi	r18, 0x01	; 1
    42ac:	31 09       	sbc	r19, r1
    42ae:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    42b2:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
    42b6:	86 e0       	ldi	r24, 0x06	; 6
    42b8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    42bc:	88 e9       	ldi	r24, 0x98	; 152
    42be:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    42c2:	08 95       	ret

000042c4 <usart_write_char>:
    42c4:	cf 93       	push	r28
    42c6:	df 93       	push	r29
    42c8:	1f 92       	push	r1
    42ca:	cd b7       	in	r28, 0x3d	; 61
    42cc:	de b7       	in	r29, 0x3e	; 62
    42ce:	89 83       	std	Y+1, r24	; 0x01
    42d0:	8a 30       	cpi	r24, 0x0A	; 10
    42d2:	11 f4       	brne	.+4      	; 0x42d8 <usart_write_char+0x14>
    42d4:	8d e0       	ldi	r24, 0x0D	; 13
    42d6:	f6 df       	rcall	.-20     	; 0x42c4 <usart_write_char>
    42d8:	61 e0       	ldi	r22, 0x01	; 1
    42da:	ce 01       	movw	r24, r28
    42dc:	01 96       	adiw	r24, 0x01	; 1
    42de:	7f df       	rcall	.-258    	; 0x41de <usart_write>
    42e0:	0f 90       	pop	r0
    42e2:	df 91       	pop	r29
    42e4:	cf 91       	pop	r28
    42e6:	08 95       	ret

000042e8 <usart_write_string>:
    42e8:	fc 01       	movw	r30, r24
    42ea:	01 90       	ld	r0, Z+
    42ec:	00 20       	and	r0, r0
    42ee:	e9 f7       	brne	.-6      	; 0x42ea <usart_write_string+0x2>
    42f0:	31 97       	sbiw	r30, 0x01	; 1
    42f2:	bf 01       	movw	r22, r30
    42f4:	68 1b       	sub	r22, r24
    42f6:	79 0b       	sbc	r23, r25
    42f8:	72 cf       	rjmp	.-284    	; 0x41de <usart_write>
    42fa:	08 95       	ret

000042fc <tprintf>:

/*Tiny implementation of prinf()*/
void tprintf(const char *fmt, ...){
    42fc:	2f 92       	push	r2
    42fe:	3f 92       	push	r3
    4300:	4f 92       	push	r4
    4302:	5f 92       	push	r5
    4304:	6f 92       	push	r6
    4306:	7f 92       	push	r7
    4308:	8f 92       	push	r8
    430a:	9f 92       	push	r9
    430c:	af 92       	push	r10
    430e:	bf 92       	push	r11
    4310:	cf 92       	push	r12
    4312:	df 92       	push	r13
    4314:	ef 92       	push	r14
    4316:	ff 92       	push	r15
    4318:	0f 93       	push	r16
    431a:	1f 93       	push	r17
    431c:	cf 93       	push	r28
    431e:	df 93       	push	r29
    4320:	cd b7       	in	r28, 0x3d	; 61
    4322:	de b7       	in	r29, 0x3e	; 62
    4324:	2b 97       	sbiw	r28, 0x0b	; 11
    4326:	0f b6       	in	r0, 0x3f	; 63
    4328:	f8 94       	cli
    432a:	de bf       	out	0x3e, r29	; 62
    432c:	0f be       	out	0x3f, r0	; 63
    432e:	cd bf       	out	0x3d, r28	; 61
    4330:	fe 01       	movw	r30, r28
    4332:	b0 96       	adiw	r30, 0x20	; 32
    4334:	e1 90       	ld	r14, Z+
    4336:	f1 90       	ld	r15, Z+
	va_list va;
	va_start(va, fmt);
    4338:	6f 01       	movw	r12, r30
	int i = 0;
	int32_t l;
	char buf[9],c;
	for(i = 0;c=fmt[i];i++){
    433a:	f7 01       	movw	r30, r14
    433c:	b0 80       	ld	r11, Z
    433e:	bb 20       	and	r11, r11
    4340:	09 f4       	brne	.+2      	; 0x4344 <tprintf+0x48>
    4342:	c0 c0       	rjmp	.+384    	; 0x44c4 <tprintf+0x1c8>
    4344:	00 e0       	ldi	r16, 0x00	; 0
    4346:	10 e0       	ldi	r17, 0x00	; 0
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    4348:	0f 2e       	mov	r0, r31
    434a:	f0 e1       	ldi	r31, 0x10	; 16
    434c:	4f 2e       	mov	r4, r31
    434e:	f7 e2       	ldi	r31, 0x27	; 39
    4350:	5f 2e       	mov	r5, r31
    4352:	61 2c       	mov	r6, r1
    4354:	71 2c       	mov	r7, r1
    4356:	f0 2d       	mov	r31, r0
		if(c != '%'){
    4358:	f5 e2       	ldi	r31, 0x25	; 37
    435a:	bf 16       	cp	r11, r31
    435c:	b9 f0       	breq	.+46     	; 0x438c <tprintf+0x90>
			usart_write_char(c);
    435e:	8b 2d       	mov	r24, r11
    4360:	b1 df       	rcall	.-158    	; 0x42c4 <usart_write_char>
		}
	if(c == '\\'){
    4362:	2c e5       	ldi	r18, 0x5C	; 92
    4364:	b2 12       	cpse	r11, r18
    4366:	a6 c0       	rjmp	.+332    	; 0x44b4 <tprintf+0x1b8>
		c = fmt[++i];
    4368:	0f 5f       	subi	r16, 0xFF	; 255
    436a:	1f 4f       	sbci	r17, 0xFF	; 255
    436c:	f7 01       	movw	r30, r14
    436e:	e0 0f       	add	r30, r16
    4370:	f1 1f       	adc	r31, r17
    4372:	80 81       	ld	r24, Z
		switch(c){
    4374:	8a 30       	cpi	r24, 0x0A	; 10
    4376:	21 f0       	breq	.+8      	; 0x4380 <tprintf+0x84>
    4378:	8c 35       	cpi	r24, 0x5C	; 92
			case '\\':
				usart_write_char('\\');
    437a:	29 f4       	brne	.+10     	; 0x4386 <tprintf+0x8a>
    437c:	a3 df       	rcall	.-186    	; 0x42c4 <usart_write_char>
				break;
			case '\n':
				usart_write_char('\n');
    437e:	9a c0       	rjmp	.+308    	; 0x44b4 <tprintf+0x1b8>
    4380:	8a e0       	ldi	r24, 0x0A	; 10
    4382:	a0 df       	rcall	.-192    	; 0x42c4 <usart_write_char>
				break;
    4384:	97 c0       	rjmp	.+302    	; 0x44b4 <tprintf+0x1b8>
		}
	}
	if(c == '%'){
    4386:	85 32       	cpi	r24, 0x25	; 37
    4388:	09 f0       	breq	.+2      	; 0x438c <tprintf+0x90>
    438a:	94 c0       	rjmp	.+296    	; 0x44b4 <tprintf+0x1b8>
		c=fmt[++i];
    438c:	0f 5f       	subi	r16, 0xFF	; 255
    438e:	1f 4f       	sbci	r17, 0xFF	; 255
    4390:	f7 01       	movw	r30, r14
    4392:	e0 0f       	add	r30, r16
    4394:	f1 1f       	adc	r31, r17
		switch(c){
    4396:	80 81       	ld	r24, Z
    4398:	84 36       	cpi	r24, 0x64	; 100
    439a:	09 f4       	brne	.+2      	; 0x439e <tprintf+0xa2>
    439c:	6b c0       	rjmp	.+214    	; 0x4474 <tprintf+0x178>
    439e:	38 f4       	brcc	.+14     	; 0x43ae <tprintf+0xb2>
    43a0:	88 35       	cpi	r24, 0x58	; 88
    43a2:	09 f4       	brne	.+2      	; 0x43a6 <tprintf+0xaa>
    43a4:	56 c0       	rjmp	.+172    	; 0x4452 <tprintf+0x156>
    43a6:	83 36       	cpi	r24, 0x63	; 99
    43a8:	09 f4       	brne	.+2      	; 0x43ac <tprintf+0xb0>
    43aa:	7b c0       	rjmp	.+246    	; 0x44a2 <tprintf+0x1a6>
    43ac:	81 c0       	rjmp	.+258    	; 0x44b0 <tprintf+0x1b4>
    43ae:	8c 36       	cpi	r24, 0x6C	; 108
    43b0:	21 f0       	breq	.+8      	; 0x43ba <tprintf+0xbe>
    43b2:	83 37       	cpi	r24, 0x73	; 115
    43b4:	09 f4       	brne	.+2      	; 0x43b8 <tprintf+0xbc>
    43b6:	6d c0       	rjmp	.+218    	; 0x4492 <tprintf+0x196>
    43b8:	7b c0       	rjmp	.+246    	; 0x44b0 <tprintf+0x1b4>
			case 'l':
				l = va_arg(va, int32_t);
    43ba:	c6 01       	movw	r24, r12
    43bc:	04 96       	adiw	r24, 0x04	; 4
    43be:	9b 87       	std	Y+11, r25	; 0x0b
    43c0:	8a 87       	std	Y+10, r24	; 0x0a
    43c2:	f6 01       	movw	r30, r12
    43c4:	80 80       	ld	r8, Z
    43c6:	91 80       	ldd	r9, Z+1	; 0x01
    43c8:	a2 80       	ldd	r10, Z+2	; 0x02
    43ca:	b3 80       	ldd	r11, Z+3	; 0x03
				if(l > 32767){
    43cc:	81 14       	cp	r8, r1
    43ce:	f0 e8       	ldi	r31, 0x80	; 128
    43d0:	9f 06       	cpc	r9, r31
    43d2:	a1 04       	cpc	r10, r1
    43d4:	b1 04       	cpc	r11, r1
    43d6:	8c f1       	brlt	.+98     	; 0x443a <tprintf+0x13e>
    43d8:	c5 01       	movw	r24, r10
    43da:	b4 01       	movw	r22, r8
    43dc:	a3 01       	movw	r20, r6
    43de:	92 01       	movw	r18, r4
    43e0:	fe d0       	rcall	.+508    	; 0x45de <__divmodsi4>
    43e2:	49 01       	movw	r8, r18
    43e4:	5a 01       	movw	r10, r20
    43e6:	c6 2e       	mov	r12, r22
    43e8:	d7 2e       	mov	r13, r23
    43ea:	28 2e       	mov	r2, r24
    43ec:	39 2e       	mov	r3, r25
    43ee:	4a e0       	ldi	r20, 0x0A	; 10
    43f0:	be 01       	movw	r22, r28
    43f2:	6f 5f       	subi	r22, 0xFF	; 255
    43f4:	7f 4f       	sbci	r23, 0xFF	; 255
    43f6:	c4 01       	movw	r24, r8
					itoa(l/10000, buf, 10);
					usart_write_string(buf);
    43f8:	99 d1       	rcall	.+818    	; 0x472c <__itoa_ncheck>
    43fa:	ce 01       	movw	r24, r28
    43fc:	01 96       	adiw	r24, 0x01	; 1
    43fe:	74 df       	rcall	.-280    	; 0x42e8 <usart_write_string>
					l %= 10000;
    4400:	8c 2c       	mov	r8, r12
    4402:	9d 2c       	mov	r9, r13
    4404:	a2 2c       	mov	r10, r2
    4406:	b3 2c       	mov	r11, r3
					if(l < 1000){
    4408:	28 ee       	ldi	r18, 0xE8	; 232
    440a:	82 16       	cp	r8, r18
    440c:	23 e0       	ldi	r18, 0x03	; 3
    440e:	92 06       	cpc	r9, r18
    4410:	a1 04       	cpc	r10, r1
    4412:	b1 04       	cpc	r11, r1
						usart_write_char('0');
    4414:	14 f4       	brge	.+4      	; 0x441a <tprintf+0x11e>
    4416:	80 e3       	ldi	r24, 0x30	; 48
    4418:	55 df       	rcall	.-342    	; 0x42c4 <usart_write_char>
					}
					if(l < 100){
    441a:	84 e6       	ldi	r24, 0x64	; 100
    441c:	88 16       	cp	r8, r24
    441e:	91 04       	cpc	r9, r1
    4420:	a1 04       	cpc	r10, r1
    4422:	b1 04       	cpc	r11, r1
						usart_write_char('0');
    4424:	14 f4       	brge	.+4      	; 0x442a <tprintf+0x12e>
    4426:	80 e3       	ldi	r24, 0x30	; 48
					}
					if(l < 10){
    4428:	4d df       	rcall	.-358    	; 0x42c4 <usart_write_char>
    442a:	9a e0       	ldi	r25, 0x0A	; 10
    442c:	89 16       	cp	r8, r25
    442e:	91 04       	cpc	r9, r1
    4430:	a1 04       	cpc	r10, r1
						usart_write_char('0');
    4432:	b1 04       	cpc	r11, r1
    4434:	14 f4       	brge	.+4      	; 0x443a <tprintf+0x13e>
    4436:	80 e3       	ldi	r24, 0x30	; 48
    4438:	45 df       	rcall	.-374    	; 0x42c4 <usart_write_char>
    443a:	4a e0       	ldi	r20, 0x0A	; 10
    443c:	be 01       	movw	r22, r28
    443e:	6f 5f       	subi	r22, 0xFF	; 255
    4440:	7f 4f       	sbci	r23, 0xFF	; 255
    4442:	c4 01       	movw	r24, r8
					}
				}
				itoa(l, buf, 10);
				usart_write_string(buf);
    4444:	73 d1       	rcall	.+742    	; 0x472c <__itoa_ncheck>
    4446:	ce 01       	movw	r24, r28
    4448:	01 96       	adiw	r24, 0x01	; 1
    444a:	4e df       	rcall	.-356    	; 0x42e8 <usart_write_string>
	}
	if(c == '%'){
		c=fmt[++i];
		switch(c){
			case 'l':
				l = va_arg(va, int32_t);
    444c:	ca 84       	ldd	r12, Y+10	; 0x0a
    444e:	db 84       	ldd	r13, Y+11	; 0x0b
						usart_write_char('0');
					}
				}
				itoa(l, buf, 10);
				usart_write_string(buf);
				break;
    4450:	31 c0       	rjmp	.+98     	; 0x44b4 <tprintf+0x1b8>
			case 'X':
				itoa(va_arg(va, int32_t), buf, 16);
    4452:	56 01       	movw	r10, r12
    4454:	e4 e0       	ldi	r30, 0x04	; 4
    4456:	ae 0e       	add	r10, r30
    4458:	b1 1c       	adc	r11, r1
    445a:	40 e1       	ldi	r20, 0x10	; 16
    445c:	be 01       	movw	r22, r28
    445e:	6f 5f       	subi	r22, 0xFF	; 255
    4460:	7f 4f       	sbci	r23, 0xFF	; 255
    4462:	f6 01       	movw	r30, r12
    4464:	80 81       	ld	r24, Z
    4466:	91 81       	ldd	r25, Z+1	; 0x01
    4468:	61 d1       	rcall	.+706    	; 0x472c <__itoa_ncheck>
				usart_write_string(buf);
    446a:	ce 01       	movw	r24, r28
    446c:	01 96       	adiw	r24, 0x01	; 1
    446e:	3c df       	rcall	.-392    	; 0x42e8 <usart_write_string>
				}
				itoa(l, buf, 10);
				usart_write_string(buf);
				break;
			case 'X':
				itoa(va_arg(va, int32_t), buf, 16);
    4470:	65 01       	movw	r12, r10
				usart_write_string(buf);
				break;
    4472:	20 c0       	rjmp	.+64     	; 0x44b4 <tprintf+0x1b8>
    4474:	f6 01       	movw	r30, r12
    4476:	4a e0       	ldi	r20, 0x0A	; 10
    4478:	be 01       	movw	r22, r28
    447a:	6f 5f       	subi	r22, 0xFF	; 255
    447c:	7f 4f       	sbci	r23, 0xFF	; 255
    447e:	80 81       	ld	r24, Z
    4480:	91 81       	ldd	r25, Z+1	; 0x01
    4482:	f2 e0       	ldi	r31, 0x02	; 2
    4484:	cf 0e       	add	r12, r31
    4486:	d1 1c       	adc	r13, r1
			case 'd':
				itoa(va_arg(va, int), buf, 10);
				usart_write_string(buf);
    4488:	51 d1       	rcall	.+674    	; 0x472c <__itoa_ncheck>
    448a:	ce 01       	movw	r24, r28
    448c:	01 96       	adiw	r24, 0x01	; 1
				break;
    448e:	2c df       	rcall	.-424    	; 0x42e8 <usart_write_string>
			case 's':
				usart_write_string(va_arg(va, char*));
    4490:	11 c0       	rjmp	.+34     	; 0x44b4 <tprintf+0x1b8>
    4492:	f6 01       	movw	r30, r12
    4494:	80 81       	ld	r24, Z
    4496:	91 81       	ldd	r25, Z+1	; 0x01
    4498:	22 e0       	ldi	r18, 0x02	; 2
    449a:	c2 0e       	add	r12, r18
    449c:	d1 1c       	adc	r13, r1
				break;
    449e:	24 df       	rcall	.-440    	; 0x42e8 <usart_write_string>
			case 'c':
				usart_write_char(va_arg(va, int));
    44a0:	09 c0       	rjmp	.+18     	; 0x44b4 <tprintf+0x1b8>
    44a2:	f6 01       	movw	r30, r12
    44a4:	80 81       	ld	r24, Z
    44a6:	92 e0       	ldi	r25, 0x02	; 2
    44a8:	c9 0e       	add	r12, r25
    44aa:	d1 1c       	adc	r13, r1
    44ac:	0b df       	rcall	.-490    	; 0x42c4 <usart_write_char>
				break;
    44ae:	02 c0       	rjmp	.+4      	; 0x44b4 <tprintf+0x1b8>
			default:
				usart_write_char('?');
    44b0:	8f e3       	ldi	r24, 0x3F	; 63
    44b2:	08 df       	rcall	.-496    	; 0x42c4 <usart_write_char>
    44b4:	0f 5f       	subi	r16, 0xFF	; 255
	va_list va;
	va_start(va, fmt);
	int i = 0;
	int32_t l;
	char buf[9],c;
	for(i = 0;c=fmt[i];i++){
    44b6:	1f 4f       	sbci	r17, 0xFF	; 255
    44b8:	f7 01       	movw	r30, r14
    44ba:	e0 0f       	add	r30, r16
    44bc:	f1 1f       	adc	r31, r17
    44be:	b0 80       	ld	r11, Z
    44c0:	b1 10       	cpse	r11, r1
    44c2:	4a cf       	rjmp	.-364    	; 0x4358 <tprintf+0x5c>
    44c4:	2b 96       	adiw	r28, 0x0b	; 11
				usart_write_char('?');
				break;
			}
		}
	}
    44c6:	0f b6       	in	r0, 0x3f	; 63
    44c8:	f8 94       	cli
    44ca:	de bf       	out	0x3e, r29	; 62
    44cc:	0f be       	out	0x3f, r0	; 63
    44ce:	cd bf       	out	0x3d, r28	; 61
    44d0:	df 91       	pop	r29
    44d2:	cf 91       	pop	r28
    44d4:	1f 91       	pop	r17
    44d6:	0f 91       	pop	r16
    44d8:	ff 90       	pop	r15
    44da:	ef 90       	pop	r14
    44dc:	df 90       	pop	r13
    44de:	cf 90       	pop	r12
    44e0:	bf 90       	pop	r11
    44e2:	af 90       	pop	r10
    44e4:	9f 90       	pop	r9
    44e6:	8f 90       	pop	r8
    44e8:	7f 90       	pop	r7
    44ea:	6f 90       	pop	r6
    44ec:	5f 90       	pop	r5
    44ee:	4f 90       	pop	r4
    44f0:	3f 90       	pop	r3
    44f2:	2f 90       	pop	r2
    44f4:	08 95       	ret

000044f6 <min>:
#include "config.h"
#include "usart.h"
#include "util.h"

int32_t min(int32_t a, int32_t b){
	return (a < b)? a:b;
    44f6:	62 17       	cp	r22, r18
    44f8:	73 07       	cpc	r23, r19
    44fa:	84 07       	cpc	r24, r20
    44fc:	95 07       	cpc	r25, r21
    44fe:	14 f4       	brge	.+4      	; 0x4504 <min+0xe>
    4500:	9b 01       	movw	r18, r22
    4502:	ac 01       	movw	r20, r24
}
    4504:	ca 01       	movw	r24, r20
    4506:	b9 01       	movw	r22, r18
    4508:	08 95       	ret

0000450a <VEML6070_read_byte>:
#define VEML6070_ADDR_ARA 0x18
#define VEML6070_ADDR_CMD 0x70
#define VEML6070_ADDR_DATA_LSB 0x71
#define VEML6070_ADDR_DATA_MSB 0x73

uint8_t VEML6070_read_byte(uint8_t addr){
    450a:	cf 93       	push	r28
    450c:	c8 2f       	mov	r28, r24
	I2C_start();
    450e:	0e 94 59 19 	call	0x32b2	; 0x32b2 <I2C_start>
	I2C_write(addr);
    4512:	8c 2f       	mov	r24, r28
    4514:	0e 94 66 19 	call	0x32cc	; 0x32cc <I2C_write>
	uint8_t val = I2C_read(1);
    4518:	81 e0       	ldi	r24, 0x01	; 1
    451a:	0e 94 71 19 	call	0x32e2	; 0x32e2 <I2C_read>
    451e:	c8 2f       	mov	r28, r24
	I2C_stop();
    4520:	0e 94 62 19 	call	0x32c4	; 0x32c4 <I2C_stop>
	return val;
}
    4524:	8c 2f       	mov	r24, r28
    4526:	cf 91       	pop	r28
    4528:	08 95       	ret

0000452a <VEML6070_write_byte>:

void VEML6070_write_byte(uint8_t addr, uint8_t val){
    452a:	cf 93       	push	r28
    452c:	df 93       	push	r29
    452e:	d8 2f       	mov	r29, r24
    4530:	c6 2f       	mov	r28, r22
	I2C_start();
    4532:	0e 94 59 19 	call	0x32b2	; 0x32b2 <I2C_start>
	I2C_write(addr);
    4536:	8d 2f       	mov	r24, r29
    4538:	0e 94 66 19 	call	0x32cc	; 0x32cc <I2C_write>
	I2C_write(val);
    453c:	8c 2f       	mov	r24, r28
    453e:	0e 94 66 19 	call	0x32cc	; 0x32cc <I2C_write>
	I2C_stop();
    4542:	0e 94 62 19 	call	0x32c4	; 0x32c4 <I2C_stop>
}
    4546:	df 91       	pop	r29
    4548:	cf 91       	pop	r28
    454a:	08 95       	ret

0000454c <VEML6070_init>:

void VEML6070_init(){
	wdt_reset();
    454c:	a8 95       	wdr
	VEML6070_read_byte(VEML6070_ADDR_ARA);
    454e:	88 e1       	ldi	r24, 0x18	; 24
    4550:	dc df       	rcall	.-72     	; 0x450a <VEML6070_read_byte>
	VEML6070_write_byte(VEML6070_ADDR_CMD, 0x04); //Integration time = 1
    4552:	64 e0       	ldi	r22, 0x04	; 4
    4554:	80 e7       	ldi	r24, 0x70	; 112
    4556:	e9 cf       	rjmp	.-46     	; 0x452a <VEML6070_write_byte>
    4558:	08 95       	ret

0000455a <read_uv_sensor>:
}

uint16_t read_uv_sensor(){
    455a:	cf 93       	push	r28
	uint8_t lsb = VEML6070_read_byte(VEML6070_ADDR_DATA_LSB);
    455c:	81 e7       	ldi	r24, 0x71	; 113
    455e:	d5 df       	rcall	.-86     	; 0x450a <VEML6070_read_byte>
    4560:	c8 2f       	mov	r28, r24
	uint8_t msb = VEML6070_read_byte(VEML6070_ADDR_DATA_MSB);
    4562:	83 e7       	ldi	r24, 0x73	; 115
    4564:	d2 df       	rcall	.-92     	; 0x450a <VEML6070_read_byte>
	return (msb << 8) | lsb;
    4566:	2c 2f       	mov	r18, r28
    4568:	30 e0       	ldi	r19, 0x00	; 0
    456a:	a9 01       	movw	r20, r18
    456c:	58 2b       	or	r21, r24
    456e:	ca 01       	movw	r24, r20
    4570:	cf 91       	pop	r28
    4572:	08 95       	ret

00004574 <__divmodhi4>:
    4574:	97 fb       	bst	r25, 7
    4576:	07 2e       	mov	r0, r23
    4578:	16 f4       	brtc	.+4      	; 0x457e <__divmodhi4+0xa>
    457a:	00 94       	com	r0
    457c:	06 d0       	rcall	.+12     	; 0x458a <__divmodhi4_neg1>
    457e:	77 fd       	sbrc	r23, 7
    4580:	08 d0       	rcall	.+16     	; 0x4592 <__divmodhi4_neg2>
    4582:	62 d0       	rcall	.+196    	; 0x4648 <__udivmodhi4>
    4584:	07 fc       	sbrc	r0, 7
    4586:	05 d0       	rcall	.+10     	; 0x4592 <__divmodhi4_neg2>
    4588:	3e f4       	brtc	.+14     	; 0x4598 <__divmodhi4_exit>

0000458a <__divmodhi4_neg1>:
    458a:	90 95       	com	r25
    458c:	81 95       	neg	r24
    458e:	9f 4f       	sbci	r25, 0xFF	; 255
    4590:	08 95       	ret

00004592 <__divmodhi4_neg2>:
    4592:	70 95       	com	r23
    4594:	61 95       	neg	r22
    4596:	7f 4f       	sbci	r23, 0xFF	; 255

00004598 <__divmodhi4_exit>:
    4598:	08 95       	ret

0000459a <__udivmodsi4>:
    459a:	a1 e2       	ldi	r26, 0x21	; 33
    459c:	1a 2e       	mov	r1, r26
    459e:	aa 1b       	sub	r26, r26
    45a0:	bb 1b       	sub	r27, r27
    45a2:	fd 01       	movw	r30, r26
    45a4:	0d c0       	rjmp	.+26     	; 0x45c0 <__udivmodsi4_ep>

000045a6 <__udivmodsi4_loop>:
    45a6:	aa 1f       	adc	r26, r26
    45a8:	bb 1f       	adc	r27, r27
    45aa:	ee 1f       	adc	r30, r30
    45ac:	ff 1f       	adc	r31, r31
    45ae:	a2 17       	cp	r26, r18
    45b0:	b3 07       	cpc	r27, r19
    45b2:	e4 07       	cpc	r30, r20
    45b4:	f5 07       	cpc	r31, r21
    45b6:	20 f0       	brcs	.+8      	; 0x45c0 <__udivmodsi4_ep>
    45b8:	a2 1b       	sub	r26, r18
    45ba:	b3 0b       	sbc	r27, r19
    45bc:	e4 0b       	sbc	r30, r20
    45be:	f5 0b       	sbc	r31, r21

000045c0 <__udivmodsi4_ep>:
    45c0:	66 1f       	adc	r22, r22
    45c2:	77 1f       	adc	r23, r23
    45c4:	88 1f       	adc	r24, r24
    45c6:	99 1f       	adc	r25, r25
    45c8:	1a 94       	dec	r1
    45ca:	69 f7       	brne	.-38     	; 0x45a6 <__udivmodsi4_loop>
    45cc:	60 95       	com	r22
    45ce:	70 95       	com	r23
    45d0:	80 95       	com	r24
    45d2:	90 95       	com	r25
    45d4:	9b 01       	movw	r18, r22
    45d6:	ac 01       	movw	r20, r24
    45d8:	bd 01       	movw	r22, r26
    45da:	cf 01       	movw	r24, r30
    45dc:	08 95       	ret

000045de <__divmodsi4>:
    45de:	05 2e       	mov	r0, r21
    45e0:	97 fb       	bst	r25, 7
    45e2:	16 f4       	brtc	.+4      	; 0x45e8 <__divmodsi4+0xa>
    45e4:	00 94       	com	r0
    45e6:	0f d0       	rcall	.+30     	; 0x4606 <__negsi2>
    45e8:	57 fd       	sbrc	r21, 7
    45ea:	05 d0       	rcall	.+10     	; 0x45f6 <__divmodsi4_neg2>
    45ec:	d6 df       	rcall	.-84     	; 0x459a <__udivmodsi4>
    45ee:	07 fc       	sbrc	r0, 7
    45f0:	02 d0       	rcall	.+4      	; 0x45f6 <__divmodsi4_neg2>
    45f2:	46 f4       	brtc	.+16     	; 0x4604 <__divmodsi4_exit>
    45f4:	08 c0       	rjmp	.+16     	; 0x4606 <__negsi2>

000045f6 <__divmodsi4_neg2>:
    45f6:	50 95       	com	r21
    45f8:	40 95       	com	r20
    45fa:	30 95       	com	r19
    45fc:	21 95       	neg	r18
    45fe:	3f 4f       	sbci	r19, 0xFF	; 255
    4600:	4f 4f       	sbci	r20, 0xFF	; 255
    4602:	5f 4f       	sbci	r21, 0xFF	; 255

00004604 <__divmodsi4_exit>:
    4604:	08 95       	ret

00004606 <__negsi2>:
    4606:	90 95       	com	r25
    4608:	80 95       	com	r24
    460a:	70 95       	com	r23
    460c:	61 95       	neg	r22
    460e:	7f 4f       	sbci	r23, 0xFF	; 255
    4610:	8f 4f       	sbci	r24, 0xFF	; 255
    4612:	9f 4f       	sbci	r25, 0xFF	; 255
    4614:	08 95       	ret

00004616 <__umulhisi3>:
    4616:	a2 9f       	mul	r26, r18
    4618:	b0 01       	movw	r22, r0
    461a:	b3 9f       	mul	r27, r19
    461c:	c0 01       	movw	r24, r0
    461e:	a3 9f       	mul	r26, r19
    4620:	70 0d       	add	r23, r0
    4622:	81 1d       	adc	r24, r1
    4624:	11 24       	eor	r1, r1
    4626:	91 1d       	adc	r25, r1
    4628:	b2 9f       	mul	r27, r18
    462a:	70 0d       	add	r23, r0
    462c:	81 1d       	adc	r24, r1
    462e:	11 24       	eor	r1, r1
    4630:	91 1d       	adc	r25, r1
    4632:	08 95       	ret

00004634 <__muluhisi3>:
    4634:	f0 df       	rcall	.-32     	; 0x4616 <__umulhisi3>
    4636:	a5 9f       	mul	r26, r21
    4638:	90 0d       	add	r25, r0
    463a:	b4 9f       	mul	r27, r20
    463c:	90 0d       	add	r25, r0
    463e:	a4 9f       	mul	r26, r20
    4640:	80 0d       	add	r24, r0
    4642:	91 1d       	adc	r25, r1
    4644:	11 24       	eor	r1, r1
    4646:	08 95       	ret

00004648 <__udivmodhi4>:
    4648:	aa 1b       	sub	r26, r26
    464a:	bb 1b       	sub	r27, r27
    464c:	51 e1       	ldi	r21, 0x11	; 17
    464e:	07 c0       	rjmp	.+14     	; 0x465e <__udivmodhi4_ep>

00004650 <__udivmodhi4_loop>:
    4650:	aa 1f       	adc	r26, r26
    4652:	bb 1f       	adc	r27, r27
    4654:	a6 17       	cp	r26, r22
    4656:	b7 07       	cpc	r27, r23
    4658:	10 f0       	brcs	.+4      	; 0x465e <__udivmodhi4_ep>
    465a:	a6 1b       	sub	r26, r22
    465c:	b7 0b       	sbc	r27, r23

0000465e <__udivmodhi4_ep>:
    465e:	88 1f       	adc	r24, r24
    4660:	99 1f       	adc	r25, r25
    4662:	5a 95       	dec	r21
    4664:	a9 f7       	brne	.-22     	; 0x4650 <__udivmodhi4_loop>
    4666:	80 95       	com	r24
    4668:	90 95       	com	r25
    466a:	bc 01       	movw	r22, r24
    466c:	cd 01       	movw	r24, r26
    466e:	08 95       	ret

00004670 <do_rand>:
    4670:	8f 92       	push	r8
    4672:	9f 92       	push	r9
    4674:	af 92       	push	r10
    4676:	bf 92       	push	r11
    4678:	cf 92       	push	r12
    467a:	df 92       	push	r13
    467c:	ef 92       	push	r14
    467e:	ff 92       	push	r15
    4680:	cf 93       	push	r28
    4682:	df 93       	push	r29
    4684:	ec 01       	movw	r28, r24
    4686:	68 81       	ld	r22, Y
    4688:	79 81       	ldd	r23, Y+1	; 0x01
    468a:	8a 81       	ldd	r24, Y+2	; 0x02
    468c:	9b 81       	ldd	r25, Y+3	; 0x03
    468e:	61 15       	cp	r22, r1
    4690:	71 05       	cpc	r23, r1
    4692:	81 05       	cpc	r24, r1
    4694:	91 05       	cpc	r25, r1
    4696:	21 f4       	brne	.+8      	; 0x46a0 <do_rand+0x30>
    4698:	64 e2       	ldi	r22, 0x24	; 36
    469a:	79 ed       	ldi	r23, 0xD9	; 217
    469c:	8b e5       	ldi	r24, 0x5B	; 91
    469e:	97 e0       	ldi	r25, 0x07	; 7
    46a0:	2d e1       	ldi	r18, 0x1D	; 29
    46a2:	33 ef       	ldi	r19, 0xF3	; 243
    46a4:	41 e0       	ldi	r20, 0x01	; 1
    46a6:	50 e0       	ldi	r21, 0x00	; 0
    46a8:	9a df       	rcall	.-204    	; 0x45de <__divmodsi4>
    46aa:	49 01       	movw	r8, r18
    46ac:	5a 01       	movw	r10, r20
    46ae:	9b 01       	movw	r18, r22
    46b0:	ac 01       	movw	r20, r24
    46b2:	a7 ea       	ldi	r26, 0xA7	; 167
    46b4:	b1 e4       	ldi	r27, 0x41	; 65
    46b6:	be df       	rcall	.-132    	; 0x4634 <__muluhisi3>
    46b8:	6b 01       	movw	r12, r22
    46ba:	7c 01       	movw	r14, r24
    46bc:	ac ee       	ldi	r26, 0xEC	; 236
    46be:	b4 ef       	ldi	r27, 0xF4	; 244
    46c0:	a5 01       	movw	r20, r10
    46c2:	94 01       	movw	r18, r8
    46c4:	7d d0       	rcall	.+250    	; 0x47c0 <__mulohisi3>
    46c6:	dc 01       	movw	r26, r24
    46c8:	cb 01       	movw	r24, r22
    46ca:	8c 0d       	add	r24, r12
    46cc:	9d 1d       	adc	r25, r13
    46ce:	ae 1d       	adc	r26, r14
    46d0:	bf 1d       	adc	r27, r15
    46d2:	b7 ff       	sbrs	r27, 7
    46d4:	03 c0       	rjmp	.+6      	; 0x46dc <do_rand+0x6c>
    46d6:	01 97       	sbiw	r24, 0x01	; 1
    46d8:	a1 09       	sbc	r26, r1
    46da:	b0 48       	sbci	r27, 0x80	; 128
    46dc:	88 83       	st	Y, r24
    46de:	99 83       	std	Y+1, r25	; 0x01
    46e0:	aa 83       	std	Y+2, r26	; 0x02
    46e2:	bb 83       	std	Y+3, r27	; 0x03
    46e4:	9f 77       	andi	r25, 0x7F	; 127
    46e6:	df 91       	pop	r29
    46e8:	cf 91       	pop	r28
    46ea:	ff 90       	pop	r15
    46ec:	ef 90       	pop	r14
    46ee:	df 90       	pop	r13
    46f0:	cf 90       	pop	r12
    46f2:	bf 90       	pop	r11
    46f4:	af 90       	pop	r10
    46f6:	9f 90       	pop	r9
    46f8:	8f 90       	pop	r8
    46fa:	08 95       	ret

000046fc <rand_r>:
    46fc:	b9 cf       	rjmp	.-142    	; 0x4670 <do_rand>

000046fe <rand>:
    46fe:	80 e0       	ldi	r24, 0x00	; 0
    4700:	91 e0       	ldi	r25, 0x01	; 1
    4702:	b6 cf       	rjmp	.-148    	; 0x4670 <do_rand>

00004704 <srand>:
    4704:	a0 e0       	ldi	r26, 0x00	; 0
    4706:	b0 e0       	ldi	r27, 0x00	; 0
    4708:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    470c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    4710:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    4714:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    4718:	08 95       	ret

0000471a <memcpy>:
    471a:	fb 01       	movw	r30, r22
    471c:	dc 01       	movw	r26, r24
    471e:	02 c0       	rjmp	.+4      	; 0x4724 <memcpy+0xa>
    4720:	01 90       	ld	r0, Z+
    4722:	0d 92       	st	X+, r0
    4724:	41 50       	subi	r20, 0x01	; 1
    4726:	50 40       	sbci	r21, 0x00	; 0
    4728:	d8 f7       	brcc	.-10     	; 0x4720 <memcpy+0x6>
    472a:	08 95       	ret

0000472c <__itoa_ncheck>:
    472c:	bb 27       	eor	r27, r27
    472e:	4a 30       	cpi	r20, 0x0A	; 10
    4730:	31 f4       	brne	.+12     	; 0x473e <__itoa_ncheck+0x12>
    4732:	99 23       	and	r25, r25
    4734:	22 f4       	brpl	.+8      	; 0x473e <__itoa_ncheck+0x12>
    4736:	bd e2       	ldi	r27, 0x2D	; 45
    4738:	90 95       	com	r25
    473a:	81 95       	neg	r24
    473c:	9f 4f       	sbci	r25, 0xFF	; 255
    473e:	01 c0       	rjmp	.+2      	; 0x4742 <__utoa_common>

00004740 <__utoa_ncheck>:
    4740:	bb 27       	eor	r27, r27

00004742 <__utoa_common>:
    4742:	fb 01       	movw	r30, r22
    4744:	55 27       	eor	r21, r21
    4746:	aa 27       	eor	r26, r26
    4748:	88 0f       	add	r24, r24
    474a:	99 1f       	adc	r25, r25
    474c:	aa 1f       	adc	r26, r26
    474e:	a4 17       	cp	r26, r20
    4750:	10 f0       	brcs	.+4      	; 0x4756 <__utoa_common+0x14>
    4752:	a4 1b       	sub	r26, r20
    4754:	83 95       	inc	r24
    4756:	50 51       	subi	r21, 0x10	; 16
    4758:	b9 f7       	brne	.-18     	; 0x4748 <__utoa_common+0x6>
    475a:	a0 5d       	subi	r26, 0xD0	; 208
    475c:	aa 33       	cpi	r26, 0x3A	; 58
    475e:	08 f0       	brcs	.+2      	; 0x4762 <__utoa_common+0x20>
    4760:	a9 5d       	subi	r26, 0xD9	; 217
    4762:	a1 93       	st	Z+, r26
    4764:	00 97       	sbiw	r24, 0x00	; 0
    4766:	79 f7       	brne	.-34     	; 0x4746 <__utoa_common+0x4>
    4768:	b1 11       	cpse	r27, r1
    476a:	b1 93       	st	Z+, r27
    476c:	11 92       	st	Z+, r1
    476e:	cb 01       	movw	r24, r22
    4770:	00 c0       	rjmp	.+0      	; 0x4772 <strrev>

00004772 <strrev>:
    4772:	dc 01       	movw	r26, r24
    4774:	fc 01       	movw	r30, r24
    4776:	67 2f       	mov	r22, r23
    4778:	71 91       	ld	r23, Z+
    477a:	77 23       	and	r23, r23
    477c:	e1 f7       	brne	.-8      	; 0x4776 <strrev+0x4>
    477e:	32 97       	sbiw	r30, 0x02	; 2
    4780:	04 c0       	rjmp	.+8      	; 0x478a <strrev+0x18>
    4782:	7c 91       	ld	r23, X
    4784:	6d 93       	st	X+, r22
    4786:	70 83       	st	Z, r23
    4788:	62 91       	ld	r22, -Z
    478a:	ae 17       	cp	r26, r30
    478c:	bf 07       	cpc	r27, r31
    478e:	c8 f3       	brcs	.-14     	; 0x4782 <strrev+0x10>
    4790:	08 95       	ret

00004792 <eeprom_read_byte>:
    4792:	f9 99       	sbic	0x1f, 1	; 31
    4794:	fe cf       	rjmp	.-4      	; 0x4792 <eeprom_read_byte>
    4796:	92 bd       	out	0x22, r25	; 34
    4798:	81 bd       	out	0x21, r24	; 33
    479a:	f8 9a       	sbi	0x1f, 0	; 31
    479c:	99 27       	eor	r25, r25
    479e:	80 b5       	in	r24, 0x20	; 32
    47a0:	08 95       	ret

000047a2 <eeprom_write_byte>:
    47a2:	26 2f       	mov	r18, r22

000047a4 <eeprom_write_r18>:
    47a4:	f9 99       	sbic	0x1f, 1	; 31
    47a6:	fe cf       	rjmp	.-4      	; 0x47a4 <eeprom_write_r18>
    47a8:	92 bd       	out	0x22, r25	; 34
    47aa:	81 bd       	out	0x21, r24	; 33
    47ac:	20 bd       	out	0x20, r18	; 32
    47ae:	0f b6       	in	r0, 0x3f	; 63
    47b0:	f8 94       	cli
    47b2:	fa 9a       	sbi	0x1f, 2	; 31
    47b4:	f9 9a       	sbi	0x1f, 1	; 31
    47b6:	0f be       	out	0x3f, r0	; 63
    47b8:	01 96       	adiw	r24, 0x01	; 1
    47ba:	08 95       	ret

000047bc <__mulshisi3>:
    47bc:	b7 ff       	sbrs	r27, 7
    47be:	3a cf       	rjmp	.-396    	; 0x4634 <__muluhisi3>

000047c0 <__mulohisi3>:
    47c0:	39 df       	rcall	.-398    	; 0x4634 <__muluhisi3>
    47c2:	82 1b       	sub	r24, r18
    47c4:	93 0b       	sbc	r25, r19
    47c6:	08 95       	ret

000047c8 <_exit>:
    47c8:	f8 94       	cli

000047ca <__stop_program>:
    47ca:	ff cf       	rjmp	.-2      	; 0x47ca <__stop_program>
